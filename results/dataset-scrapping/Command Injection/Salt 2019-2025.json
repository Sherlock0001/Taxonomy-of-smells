{
  "total_count": 12,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/deitch/safeguards-plugin/commits/d953141ab23f0e625bcffc83b02fa7da8abdbf08",
      "sha": "d953141ab23f0e625bcffc83b02fa7da8abdbf08",
      "node_id": "MDY6Q29tbWl0MjkwNDk5MzAxOmQ5NTMxNDFhYjIzZjBlNjI1YmNmZmM4M2IwMmZhN2RhOGFiZGJmMDg=",
      "html_url": "https://github.com/deitch/safeguards-plugin/commit/d953141ab23f0e625bcffc83b02fa7da8abdbf08",
      "comments_url": "https://api.github.com/repos/deitch/safeguards-plugin/commits/d953141ab23f0e625bcffc83b02fa7da8abdbf08/comments",
      "commit": {
        "url": "https://api.github.com/repos/deitch/safeguards-plugin/git/commits/d953141ab23f0e625bcffc83b02fa7da8abdbf08",
        "author": {
          "date": "2020-09-01T15:17:32.000+03:00",
          "name": "Avi Deitcher",
          "email": "avi@deitcher.net"
        },
        "committer": {
          "date": "2020-09-01T14:17:32.000+02:00",
          "name": "GitHub",
          "email": "noreply@github.com"
        },
        "message": "feat: Support policy injection in `sls safeguards validate` command (#7)",
        "tree": {
          "url": "https://api.github.com/repos/deitch/safeguards-plugin/git/trees/d809658afed66ce1eb8eebb3630df81ef50d48cc",
          "sha": "d809658afed66ce1eb8eebb3630df81ef50d48cc"
        },
        "comment_count": 0
      },
      "author": {
        "login": "deitch",
        "id": 282526,
        "node_id": "MDQ6VXNlcjI4MjUyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deitch",
        "html_url": "https://github.com/deitch",
        "followers_url": "https://api.github.com/users/deitch/followers",
        "following_url": "https://api.github.com/users/deitch/following{/other_user}",
        "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
        "organizations_url": "https://api.github.com/users/deitch/orgs",
        "repos_url": "https://api.github.com/users/deitch/repos",
        "events_url": "https://api.github.com/users/deitch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/deitch/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/deitch/safeguards-plugin/commits/b0f6bf36907d0d59fc92072d7c176b6053fe2a4e",
          "html_url": "https://github.com/deitch/safeguards-plugin/commit/b0f6bf36907d0d59fc92072d7c176b6053fe2a4e",
          "sha": "b0f6bf36907d0d59fc92072d7c176b6053fe2a4e"
        }
      ],
      "repository": {
        "id": 290499301,
        "node_id": "MDEwOlJlcG9zaXRvcnkyOTA0OTkzMDE=",
        "name": "safeguards-plugin",
        "full_name": "deitch/safeguards-plugin",
        "private": false,
        "owner": {
          "login": "deitch",
          "id": 282526,
          "node_id": "MDQ6VXNlcjI4MjUyNg==",
          "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/deitch",
          "html_url": "https://github.com/deitch",
          "followers_url": "https://api.github.com/users/deitch/followers",
          "following_url": "https://api.github.com/users/deitch/following{/other_user}",
          "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
          "organizations_url": "https://api.github.com/users/deitch/orgs",
          "repos_url": "https://api.github.com/users/deitch/repos",
          "events_url": "https://api.github.com/users/deitch/events{/privacy}",
          "received_events_url": "https://api.github.com/users/deitch/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/deitch/safeguards-plugin",
        "description": "Serverless Framework Plugin to enforce safeguard policies",
        "fork": false,
        "url": "https://api.github.com/repos/deitch/safeguards-plugin",
        "forks_url": "https://api.github.com/repos/deitch/safeguards-plugin/forks",
        "keys_url": "https://api.github.com/repos/deitch/safeguards-plugin/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/deitch/safeguards-plugin/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/deitch/safeguards-plugin/teams",
        "hooks_url": "https://api.github.com/repos/deitch/safeguards-plugin/hooks",
        "issue_events_url": "https://api.github.com/repos/deitch/safeguards-plugin/issues/events{/number}",
        "events_url": "https://api.github.com/repos/deitch/safeguards-plugin/events",
        "assignees_url": "https://api.github.com/repos/deitch/safeguards-plugin/assignees{/user}",
        "branches_url": "https://api.github.com/repos/deitch/safeguards-plugin/branches{/branch}",
        "tags_url": "https://api.github.com/repos/deitch/safeguards-plugin/tags",
        "blobs_url": "https://api.github.com/repos/deitch/safeguards-plugin/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/deitch/safeguards-plugin/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/deitch/safeguards-plugin/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/deitch/safeguards-plugin/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/deitch/safeguards-plugin/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/deitch/safeguards-plugin/languages",
        "stargazers_url": "https://api.github.com/repos/deitch/safeguards-plugin/stargazers",
        "contributors_url": "https://api.github.com/repos/deitch/safeguards-plugin/contributors",
        "subscribers_url": "https://api.github.com/repos/deitch/safeguards-plugin/subscribers",
        "subscription_url": "https://api.github.com/repos/deitch/safeguards-plugin/subscription",
        "commits_url": "https://api.github.com/repos/deitch/safeguards-plugin/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/deitch/safeguards-plugin/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/deitch/safeguards-plugin/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/deitch/safeguards-plugin/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/deitch/safeguards-plugin/contents/{+path}",
        "compare_url": "https://api.github.com/repos/deitch/safeguards-plugin/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/deitch/safeguards-plugin/merges",
        "archive_url": "https://api.github.com/repos/deitch/safeguards-plugin/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/deitch/safeguards-plugin/downloads",
        "issues_url": "https://api.github.com/repos/deitch/safeguards-plugin/issues{/number}",
        "pulls_url": "https://api.github.com/repos/deitch/safeguards-plugin/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/deitch/safeguards-plugin/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/deitch/safeguards-plugin/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/deitch/safeguards-plugin/labels{/name}",
        "releases_url": "https://api.github.com/repos/deitch/safeguards-plugin/releases{/id}",
        "deployments_url": "https://api.github.com/repos/deitch/safeguards-plugin/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/commits/d953141ab23f0e625bcffc83b02fa7da8abdbf08",
      "sha": "d953141ab23f0e625bcffc83b02fa7da8abdbf08",
      "node_id": "MDY6Q29tbWl0NTY0NzcyODQ5OmQ5NTMxNDFhYjIzZjBlNjI1YmNmZmM4M2IwMmZhN2RhOGFiZGJmMDg=",
      "html_url": "https://github.com/caoloss/-serverless-safeguards-pluginpy/commit/d953141ab23f0e625bcffc83b02fa7da8abdbf08",
      "comments_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/commits/d953141ab23f0e625bcffc83b02fa7da8abdbf08/comments",
      "commit": {
        "url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/git/commits/d953141ab23f0e625bcffc83b02fa7da8abdbf08",
        "author": {
          "date": "2020-09-01T15:17:32.000+03:00",
          "name": "Avi Deitcher",
          "email": "avi@deitcher.net"
        },
        "committer": {
          "date": "2020-09-01T14:17:32.000+02:00",
          "name": "GitHub",
          "email": "noreply@github.com"
        },
        "message": "feat: Support policy injection in `sls safeguards validate` command (#7)",
        "tree": {
          "url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/git/trees/d809658afed66ce1eb8eebb3630df81ef50d48cc",
          "sha": "d809658afed66ce1eb8eebb3630df81ef50d48cc"
        },
        "comment_count": 0
      },
      "author": {
        "login": "deitch",
        "id": 282526,
        "node_id": "MDQ6VXNlcjI4MjUyNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/282526?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deitch",
        "html_url": "https://github.com/deitch",
        "followers_url": "https://api.github.com/users/deitch/followers",
        "following_url": "https://api.github.com/users/deitch/following{/other_user}",
        "gists_url": "https://api.github.com/users/deitch/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/deitch/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/deitch/subscriptions",
        "organizations_url": "https://api.github.com/users/deitch/orgs",
        "repos_url": "https://api.github.com/users/deitch/repos",
        "events_url": "https://api.github.com/users/deitch/events{/privacy}",
        "received_events_url": "https://api.github.com/users/deitch/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/commits/b0f6bf36907d0d59fc92072d7c176b6053fe2a4e",
          "html_url": "https://github.com/caoloss/-serverless-safeguards-pluginpy/commit/b0f6bf36907d0d59fc92072d7c176b6053fe2a4e",
          "sha": "b0f6bf36907d0d59fc92072d7c176b6053fe2a4e"
        }
      ],
      "repository": {
        "id": 564772849,
        "node_id": "R_kgDOIam_8Q",
        "name": "-serverless-safeguards-pluginpy",
        "full_name": "caoloss/-serverless-safeguards-pluginpy",
        "private": false,
        "owner": {
          "login": "caoloss",
          "id": 90993910,
          "node_id": "MDQ6VXNlcjkwOTkzOTEw",
          "avatar_url": "https://avatars.githubusercontent.com/u/90993910?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/caoloss",
          "html_url": "https://github.com/caoloss",
          "followers_url": "https://api.github.com/users/caoloss/followers",
          "following_url": "https://api.github.com/users/caoloss/following{/other_user}",
          "gists_url": "https://api.github.com/users/caoloss/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/caoloss/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/caoloss/subscriptions",
          "organizations_url": "https://api.github.com/users/caoloss/orgs",
          "repos_url": "https://api.github.com/users/caoloss/repos",
          "events_url": "https://api.github.com/users/caoloss/events{/privacy}",
          "received_events_url": "https://api.github.com/users/caoloss/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/caoloss/-serverless-safeguards-pluginpy",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy",
        "forks_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/forks",
        "keys_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/teams",
        "hooks_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/hooks",
        "issue_events_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/issues/events{/number}",
        "events_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/events",
        "assignees_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/assignees{/user}",
        "branches_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/branches{/branch}",
        "tags_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/tags",
        "blobs_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/languages",
        "stargazers_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/stargazers",
        "contributors_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/contributors",
        "subscribers_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/subscribers",
        "subscription_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/subscription",
        "commits_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/contents/{+path}",
        "compare_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/merges",
        "archive_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/downloads",
        "issues_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/issues{/number}",
        "pulls_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/labels{/name}",
        "releases_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/releases{/id}",
        "deployments_url": "https://api.github.com/repos/caoloss/-serverless-safeguards-pluginpy/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/commits/0aeb7e44173a101ba6932cae86f547a76e56ca2e",
      "sha": "0aeb7e44173a101ba6932cae86f547a76e56ca2e",
      "node_id": "MDY6Q29tbWl0MTEzOTk5MzkwOjBhZWI3ZTQ0MTczYTEwMWJhNjkzMmNhZTg2ZjU0N2E3NmU1NmNhMmU=",
      "html_url": "https://github.com/slsdetectorgroup/slsDetectorPackage/commit/0aeb7e44173a101ba6932cae86f547a76e56ca2e",
      "comments_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/commits/0aeb7e44173a101ba6932cae86f547a76e56ca2e/comments",
      "commit": {
        "url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/git/commits/0aeb7e44173a101ba6932cae86f547a76e56ca2e",
        "author": {
          "date": "2024-11-26T11:13:45.000+01:00",
          "name": "Dhanya Thattil",
          "email": "dhanya.thattil@psi.ch"
        },
        "committer": {
          "date": "2024-11-26T11:13:45.000+01:00",
          "name": "GitHub",
          "email": "noreply@github.com"
        },
        "message": "9.0.0.rc (#1058)\n\n* dev: update 2d gain plot color map (if no x and ymin/max changes or window resizing): setFixedWidth was updating for window resize, updated virtual servers for g2 and jungfrau to keep changing gain and data for every frame. the data value (#819)\r\n\r\n* Dev/jf/fix pedestal (#821)\r\n\r\n* jf pedestal fix: touch enable bit last\r\n\r\n* dev: jf sync: stopping master gives idle (#824)\r\n\r\n* jf sync mode master could return idle when stopped and so not all modules return the same value and must check for 'stopped or idle', Also must throw if any of the module gives an error\r\n\r\n* added contains_only to sls::Result (#827)\r\n\r\n* added variadic template for checking if a result contains only specified values\r\n\r\n* fix for gcc4.8\r\n\r\n* renamed to Result::contains_only\r\n\r\n* updated condition in Detector.cpp\r\n\r\n* stop on only the positions\r\n\r\n---------\r\n\r\nCo-authored-by: Erik Fröjdh <erik.frojdh@gmail.com>\r\n\r\n* dev jf: change status reg bits  (#829)\r\n\r\n* jf: rewrite of status reg bits, waiting state includes both wati for trigger and start frame, blocking trigger only waits if its not in waiting for trigger and run busy enabled, error state connected in firmware\r\n\r\n* dev jf: reconfigure chip when touching electron collection mode bit (#831)\r\n\r\n* jf: if bit 14 in reg 0x5d (electron mode collection bit) is changed, configure chip if v1.1 and powered on. so touch writeregister (setbit/clearbit also calls write register in the end). replace when electroncollectionmode command introduced\r\n\r\n* eiger required fw version to 32: fix for blocking trigger in quad (#834)\r\n\r\n* fix warning for prev_val (variable size array) in tests (#838)\r\n\r\n* Dev: : gui acq finished callback for different status (#850)\r\n\r\n* fix acquisition finished status to have different status for different modules, but does not have to be error. for eg. jf sync fw (2.4.1 gives idle for master and stopped for slaves when stopping acquiistion)\r\n\r\n* handling inconsistent fnums to be -1 in gui, so when one sets 0 (change of value) will also give an exception (#854)\r\n\r\n* Dev: fix py virtual test  (#846)\r\n\r\n* draft to fix virtual test when it fails\r\n\r\n* catching errors in tests and removing sigchild ignore so servers (process in background) executing commands will not fail (pclose no child processes, if sigchld is ignored) fixed\r\n\r\n* uncommented python loading config\r\n\r\n* somehow killal slsReciever in second detector test fails even though no receiver running\r\n\r\n* fixing script for virtual simlator test:fixed issue with check if process running, fixed moench tests\r\n\r\n* formatting\r\n\r\n* tests for jf (#835)\r\n\r\n* execute command inside server fixed (from fix simulator tests and exec command PR) (#857)\r\n\r\n* dev: fix server logic in checking detector idle  (#861)\r\n\r\n* fix buggy logic in checking detector idle and an argument check\r\n\r\n* Dev: trigger signal issues handled at acquire (#864)\r\n\r\n* if blocking and handling sync, only master gets blocking acq, slaves get non blocking as they are first and so dont get status or error caught when slaves dont get trigger (due to not connected etc) and acq returns with slaves still in waiting status. so check status of all in blocking acq\r\n\r\n* for all dets with sync, ensure atleast one master when starting acq\r\n\r\n* docs updated about sync\r\n\r\n* minor fix for test_simulator\r\n\r\n* updating docs\r\n\r\n* fixed doc\r\n\r\n* added python 3.12 to the conda build variants\r\n\r\n* documentation and examples\r\n\r\n* formatting\r\n\r\n* forward declare zmq_msg_t and moved include (#869)\r\n\r\n* forward declare zmq_msg_t and moved include\r\n\r\n* removed zmq from pkg list\r\n\r\n* removed zmq as dependency for slsdet (#870)\r\n\r\n* dev: moench: min exptime (#865)\r\n\r\n* moench: remove min clock cycles for setting exptime (had been ported from jf)\r\n\r\n* commands code generation (#871)\r\n\r\n* commands code generation  (#803)\r\n\r\n* commands code generation for only frames command\r\n\r\n* fix cmake file and add Caller files\r\n\r\n* working exptime, fully extended commands file and its variants\r\n\r\n* start adding template commands\r\n\r\n* add INT_CMD_VEC_ID template\r\n\r\n* add list command, generate multiple bins, format code\r\n\r\n* reach 208 commands using the cpp macros\r\n\r\n* add tests for command parser\r\n\r\n* start adding tests for commands parser\r\n\r\n* fix typo to use commands.yaml\r\n\r\n* add more tests for command_parser\r\n\r\n* add all template functions (up to 218 commands)\r\n\r\n* finish template functions and add more CmdProxy.cpp functions (250+)\r\n\r\n* 257 commands\r\n\r\n* 300 commands the rest are very special commands\r\n\r\n* add special commands without generation\r\n\r\n* separate special functions from generated c++ file\r\n\r\n* implementing one command for put and get (buggy)\r\n\r\n* add infer action in a separate file\r\n\r\n* generate header for special commands from yaml\r\n\r\n* allow only 0 or 1 for bool inputs\r\n\r\n* group all commands in gen_commands.py\r\n\r\n* add help to gen_commands.py\r\n\r\n* add autocomplete bash script\r\n\r\n* autocompletion: add support for module levels and help\r\n\r\n* remove debugging line\r\n\r\n* add autocompletion, help to commands, change int [0,1] to bool\r\n\r\n* copy tests for Caller.cpp. Tests pass\r\n\r\n* update with the new developer branch changes\r\n\r\n* fix errors after merging (there is problems with tests)\r\n\r\n* fixed port/stopport in yaml (intput typo), added '_caller' to the test dac and test on chip dac command in global test for cmdcaller\r\n\r\n* undo previous test simulator debug change\r\n\r\n* add documentation for the generated code\r\n\r\n* reducing the comment to be replaced in length so formatting does not split into 2 lines\r\n\r\n* removed formatting specific style of C++11 in gen_commands.py to keep with the top level clang format of the project\r\n* regeneratign code for commands\r\n\r\n* automation generated\r\n\r\n* Redirect deprecated commands (#872)\r\n\r\n* working implementation, need to fix dac\r\n\r\n* fixed deprecation redirect for dac command\r\n\r\n* Detector specific autocomplete (#873)\r\n\r\n* working implementation, need to fix dac\r\n\r\n* fixed deprecation redirect for dac command\r\n\r\n* detector specific completion for dac\r\n\r\n* added autocomplete using detector specific\r\n\r\n* fixed error when autocompleting partial words\r\n\r\n* Generate commands/fix commands (#875)\r\n\r\n* fix vm_a, im_a etc have deg Celsius suffix, also help missing or changed in some places\r\n\r\n* dac: require det id for all, arg0 to be printed at output, help for onchip dac and dac, onchipdac: spacing\r\n\r\n* getscan detid and blocking trigger help\r\n\r\n* udp_Dstlist det_id fixed, but rx_id invalid\r\n\r\n* cmdApp in line with cmdLineApp (missing version, receiver_id, not creating det object in help action\r\n\r\n* added set_command to differentiate between check_det_id and require_det_id (mixed up), args: -1 needs to check for at least one argument\r\n\r\n* reordering\r\n\r\n* reordering and checked till integer_command_hex\r\n\r\n* fixed a lot more commands\r\n\r\n* fix caller tests for eiger\r\n\r\n* changes to tests after Bechir left\r\n\r\n* changing .cmd to .cmdcall for the caller commands\r\n\r\n* fixed tests for caller, still warning for setexptime about cast input\r\n\r\n* autocomplete ran\r\n\r\n* add moench test\r\n\r\n* regenerating autocomplete and commands\r\n\r\n* fixing other things from merge conflicts (renaming slsDetectorDefs to defs in commands.yaml)\r\n\r\n* formatting\r\n\r\n* added code injection to help (#876)\r\n\r\n* updated 3 commands to have get output that can be put into put (#877)\r\n\r\n* updated some commands to have get output that can be put into put\r\n\r\n* fix tests for clkdiv\r\n\r\n* adding help to free (#878)\r\n\r\n* removing old commands and renaming them, (also making it work for parameters command as it was still calling cmdproxy) (#879)\r\n\r\n* More helpful error messages for unsupported actions (#880)\r\n\r\n* removing old commands and renaming them, (also making it work for parameters command as it was still calling cmdproxy)\r\n\r\n* Added specific help for unsupported actions\r\n\r\n* fixed a vetofile get special exception message. more specific warning for special exception message instead of no function warning\r\n\r\n* added condition checking true in exceptions for special message\r\n\r\n---------\r\nCo-authored-by: Bechir Brahem <bachbrahem@gmail.com>\r\nCo-authored-by: Erik Frojdh <erik.frojdh@gmail.com>\r\nCo-authored-by: Dhanya Thattil <dhanya.thattil@psi.ch>\r\n\r\n* Generate commands/fix det command rename (#881)\r\n\r\n* made a link to bash autocompletion script in main folder, and replaced all references to 'det' command with 'sls_detector'\r\n\r\n* Generate commands/fix detp detg command rename (#882)\r\n\r\n* replacing detp with sls_Detector_put and detg with sls_detector_get\r\n\r\n* sls_detector_not implemented, but extended message to ask user to use sls_detector_get or sls_detector_put\r\n\r\n* autocompletion also for sls_detector or det\r\n\r\n* Xilinx ctb (#884)\r\n\r\n* updated registers, arm64\r\n\r\n* compiler set to aarch64 for xilinx server\r\n\r\n* updated RegisterDefs.h\r\n\r\n* merge into generate branch and resolving conflicts and adding the xilinx changes to callerspecial and commands.yaml\r\n\r\n* compiles and can print firmware version (using a different csp0 address)\r\n\r\n* fixing other servers (gotthard, jungfrau, moench, mythen3) that it returns in case of mapping failure, xilinxctb: added that it checks type, prints proper fw version, checks kernel date, added armprocessor define to use in common places, added specifiers to supress overflow and truncation warnings\r\n\r\n* added detector ip and mac adddress to the printout\r\n\r\n* fixed tests and recompiled servers\r\n\r\n* Xilinx client tests (#887)\r\n\r\n* implemented testbus, testfpga, set/get #frames, triggers, allowed that and for connection to client, also allowed, getnumchannels, configuremac, getrunstatus, setdetectorposition with dummy values\r\n\r\n* allowing tests for xilinx\r\n\r\n* binaries in\r\n\r\n* Dev/xilinx defaults and pattern (#888)\r\n\r\n* implemented testbus, testfpga, set/get #frames, triggers, allowed that and for connection to client, also allowed, getnumchannels, configuremac, getrunstatus, setdetectorposition with dummy values\r\n\r\n* connected kernelversion, hardwareversion, versions, framesl, triggersl, dr, timingmode, pattern (except patioctrl) thats there for altera ctb\r\n\r\n* replaced set/get64Bit to set/getU64bit in all loadpattern.c for (ctb and m3 also)\r\n\r\n* minor\r\n\r\n* updated commands generation\r\n\r\n* formatting\r\n\r\n* moench default speed set to after init readout configuration (half speed) (#886)\r\n\r\n* Fixed path when building as submodule\r\n\r\n* Moench v8 (#892)\r\n\r\n* new rct structure for moench03\r\n\r\n* new moench data structure for offline processing\r\n\r\n* meonch raw data and zmq process files updated to 7.0.3 version\r\n\r\n* implemented config file for Zmq file\r\n\r\n* raw data and zmq work with config file, but only with one file/interface\r\n\r\n* zmq config change\r\n\r\n* added config examples for zmq and rawdata\r\n\r\n* pmod for 7.0.3 and 8.0.0 from previous releases\r\n\r\n* updated pmod 8.0.1 for rh7 and rh8\r\n\r\n* m3 fix to get kernel version properly on nios without an incorrect error msg (#898)\r\n\r\n* moench: changed max shifts of adc clk from 240 to 200 (#900)\r\n\r\n* Protect from getenv(\"HOME\") returning nullptr  (#907) (#908)\r\n\r\n* Protect from getenv(\"HOME\") returning nullptr (e.g., in case running in systemd)\r\n\r\n* Write proper warning in Module.cpp\r\n\r\nCo-authored-by: Filip Leonarski <filip.leonarski@psi.ch>\r\n\r\n* Dev/xilinx acq (#901)\r\n\r\n* period and exptime(patternwaittime level 0)\r\n\r\n* added new regsieterdefs and updated api version and fixedpattern reg\r\n\r\n* autogenerate commands\r\n\r\n* formatting\r\n\r\n* minor\r\n\r\n* wip resetflow, readout mode, transceiver mask, transceiver enable\r\n\r\n* acquisition, but streaming done bit and busy (exposing + read chip to fifo) not known yet from fw\r\n\r\n* programming fpga and device tree done\r\n\r\n* most configuration done, need to connect configuretransceiver to client\r\n\r\n* stuck at resetting transciever timed out\r\n\r\n* minor\r\n\r\n* fixed virtual, added chip busyto fifo, streaming busy, set/getnext framenumber\r\n\r\n* configuretransceiver from client, added help in client\r\n\r\n* make formatt and command generation\r\n\r\n* tests for xilinx ctb works\r\n\r\n* command generation\r\n\r\n* dacs added and tested, power not done\r\n\r\n* power added\r\n\r\n* added temp_fpga\r\n\r\n* binaries in\r\n\r\n* ctrlreg is 0 to enable chip=fixed, high dac val = min val= fixed, power regulators in weird order=fixed, device tree could be loaded with dacs before adcs=fixed\r\n\r\n* start works\r\n\r\n* virtual server sends\r\n\r\n* receiver works\r\n\r\n* tests\r\n\r\n* python function and enum generation, commands generatorn and autocomplete, formatting, tests\r\n\r\n* tests fail at start(transceiver not aligned)\r\n\r\n* tests passed\r\n\r\n* all binaries compiled\r\n\r\n* eiger binary in\r\n\r\n* added --nomodule cehck for xilinx\r\n\r\n* updated binaries\r\n\r\n* formatting\r\n\r\n* moench server: changed default values of adcphase for full speed from 300 to 150 and dac vipre_cds from 800 to 1280 (#922)\r\n\r\n* client bug fix: m3 multi module bad channel file throws bad allocation when modules skipped, needed to add vectors in 2d vector of bad channel list (#920)\r\n\r\nCo-authored-by: Erik Fröjdh <erik.frojdh@gmail.com>\r\n\r\n* developer: blocking acquire stop with slave temporarily in waiting (#926)\r\n\r\n* client: stopping a blocking acquire of multi modules checks status to catch slaves that might still be in waiting. Problem is (gotthard2 25um at least) slave is in waiting only temporarily before going go idle/stopped. So a 50ms sleep is necessary ot not throw an unnecessary error\r\n\r\n* client: when stopping blocking acquire, wait up to 1s in 50ms increments for slave to stop waiting temporarily\r\n\r\n* fix to rapidjson for build with gcc 14 (#929)\r\n\r\n* Dev: m3 clkdiv0 20 (#924)\r\n\r\n* m3: clk 0 changed from 10 to 20 (100MHz to 50MHz)\r\n\r\n* g2: startup clk div back to 10 as in firmware but setting in software startup to 20\r\n\r\n* m3: minor print error if clk divider > max\r\n\r\n* G2: reconfigure chip (#927)\r\n\r\n* changed common.c readADCFromFile to make it more general and move temperature calculation for Eiger out of this function and inside whereever it is called.\r\n* g2 and m2: gethighvoltage was just a variable set in server, it is now moved to a get inside DAC5671 implementation (but not reading a measured value, instead what is set from a file), high voltage variable used inside DAC5671 for virtual servers\r\n* g2: switching off hv (ifrom non zero to zero value) will wait for 10s; powering on chip reconfigures chip; powering off chip unconfigures chip; powering off chip also includes check if hv = 0, if not throw exception; chip configuration checked before acquring; at start up: hv switched off and chip powered on, so does not wait 10s to switch off hv;\r\n* included test to check powering off chip when hv is on should throw an exception\r\n* g2:  check if chip configured before acquiring\r\n\r\n* nios: read hv value set from file and virtual still goes into DAC5671 for conversions to and fro dac to V, change common readadc to readparameter to generalize, make sethighvoltage into a get and set to catch errors in get as well, g2: if not at startup, remmeber hv value before setting it and after check if value was being switched off (from a non zero value) and wait 10s if it was (10s wait only for switching off from non zero and not at startup)\r\n\r\n* developer: moench empty data callback  (#936)\r\n\r\n* moench (feature to wait for post processing to be done in new sls_detector_acquire_zmq executable)\r\n\r\nREADOUT_ACTION_ZMQ added to action enums\r\nsls_detector_acquire_zmq added to executables\r\nempty data call back so that client listens to last dummy zmq packet from moench post processor\r\nprocessor: remove NEWZMQ ifdefs and remove connect for zmq publisher socket\r\n\r\n* fix to compile\r\n\r\n* cmds generated and parsed\r\n\r\n* dev: client: status for blocking acquire stop with slave temporarily in waiting (#944)\r\n\r\n* acq finish call back gets status squashed with default error but before that need to wait for gotthard slaves to catch up from waiting to stopped\r\n\r\n* bug fixes related to file saving (#931) (#946)\r\n\r\n* fix the file path resetting issue of GUI in the case where different modules have different fpath setting.\r\n\r\n* fix stack-buffer-overflow issue when using HDF5 HDF5DataFile::parameterDataTypes have 64bit type (i.e. STD_U64LE), the size of fill_value should be at least 8 bytes.\r\n\r\n* change the type of fill_value to uint64_t\r\n\r\nCo-authored-by: Z.H. Li <zhenghenge@gmail.com>\r\n\r\n* updated documentation from martin (#948)\r\n\r\n* Dev/xilinx ctb test (#942)\r\n\r\n* voltage regulators only looks at dac and not at ctrl_reg\r\n\r\n* xilinx: change dac max to 2048, setting dac ist not inverse conversion from dac to voltage anymore, but setting power is inverse, also there is max and min to power, a different min for vio and this is checked at funcs interface, not printign or converting to mv in dac for power regulators (as its conversion max and min are different)\r\n\r\n* Use links for dacs/adc and adapt power rglt thresholds\r\n\r\n* Remove wait for transceiver reset\r\n\r\n* adc and dac device not used anymore and hence removed\r\n\r\n* udp restucturing: arm has to be multiple of 16 and no byteswap in udp_gen, option to compile locally in arm architecture, memsize of the second udp memory has to be limited\r\n\r\n---------\r\n\r\nCo-authored-by: Martin Brückner <martin.brueckner@psi.ch>\r\n\r\n* formatting\r\n\r\n* dev: jungfrau HW 1.0: adc output clock phase to 120 (#952)\r\n\r\n* jungfrau: change adc output clock phase from 180 to 120 for v1.0 boards for reliable readout of adc #2\r\n\r\n* versioning\r\n\r\n* formatting\r\n\r\n* rx: moved creating fpath (if it doesnt exist) from setting file path to at the start of acquisition when creating file. This is done here so that it does not fail if fwrite is disabled anyway. Also fixed it in documentation. Changed in documentation that the default for fwrite is disabled (#957)\r\n\r\n* added keepalive zmq socket option (after 60s of idle time, 10 probes every sec. Mainly because an issue at Max IV (#956)\r\n\r\n* Moench mess from developer (#953)\r\n\r\n* new moench data structure for offline processing\r\n\r\n* Dev/zmq stream all ipv6 adn remove rx_zmqip (#958)\r\n\r\n* enable ipv6 in zmq socket\r\n\r\n* removed rx_zmqip API and field in gui, changed client updaterxrzip to updateclientzmqip to have the rx_hostname ip if 0. \r\n\r\n* updated command line for rx_zmqip to give a warning. \r\n\r\n* Replaced 'depreciated' to 'deprecated' everywhere\r\n\r\n* switching from * to 0.0.0.0 works for rebinding zmq sockets\r\n\r\n* fixed help in command line for rx_zmqip * to 0.0.0.0 and removed cmd in python\r\n\r\n* remove publisher zmq socket ip also for moench post processing\r\n\r\n* fixed tests\r\n\r\n* publisher zmq ip macros to be reused\r\n\r\n* fixed a warning about narrowing conversion from size_t to int (#963)\r\n\r\n* fixed stop server not starting up with setup variables (#949)\r\n\r\n* m3: fixed stop server not starting up with setup variables\r\n\r\n* all servers except eiger fixed for virtual stop server to start up with setupDetector function called\r\n\r\n* virtual tests work\r\n\r\n* eiger: versions print neednt be in stop server\r\n\r\n* jungfrau: stop server (not virtual) also needs to read config file\r\n\r\n* ensuring master is setup for virtual and real servers\r\n\r\n* Dev/pyctbgui merge (#960)\r\n\r\n* added empty c extension\r\n\r\n* added rotation to the decoding\r\n\r\n* added color map, options and findex\r\n\r\n* minor\r\n\r\n* move checks to before acquisition\r\n\r\n* added pixel map based decoder\r\n\r\n* cleanup\r\n\r\n* no thread creation for single thread processing\r\n\r\n* added rotation and test to compare\r\n\r\n* allow high and low water mark for zmq (also buffer size) for fast readouts\r\n\r\n* removed roatation during decoding\r\n\r\n* added Transpose to image and invert Y False to invert it\r\n\r\n* retains the zoomed state after the first image of gui, catch and display exception if no detector connected\r\n\r\n* moved start frame to dockable widget, removed extra frame number label, moved current measurement also to dockable widget, hide frame plot entirely when showing patternviewer\r\n\r\n* first image dependin on which plot\r\n\r\n* remember settings of main window size and position, dockewidget if docked, its size and posisiotn as well, then update it next time the gui is opened\r\n\r\n* change in comment\r\n\r\n* using c decoder for moench 04 and matterhorn\r\n\r\n* catch exception from invalid image from decoder\r\n\r\n* clean up\r\n\r\n* update row and col when choosing image type, neeeded to show values\r\n\r\n* fix for previous PR\r\n\r\n* disable resetting colormap values\r\nkeep the range selected for every new acquisition\r\n\r\n* fix typos + tested on virtual matterhorn\r\n\r\n* minor print\r\n\r\n* refactored Slow ADCs Tab\r\n\r\n* refactored DAC tab\r\n\r\n* refactored power supplies\r\n\r\n* refactored signals tab\r\n\r\n* refactored transceiver tab\r\n\r\n* fix typo\r\n\r\n* fix typo2\r\n\r\n* remove commented code\r\n\r\n* delete commented code\r\n\r\n* delete commented code\r\n\r\n* delete commented signals code\r\n\r\n* remove commented code for transceiver tab\r\n\r\n* refactor adc tab\r\n\r\n* refactor Pattern Tab\r\n\r\n* Refactor transceivers tab (PR#5) (#118)\r\n\r\n* refactored transceiver tab\r\n\r\n* remove commented code for transceiver tab\r\n\r\n---------\r\n\r\nCo-authored-by: Erik Frojdh <erik.frojdh@gmail.com>\r\n\r\n* refactor adc tab (PR#6) (#119)\r\n\r\n\r\n* refactor adc tab\r\n\r\n* refactored Plot and Acquisition Tabs\r\n\r\n* fix the regression issue\r\n\r\n* restructure project files\r\n\r\n* applying singleton and renaming tabs to services\r\n\r\n* working install using pip\r\n\r\n* applies singleton to tab classes and remove CI erros\r\n\r\n* added pyzmq and pillow\r\n\r\n* remove the singleton implementation and keep changes\r\n\r\n* fix merge errors in mainWindow\r\n\r\n* moved misplaced init file\r\n\r\n* rename service to tab\r\n\r\n* reorganize imports\r\n\r\n* iterate over tabs\r\n\r\n* reorder tabs\r\n\r\n* add slowadc to the list\r\n\r\n* saving changes (buggy)\r\npower supply ui not showing in the gui\r\n\r\n* split power supply tab\r\n\r\n* fixed tests\r\n\r\n* add hardcoded values to defines file\r\n\r\n* fix error\r\n\r\n* separate power supply\r\n\r\n* fix errors for powerSuppliesTab\r\n\r\n* split dacs\r\n\r\n* split slow adcs\r\n\r\n* split signals tab\r\n\r\n* added tests for bit_utils\r\n\r\n* add slowAdc class to defines\r\n\r\n* split transceiver ui file\r\n\r\n* split adc.ui\r\n\r\n* split pattern ui file\r\n\r\n* split plot and acquisition ui file\r\n\r\n* added basic test for parsing bit names\r\n\r\n* removed redundant code in read_alias_file\r\n\r\n* fix dacs ui position\r\n\r\n* testing for correct exception\r\n\r\n* cmd and args at split\r\n\r\n* group radio buttons\r\n\r\n* fix comments from PR#1\r\n\r\n* show legend\r\n\r\n* added python version and dev requirements to setup.py\r\n\r\n* fix dac issue\r\n\r\n* moved _decoder into pkg\r\n\r\n* added inplace build\r\n\r\n* removed clear\r\n\r\n* fixed dependencies\r\n\r\n* make tests run without slsdet\r\n\r\n* updated name of action\r\n\r\n* define colcount\r\n\r\n* fixed loading of alias file\r\n\r\n* add yapf and ruff\r\n\r\n* apply formatting\r\n\r\n* fix E and F rules\r\n\r\n* add more ruff rules\r\n\r\n* change variable name\r\n\r\n* squashing gh debugging commits and add pre-commit\r\n\r\n* update label values to mv units\r\n\r\n* add hook for yapf\r\n\r\n* reconfigure yapf precommit hook\r\n\r\n* add format and check_format to makefile\r\n\r\n* change gh actions\r\n\r\n* update readme\r\n\r\n* added check_format\r\n\r\n* WIP\r\n\r\n* added linting in github action\r\n\r\n* updated readme]\r\n\r\n* add more control for color choice\r\n\r\n* remove useless file\r\n\r\n* fix un-updated line after refactoring Defines\r\nBIT0_31_MASK is not found in Defines.signals\r\n\r\n* visually improve the interface\r\n\r\n* fix last commit\r\n\r\n* add only selected plots for legend\r\n\r\n* add hide legend button\r\n\r\n* change hide legend to show legend\r\ncheckbox show legend is checked by default\r\n\r\n* add support for saving in numpy\r\n\r\n* solve conversations\r\n\r\n* fix acq index offset\r\n\r\n* fix browse button in pattern error\r\n\r\n* fix other browse button errors\r\n\r\n* finish tests and add usage.md\r\n\r\n* remove buffer\r\n\r\n* add file,numpy-like interface and tests\r\n\r\n* remove useless .npy files\r\n\r\n* subscriptible npz files\r\n\r\n* remove useless files\r\n\r\n* remove repetetive tests\r\n\r\n* save changes\r\n\r\n* add mode r+, add with support,remove logging\r\n\r\n* remove offset of acqIndex between raw and numpy saving\r\n\r\n* fix only saving last frame\r\n\r\n* save signals of multiple devices\r\n\r\n* add comments and move condition for clearer code\r\n\r\n* fix bug when vieweing pattern file\r\n\r\n* iterate over enabled and plotted plots\r\n\r\n* add padestal substraction to transceiver and analog data\r\n\r\n* init pedestal frames to detector.frames\r\n\r\n* restore old exception\r\n\r\n* add pedestal substraction for digital signals\r\n\r\n* remove frames spinbox from plotTab\r\n\r\n* remove comments and use str instead of Path\r\n\r\n* avoid saving all frames\r\n\r\n* correct exception and log error's trace\r\n\r\n* add gui tests\r\n\r\n* add waveform test\r\n\r\n* add pedestal test\r\n\r\n* refactor by using fixtures\r\n\r\n* add tests for moench analog and pattern\r\n\r\n* add pytest-qt to dependencies\r\n\r\n* add save and load gui parameters\r\n\r\n* remove nohup file\r\n\r\n* fix old bug IndexError\r\n\r\n* save plot type\r\n\r\n* a\r\n\r\n* handle canceling load, loading matterhorn pedestal for moench\r\n\r\n* remove comparing .png files for pattern test\r\n\r\n* save plot type\r\n\r\n* red error on status bar when shape mismatch for loaded pedestal\r\n\r\n* fix makefile and docstrings\r\n\r\n* fix PRs conversation\r\n\r\n* move code into different function\r\n\r\n* fix wrong function names for power supply\r\n\r\n* removed old ctbgui\r\n\r\n* removed unnecessary files\r\n\r\n---------\r\n\r\nCo-authored-by: Erik Frojdh <erik.frojdh@gmail.com>\r\nCo-authored-by: Braham Bechir <braham_b@pc11979.psi.ch>\r\nCo-authored-by: Bechir <bechir.braham@psi.ch>\r\nCo-authored-by: Bechir <bechir.brahem420@gmail.com>\r\n\r\n* Dev/xilinx mat update (#959)\r\n\r\n* put back code to obtain adc and dac device indexafter loading device tree and then create folder iio_device_links and create symbolic links there according to device indices found. ln -sf operation not permitted, so folder has to be deleted and created everytime. Also refactored definitions to have all the xilinx name or detector specific stuff out of programbyArm.c\r\n\r\n* uncommented waittransceiverreset at startup (should work now) and return of powering off chip at startup (error for transceiver alignment reset)\r\n\r\n* updated registerdefs from firmware\r\n\r\n* minor prints and updating names from registerdefs\r\n\r\n* waittransceiverreset has been fixed in firmware and removing warnign for that, transceiver alignment check for powering off chip is not done in fw (giving a warning and returning ok for now)\r\n\r\n* fixing ipchecksum (not done), removed startperiphery, allowing readout command to be allowed for xilinx when acquiring\r\n\r\n* dont build doc for Tobi Schluter from libzmq, which uses iso-8859-1 and the umlaut cause compilation to fail on some machines (#973)\r\n\r\n* 8.0.2 psi modules\r\n\r\n* missed the rx_zmqip implementations in detector.h and python bindings (#975)\r\n\r\n* rx_zmqip has been removed. Remove it also for pyctbgui (#979)\r\n\r\n* format\r\n\r\n* Dev/rx callbacks (#966)\r\n\r\n* changed rxr callback signatures to all include structs\r\n* removed datamodify call back as size can be changed in the original data call back now\r\n* bringing some parameters (set functions) to dataProcessor class for its callback (namely udpport, quad, fliprows, totalframes, jsonheader), resulting in also removing totalframes from 2 other function signatures\r\n\r\n* updated MultiReceiverApp to reflect the new callback signatures\r\n\r\n* Dev/reg bit change no validate (#970)\r\n\r\n- do not validate write reg, setbit and clearbit by default anymore\r\n- --validate will force validation on the bitmask or entire reg\r\n- remove return value for write reg (across server to client, but thankfully not in the Detector class)\r\n- extend validation into writereg, setbit and clearbit for Eiger (always special)\r\n-  need to check python (TODO)\r\n- missed the rx_zmqip implementations in detector.h and python bindings\r\n\r\n* sleep implemented for command line, mainly for config files for firmware developers (#982)\r\n\r\n* change gain mode help from dynamicgain to dynamic (#988)\r\n\r\n* fixing python version. allowing versions to execute even if no detector connected or in shared memory (#990)\r\n\r\n* Jf: Electron collection mode (#983)\r\n\r\n* electron collection mode for jungfrau. also removing the config chip when using register command\r\n* collectionMode: HOLE/ELECTRON (enum)\r\n\r\n* Dev/m3 readout speed (#985)\r\n\r\n* added readoutspeed command to m3 (fullspeed - 10, half speed - 20, quarter speed - 40), removed reaodut pll, moved up system pll clock indices, leaving pll index in common altera code, default speed is half speed, allow only system_c0 to be set, the others can be obtained, same for clkphase, maxclkphaseshift, clkfreq. added to readoutspeedlist commands, updated help and updated tests\r\n\r\n* updated readoutspeedlist command\r\n\r\n* jf: timing info decoder (#987)\r\n\r\n* timing_info_decoder command with options swissfel (default) and shine. added to python, command line generation, autocomplete, tostring, tests.\r\n\r\n* updated jungfrau timing info decoder mask (#991)\r\n\r\n* minor. removed warning print at startup for empty eth udp to listen to (#992)\r\n\r\n* removed 'Caller/CALLER' from test names as there is only one command line now (#993)\r\n\r\n* formatting\r\n\r\n* Dev/g2 stop frame number (#980)\r\n\r\n* get/set next frame number in G2 (firmware only has set, no get)\r\n* firmware has issues: each stop keeps 2 frame header in fifo and the resetting frame number happens after that\r\n* removed the option to set burstmode to burst external or continuwous internal\r\n* needs to be revisited before 9.0.0\r\n\r\n* formatting\r\n\r\n* fix the command help in the command help generator for Gotthard2 about nextframenumber (#994)\r\n\r\n* first draft at fixing nextframenumber properly with firmware (#995)\r\n\r\n* fixing nextframenumber properly with firmware\r\n\r\n* updated firmware to have getnextframenumber and fixed setnextframenumber to reset also the header fifo when stopping\r\n\r\n* fix tests for gotthard2\r\n\r\n* Dev/g2 fix next frame number (#996)\r\n\r\n* binaries in\r\n\r\n* formatting\r\n\r\n* release notes\r\n\r\n* release notes\r\n\r\n* updating firmware dates\r\n\r\n* release notes\r\n\r\n* package release version and renaming server names\r\n\r\n* updated client versioning\r\n\r\n* updated moench fw release version\r\n\r\n* 900/proper free (#1002)\r\n\r\n* first draft of fixing the free function available within the class\r\n\r\n* removed class member function freeSharedmemory for both Detector and Module; made the free function freeSharedmemory accessible to python interface; setHostname if there is already a module in shm will recreate the Detector object while freeing shm completely and keeping detsize and intitialchecks (previous commit), sethostname called from DetectorClass in virtual command to have one point of entry (previous commit), testing Module class frees shared memory using free function\r\n\r\n* Detector class: added copy and move constructor and assignmentoperators due to explicit destructor (DetectorImpl fwd declared), DetectorImpl class: included ZmqSocket to remove destructor (should not be virtual in any case), Module class: removed explciit destructor to allow compiler generated constructor and operators\r\n\r\n* formatting\r\n\r\n* updated client version date\r\n\r\n* minor fix for readme autocomplete\r\n\r\n* setting detsize after hostname should throw also for single module for consistency (#999)\r\n\r\n* 900/autocomplete documentation (#1003)\r\n\r\n* fixed the gendoc to reflect the new parser, updated documentation to include info about autocomplete in the command line part, error in createing docs\r\n\r\n* fixed list deprecated, fixed command help (to show properly on a html, fixed other help warnings\r\n\r\n* minor indents\r\n\r\n* 900/g2 chip configure at startup (#1008)\r\n\r\n* g2: chip reconfigure variable not set when powering on at startup because readconfig is the one configuring the chip the first time to default chip settings\r\n\r\n* cleaning up code\r\n\r\n* 900/rm volatile (#1006)\r\n\r\n* Removing volatile and replacing with atomic to ensure atomicity\r\n\r\n* compiling header include issue\r\n\r\n* 900/jf firmware rollback (#1010)\r\n\r\n* jf: rolling back firmware required to v1.5 and 2.5, updated release notes, fixed a bug when updating server (when server name same as link name:throws with no message, pedestal mode check changed for the time being for loops to be 0xFF size\r\n\r\n* compensating for jf fw bug for pedestalmode where loops should be 16 bit, but is 8 bit in fw. to be fixed in next version\r\n\r\n* formatting\r\n\r\n* fixed python test simulator to kill previous servers\r\n\r\n* gui: hide 'complete image' and just show 'missing packets' when there are missing packets in that image form the receiver (#1013)\r\n\r\n* release notes update (#1015)\r\n\r\n* 900/detach pthreads not joining (#1017)\r\n\r\n* detach the pthreads that are not joining else memory leak\r\n\r\n* release notes\r\n\r\n* removed the clean up comment, also refactored the pthread join/detach for ctb 1g\r\n\r\n* 900/server malloc check (#1020)\r\n\r\n* usleep in communication to actually relay the err message of memory allocation to the client (weird but test for now), function in server to handle memory allcoation issues (updates mess, ret and sendsit to the client and returns prior from function implementatin, setting fnum in client for the speicific functions that send to detector each argument separtely, they need to remember the fnum else they throw with the incorrect fnum\r\n\r\n* server: every malloc must check if it succeeded, rearranging so that the free is clear as well (only in funcs so far)\r\n\r\n* formatting\r\n\r\n* fixed malloc checks in other places other than funcs.c\r\n\r\n* bug fix return from previous commit\r\n\r\n* pointer bug from previous commit\r\n\r\n* formatting\r\n\r\n* binaries in\r\n\r\n* 900/document json ctb file format (#1027)\r\n\r\n* docs receiver formats rewrite\r\n\r\n* added documentation for all the receiver files, updated release notes, udpated help in commands help for timing, fixed by throwing exception for aa dividy by 0 error caused by not freeing memory (detsize) when switching between 1d and 2d detectors, removed unnecessary 'recevier up' printout, fixed dbit list 64 bit mask error in master json file (was not 64 bit before), fixed bug in reading gotthard1 data (needs to be tested)\r\n\r\n* generating commands help and formatting, also fix help for trimen command line\r\n\r\n* added ctb frame format documentation, added some links to some commands, added documentation about adding expat-devel in installation for rhel8 gui, fixed some indentation issues that screwed up command line help documentation\r\n\r\n* added ctb frame format documentation\r\n\r\n* updated documentation about zeromq-devel for <8.0.0 versions\r\n\r\n* fixed typo in python for vb_pixbuf Jungfrau dac (#1030)\r\n\r\n* fixed cli documentation (#1037)\r\n\r\n* 900: legal gain values in jungfrau simulator (#1043)\r\n\r\n* legal gain values in jungfrau simulator\r\n\r\n* typo\r\n\r\n* release notes\r\n\r\n* 900/jungfrau temp control default enable (#1041)\r\n\r\n* jungfrau: enabling temp control by default at server startup\r\n\r\n* 900: fixed invalid arguments to slsmultireceiver (#1039)\r\n\r\n* wasnt showing error message for invalid arguments to slsmultireceiver\r\n* allow 0 arguments to act like an slsReceiver with start tcp port 1954 and just 1 receiver\r\n\r\n* 9.0.0: version from file to cmake and python (#1024)\r\n\r\n- renamed conda-recipe folder\r\n- added a check to see if build and install folder exists in build.sh (conda recipe)\r\n- created VERSION file that has '0.0.0'for developer but can be updated using update_version.py that takes in a version. The script checks for semantic versioning and updates VERSION file\r\n- VERSION file also copied along with py files to slsdet in python cmakelist and build_pylib.sh (for conda), also copied in root folder for installations (for no coding purpose)\r\n- init.py and setup.py reads this file to get the version (a bit differently to find the VERSION file)\r\n- VERSION file read into cmake to get the version and also added to compile definition. So RELEASE removed from versionAPI.h (using SLS_DET_VERSION compile definiton instead) and also removed updateRelease script.\r\n- conda getting project version from environment variable SLS_DET_VERSION that is set in build_pylib.sh prior.\r\n- added 3.13 python to conda build\r\n- anything related to ctb removed from release notes as users will always use developer\r\n- sets 9.0.0 to VERSION file  by running update_version.py without an argument\r\n\r\n* formatting\r\n\r\n* finalized binaries\r\n\r\n* updated m3 fw version (#1046)\r\n\r\n* release notes\r\n\r\n* fix cmake (cannot find VERSION file) when using package as subfolder as cmake_source_dir is not same anymore, add troubleshooting doc for m3 regarding loose control board for waiting status in auto timing mode, fix m3 tests to test register write (previously was read only) (#1047)\r\n\r\n* 900: bumped pybind11 version and added setuptools on host (#1050)\r\n\r\n* bumped pybind11 version and added setuptools on host\r\n\r\n* updated pybind11 tarball to 2.13 and in cmakefile to get 2.13 frpm github, also updated documentation about pybind 2.13\r\n\r\n* update release notes, doc\r\n\r\n* updating readme\r\n\r\n---------\r\n\r\nCo-authored-by: Erik Fröjdh <erik.frojdh@gmail.com>\r\n\r\n* 900 cmake_source_dir (#1053)\r\n\r\n* when package used as subdirectory (cmake-subfolder-example) it fails when python is used because the cmake_source_dir is now the one above package.\r\n\r\n* changed cmake_current_list_dir to cmake_current_source_dir\r\n\r\n* removing the unnecessary VERSION file installed in the root directory (from PR #1020)\r\n\r\n* 900: pybind 2.13.6 and python 3.8 (#1054)\r\n\r\n* changed pybind 2.13.0 to 2.13.6, kept conda at min 2.13.0\r\n\r\n* changed min python version from 3.6 to 3.8\r\n\r\n* 900/docs (#1056)\r\n\r\n* minimum python is 3.8, so >=\r\n\r\n* removed ctb frame documentation. should be in internal wiki\r\n\r\n* updated release notes\r\n\r\n* updated releate date\r\n\r\n---------\r\n\r\nCo-authored-by: Erik Fröjdh <erik.frojdh@gmail.com>\r\nCo-authored-by: froejdh_e <erik.frojdh@psi.ch>\r\nCo-authored-by: anberga <34126852+anberga@users.noreply.github.com>\r\nCo-authored-by: Filip Leonarski <filip.leonarski@psi.ch>\r\nCo-authored-by: Z.H. Li <zhenghenge@gmail.com>\r\nCo-authored-by: Martin Brückner <martin.brueckner@psi.ch>\r\nCo-authored-by: Braham Bechir <braham_b@pc11979.psi.ch>\r\nCo-authored-by: Bechir <bechir.braham@psi.ch>\r\nCo-authored-by: Bechir <bechir.brahem420@gmail.com>",
        "tree": {
          "url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/git/trees/8a36febccfb56b16260f4fd799ee8d9415623224",
          "sha": "8a36febccfb56b16260f4fd799ee8d9415623224"
        },
        "comment_count": 0
      },
      "author": {
        "login": "thattil",
        "id": 33750417,
        "node_id": "MDQ6VXNlcjMzNzUwNDE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/33750417?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thattil",
        "html_url": "https://github.com/thattil",
        "followers_url": "https://api.github.com/users/thattil/followers",
        "following_url": "https://api.github.com/users/thattil/following{/other_user}",
        "gists_url": "https://api.github.com/users/thattil/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thattil/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thattil/subscriptions",
        "organizations_url": "https://api.github.com/users/thattil/orgs",
        "repos_url": "https://api.github.com/users/thattil/repos",
        "events_url": "https://api.github.com/users/thattil/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thattil/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/commits/4880f87791af6303d14933e4674667f8d58d22dc",
          "html_url": "https://github.com/slsdetectorgroup/slsDetectorPackage/commit/4880f87791af6303d14933e4674667f8d58d22dc",
          "sha": "4880f87791af6303d14933e4674667f8d58d22dc"
        }
      ],
      "repository": {
        "id": 113999390,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTM5OTkzOTA=",
        "name": "slsDetectorPackage",
        "full_name": "slsdetectorgroup/slsDetectorPackage",
        "private": false,
        "owner": {
          "login": "slsdetectorgroup",
          "id": 33749262,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjMzNzQ5MjYy",
          "avatar_url": "https://avatars.githubusercontent.com/u/33749262?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/slsdetectorgroup",
          "html_url": "https://github.com/slsdetectorgroup",
          "followers_url": "https://api.github.com/users/slsdetectorgroup/followers",
          "following_url": "https://api.github.com/users/slsdetectorgroup/following{/other_user}",
          "gists_url": "https://api.github.com/users/slsdetectorgroup/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/slsdetectorgroup/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/slsdetectorgroup/subscriptions",
          "organizations_url": "https://api.github.com/users/slsdetectorgroup/orgs",
          "repos_url": "https://api.github.com/users/slsdetectorgroup/repos",
          "events_url": "https://api.github.com/users/slsdetectorgroup/events{/privacy}",
          "received_events_url": "https://api.github.com/users/slsdetectorgroup/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/slsdetectorgroup/slsDetectorPackage",
        "description": "SLS Detector Package",
        "fork": false,
        "url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage",
        "forks_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/forks",
        "keys_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/teams",
        "hooks_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/hooks",
        "issue_events_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/issues/events{/number}",
        "events_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/events",
        "assignees_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/assignees{/user}",
        "branches_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/branches{/branch}",
        "tags_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/tags",
        "blobs_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/languages",
        "stargazers_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/stargazers",
        "contributors_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/contributors",
        "subscribers_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/subscribers",
        "subscription_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/subscription",
        "commits_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/contents/{+path}",
        "compare_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/merges",
        "archive_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/downloads",
        "issues_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/issues{/number}",
        "pulls_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/labels{/name}",
        "releases_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/releases{/id}",
        "deployments_url": "https://api.github.com/repos/slsdetectorgroup/slsDetectorPackage/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/commits/1fd7caa5a145717bc5bceda12e0f4dc8dc4b7020",
      "sha": "1fd7caa5a145717bc5bceda12e0f4dc8dc4b7020",
      "node_id": "MDY6Q29tbWl0Mzg4MTgyODk1OjFmZDdjYWE1YTE0NTcxN2JjNWJjZWRhMTJlMGY0ZGM4ZGM0YjcwMjA=",
      "html_url": "https://github.com/thundra-io/thundra-demo-localstack-java/commit/1fd7caa5a145717bc5bceda12e0f4dc8dc4b7020",
      "comments_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/commits/1fd7caa5a145717bc5bceda12e0f4dc8dc4b7020/comments",
      "commit": {
        "url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/git/commits/1fd7caa5a145717bc5bceda12e0f4dc8dc4b7020",
        "author": {
          "date": "2021-09-10T13:36:01.000+03:00",
          "name": "Serkan ÖZAL",
          "email": "serkan@thundra.io"
        },
        "committer": {
          "date": "2021-09-10T13:36:01.000+03:00",
          "name": "GitHub",
          "email": "noreply@github.com"
        },
        "message": "Thundra Localstack Sample App (#3)\n\n* Added initial setup with a sample hello function\r\n\r\n* Add java lambda apps for localstack demo (#2)\r\n\r\n* Create sample apps with java runtime\r\n\r\n* Change response header for instrumentation\r\n\r\n* Change app flow\r\n\r\n* Add example end to end test with localstack\r\n\r\n* Add test instrument\r\n\r\n* Add test instrument\r\n\r\n* Add test instrument\r\n\r\n* Remove thundra api key\r\n\r\n* Refactor maven dependencies\r\n\r\n* Some refactors&cleanups\r\n\r\n* Merged with remote branch\r\n\r\n* Some refactor for embedded mode\r\n\r\nCo-authored-by: Serkan ÖZAL <serkan@thundra.io>\r\n\r\n* Set AWS_DEFAULT_REGION for sls commands\r\n\r\n* Excluded internal dependencies of \"thundra-agent-bootstrap\"\r\n\r\n* Fixed `LocalStackTest`\r\n\r\n* Bumped Thundra agent version\r\n\r\n* Bumped Thundra agent version\r\n\r\n* Working demo example with chaos injector\r\n\r\n* Refactored chaos injection\r\n\r\n* Update error message\r\n\r\n* Add python requirement\r\n\r\n* Change dependency scope\r\n\r\n* Update quotes in the error message\r\n\r\n* Bumped Thundra agent version\r\n\r\nCo-authored-by: Tolga Takır <tolga@thundra.io>\r\nCo-authored-by: Oguzhan Ozdemir <aoozdemir@live.com>",
        "tree": {
          "url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/git/trees/49916d345dcdb266e97e58025fd602bc3f7ee644",
          "sha": "49916d345dcdb266e97e58025fd602bc3f7ee644"
        },
        "comment_count": 0
      },
      "author": null,
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/commits/9b6e7f699de93e71d2a9518f190f0d5745ba683b",
          "html_url": "https://github.com/thundra-io/thundra-demo-localstack-java/commit/9b6e7f699de93e71d2a9518f190f0d5745ba683b",
          "sha": "9b6e7f699de93e71d2a9518f190f0d5745ba683b"
        }
      ],
      "repository": {
        "id": 388182895,
        "node_id": "MDEwOlJlcG9zaXRvcnkzODgxODI4OTU=",
        "name": "thundra-demo-localstack-java",
        "full_name": "thundra-io/thundra-demo-localstack-java",
        "private": false,
        "owner": {
          "login": "thundra-io",
          "id": 36259632,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjM2MjU5NjMy",
          "avatar_url": "https://avatars.githubusercontent.com/u/36259632?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/thundra-io",
          "html_url": "https://github.com/thundra-io",
          "followers_url": "https://api.github.com/users/thundra-io/followers",
          "following_url": "https://api.github.com/users/thundra-io/following{/other_user}",
          "gists_url": "https://api.github.com/users/thundra-io/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/thundra-io/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/thundra-io/subscriptions",
          "organizations_url": "https://api.github.com/users/thundra-io/orgs",
          "repos_url": "https://api.github.com/users/thundra-io/repos",
          "events_url": "https://api.github.com/users/thundra-io/events{/privacy}",
          "received_events_url": "https://api.github.com/users/thundra-io/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/thundra-io/thundra-demo-localstack-java",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java",
        "forks_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/forks",
        "keys_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/teams",
        "hooks_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/hooks",
        "issue_events_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/issues/events{/number}",
        "events_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/events",
        "assignees_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/assignees{/user}",
        "branches_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/branches{/branch}",
        "tags_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/tags",
        "blobs_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/languages",
        "stargazers_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/stargazers",
        "contributors_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/contributors",
        "subscribers_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/subscribers",
        "subscription_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/subscription",
        "commits_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/contents/{+path}",
        "compare_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/merges",
        "archive_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/downloads",
        "issues_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/issues{/number}",
        "pulls_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/labels{/name}",
        "releases_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/releases{/id}",
        "deployments_url": "https://api.github.com/repos/thundra-io/thundra-demo-localstack-java/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/adsurg/serverless-artillery/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "sha": "146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "node_id": "MDY6Q29tbWl0MjEyNTU1MDE2OjE0NmE4OWJkMmI4ZWQ0MTQ2ZjU2YjQ3Y2JmYzdjODZjYmQxZWQ2NGE=",
      "html_url": "https://github.com/adsurg/serverless-artillery/commit/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "comments_url": "https://api.github.com/repos/adsurg/serverless-artillery/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a/comments",
      "commit": {
        "url": "https://api.github.com/repos/adsurg/serverless-artillery/git/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
        "author": {
          "date": "2019-04-15T13:41:15.000-07:00",
          "name": "Gregory W. Smith II",
          "email": "gws_ii@msn.com"
        },
        "committer": {
          "date": "2019-04-15T13:41:15.000-07:00",
          "name": "GitHub",
          "email": "noreply@github.com"
        },
        "message": "Object-oriented monitoring mode (#212)\n\n* [WIP] Add Update Command\r\n\r\nAdd update command to CLI\r\nEstablish versioning folder to contain:\r\n  1. old versions (for comparison)\r\n  2. version specific update logic\r\n\r\nPlease note that the migration of logic from ~/lib/index.js into the versioning folder was entirely incomplete, as was most of the thinking associated with design and factoring of this feature.\r\n\r\nOf particular note, this mostly implements the logic for taking an existing serverless.yml and non-destructively updating it with the monitoring mode assets.  Missing functionality included (as per #161) the updating of the package.json or of the handler's javascript files.  Update should be non-destructive, preserving any customizations that cannot be automatically transferred.\r\n\r\n* Implements validation of project dependencies for upgrade command in versioning module.\r\n\r\n* [WIP] Adds validation of service definition.\r\n\r\n* Unit tests all passing for validateServiceConfiguration (in upgrade context)  and validateServiceForDeployment.\r\n\r\n* Renames asset directories by version number.\r\nMakes local assets path a higher order parameter to versioning implementation.\r\nCorrected update -> upgrade.\r\nRelocate validateServiceForUpgrade function and test.\r\n\r\n* Uses AJV and JSON schema definitions capture required preconditions and naming conflicts in the function service definition (serverless.yml).\r\n\r\n* Implements the version by version upgrade by plugin mechanism.\r\n\r\n* Removes now deprecated upgrade code from lib/index.js.\r\n\r\n* Removes deprecated constants.\r\n\r\n* Adds README to explain myself. ;)\r\n\r\n* remove legacy files and add a delete-all-in-s3-bucket step before removing target\r\n\r\n* get the integration test runner working\r\n\r\n* add finishing touches, remove unnecessary tests, fix linting errors\r\n\r\n* WIP: Upgrade saves to directories.\r\n\r\n* Fix bugs preventing proper backup of project files and upgrade of package.json.\r\nEstablishes baseline versioning upgrade integration tests from 0.0.0 to 0.0.1.\r\n\r\n* Repair some unit test drift.\r\n\r\n* Refactor upgradeTest function to be more comprehensible.\r\n\r\n* Implement fetchListOfCalls, fix deployment bugs\r\n\r\n* Replace xmlhttprequest with node-fetch, remove unncessary comments\r\n\r\n* Fix typos and update versioning README to describe the revised backup mechanism.\r\nAdds manual upgrade script for testing.\r\n\r\n* Updated parsing of deploy target urls, adding instructions to README\r\n\r\n* Remove unnecessary debug logging.\r\n\r\n* Adding scripts for all test cases\r\n\r\n* Update issue templates for bug reports\r\n\r\n* Update issue templates\r\n\r\n* Create pull_request_template.md\r\n\r\n* Adds output during upgrade to list files which were backed up.\r\n\r\n* Minor adjustment to upgrade output.\r\n\r\n* More verbose output explaining the next steps for users to finalize project upgrade. Improved output in general.\r\n\r\n* Rename .github/PULL_REQUEST_TEMPLATE/pull_request_template.md to pull_request_template.md\r\n\r\n* Rename pull_request_template.md to .github/pull_request_template.md\r\n\r\n* Integration tests passing reliably, now just reporting results via CW.\r\nRemoves numbering on scripts and all elimiates ramp-down scenarios.\r\n\r\n* Corrected comment regarding use of Dynamo in test case.\r\n\r\n* Tweak in increase integration tests results.\r\n\r\n* Tweak in increase integration tests results.\r\nProvide more messaging while deploying and removing test projects.\r\n\r\n* Tweak in increase integration tests results.\r\nUpdate README and remove unnecessary xmlhttprequest dependency.\r\n\r\n* Update private artillery branch to one which records match and capture errors.\r\nClarify analysis code.\r\nCount and return error code on exit.\r\n\r\n* Update private artillery version.\r\n\r\n* Correct private artillery reference to specific commit.\r\n\r\n* Adjust how errors are reported for acceptance and monitoring now that results.errors is correct.\r\n\r\n* Initial tweaks to reporting results.\r\n\r\n* Expose factors in constant values for clarity.\r\n\r\n* Improved output for acceptance test cases to include either PASSED or FAILED with error.\r\n\r\n* Update to latest private Artillery version.\r\n\r\n* Renaming from event to script where appropriate.\r\nUsing factory pattern to generate artillery acceptance/monitoring/performance tasks which are then executed.\r\nBegin articulating artillery tasks in task.js.\r\n\r\n* Renaming from event to script where appropriate.\r\nUsing factory pattern to generate artillery acceptance/monitoring/performance tasks which are then executed.\r\nBegin articulating artillery tasks in task.js.\r\n\r\n* Renames defaultsToSettings to defaultSettings and makes available acceptanceSettings and monitoringSettings in taskDef.\r\n\r\n* Simplify implementation of getSetting in funcDef.\r\nSimplify validation in funcValid.\r\nRemove unnecessary else statements in taskValid.\r\n\r\n* WIP: Core Artillery Task with acceptance, monitoring and performance variants and tests.\r\n\r\n* Adds modes module.\r\n\r\n* Better naming for alert and planning modules.\r\nMake use of modes module.\r\n\r\n* Readability improvements. Provide default AWS region or read from environment for local invocation. Update how results are returned in performance and acceptance tasks.\r\n\r\n* Module for AWS platform settings.\r\n\r\n* Add analysis and sampling modules. Shift the handler.js to user new implementation and remove files associated with old implementation.\r\n\r\n* Acceptance mode properly reports errors and provides report total.\r\n\r\n* Fix bug where we did not honor the command line options for acceptance mode.\r\n\r\n* Adjust the expectations of integration test results.\r\nChecks actual errors against error budget when analyzing statistical results.\r\nRemoves some debug output to error stream.\r\nFix bug where we swallow SLS CLI failures.\r\nAdd script to debug lambda code locally.\r\n\r\n* WIP: Partial updates to test cases which include fixes.\r\n\r\n* Many files changed due to upgrade changes.\r\nUpdated unit tests fixed bugs they uncovered.\r\n * Corrected adding script genesis\r\n * References to incorrect sampling names\r\nAdjusted NPM run names to be more consistent.\r\nVarious lint fixes.\r\n\r\n* NPM audit fixes.\r\n\r\n* NPM audit fixes. Reintroduce necessary script injection code.\r\n\r\n* Correct passing of results for analysis in monitoring mode.\r\n\r\n* Fix bug in analyzeSamples where we get a singular report.\r\nCorrect parameters to analyzeMonitoring.\r\n\r\n* Correct indentation in analysis.js. Provide alerting directly to artillery monitoring task.\r\n\r\n* Fix analysis bugs to allow an errorBudget of 0.\r\n\r\n* Linting fixes.\r\nFixed bug related to alerting on monitoring analysis.\r\nRestored ramp-down test cases.\r\nUpdated alerting tests.\r\nAdjusted upgrate tests expected js-yaml version.\r\n\r\n* Remove debugging statement.\r\n\r\n* Revert ramp down integration tests.\r\n\r\n* Completed merge of single.worker.rampUp.yml script.\r\n\r\n* Remove script.yml as part of the `configure` command payload.\r\n\r\n* Update kill command to honor region option if passed and provide user guidance in the case of a configuration failure.\r\n\r\n* Kill command: revised \"function not deployed\" error message.\r\n\r\n* Revised test sampling run results error message.\r\nRemoved unnecessary TODOs.\r\n\r\n* Update upgrade testing to address bug and changes to the lambda implementation.\r\nNow that `npm install` seems to work properly, remove yarn-lock and restore package-lock.",
        "tree": {
          "url": "https://api.github.com/repos/adsurg/serverless-artillery/git/trees/774b71a18ffb65ad8011a04a8aaae95f2b0958ee",
          "sha": "774b71a18ffb65ad8011a04a8aaae95f2b0958ee"
        },
        "comment_count": 0
      },
      "author": {
        "login": "gwsii",
        "id": 1920378,
        "node_id": "MDQ6VXNlcjE5MjAzNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1920378?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwsii",
        "html_url": "https://github.com/gwsii",
        "followers_url": "https://api.github.com/users/gwsii/followers",
        "following_url": "https://api.github.com/users/gwsii/following{/other_user}",
        "gists_url": "https://api.github.com/users/gwsii/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gwsii/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gwsii/subscriptions",
        "organizations_url": "https://api.github.com/users/gwsii/orgs",
        "repos_url": "https://api.github.com/users/gwsii/repos",
        "events_url": "https://api.github.com/users/gwsii/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gwsii/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/adsurg/serverless-artillery/commits/63ac18f361c8a236f69c61d2991aa09eeb8a34bd",
          "html_url": "https://github.com/adsurg/serverless-artillery/commit/63ac18f361c8a236f69c61d2991aa09eeb8a34bd",
          "sha": "63ac18f361c8a236f69c61d2991aa09eeb8a34bd"
        }
      ],
      "repository": {
        "id": 212555016,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMTI1NTUwMTY=",
        "name": "serverless-artillery",
        "full_name": "adsurg/serverless-artillery",
        "private": false,
        "owner": {
          "login": "adsurg",
          "id": 9221259,
          "node_id": "MDQ6VXNlcjkyMjEyNTk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9221259?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/adsurg",
          "html_url": "https://github.com/adsurg",
          "followers_url": "https://api.github.com/users/adsurg/followers",
          "following_url": "https://api.github.com/users/adsurg/following{/other_user}",
          "gists_url": "https://api.github.com/users/adsurg/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/adsurg/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/adsurg/subscriptions",
          "organizations_url": "https://api.github.com/users/adsurg/orgs",
          "repos_url": "https://api.github.com/users/adsurg/repos",
          "events_url": "https://api.github.com/users/adsurg/events{/privacy}",
          "received_events_url": "https://api.github.com/users/adsurg/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/adsurg/serverless-artillery",
        "description": "Combine serverless with artillery and you get serverless-artillery for instant, cheap, and easy performance testing at scale.",
        "fork": true,
        "url": "https://api.github.com/repos/adsurg/serverless-artillery",
        "forks_url": "https://api.github.com/repos/adsurg/serverless-artillery/forks",
        "keys_url": "https://api.github.com/repos/adsurg/serverless-artillery/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/adsurg/serverless-artillery/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/adsurg/serverless-artillery/teams",
        "hooks_url": "https://api.github.com/repos/adsurg/serverless-artillery/hooks",
        "issue_events_url": "https://api.github.com/repos/adsurg/serverless-artillery/issues/events{/number}",
        "events_url": "https://api.github.com/repos/adsurg/serverless-artillery/events",
        "assignees_url": "https://api.github.com/repos/adsurg/serverless-artillery/assignees{/user}",
        "branches_url": "https://api.github.com/repos/adsurg/serverless-artillery/branches{/branch}",
        "tags_url": "https://api.github.com/repos/adsurg/serverless-artillery/tags",
        "blobs_url": "https://api.github.com/repos/adsurg/serverless-artillery/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/adsurg/serverless-artillery/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/adsurg/serverless-artillery/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/adsurg/serverless-artillery/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/adsurg/serverless-artillery/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/adsurg/serverless-artillery/languages",
        "stargazers_url": "https://api.github.com/repos/adsurg/serverless-artillery/stargazers",
        "contributors_url": "https://api.github.com/repos/adsurg/serverless-artillery/contributors",
        "subscribers_url": "https://api.github.com/repos/adsurg/serverless-artillery/subscribers",
        "subscription_url": "https://api.github.com/repos/adsurg/serverless-artillery/subscription",
        "commits_url": "https://api.github.com/repos/adsurg/serverless-artillery/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/adsurg/serverless-artillery/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/adsurg/serverless-artillery/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/adsurg/serverless-artillery/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/adsurg/serverless-artillery/contents/{+path}",
        "compare_url": "https://api.github.com/repos/adsurg/serverless-artillery/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/adsurg/serverless-artillery/merges",
        "archive_url": "https://api.github.com/repos/adsurg/serverless-artillery/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/adsurg/serverless-artillery/downloads",
        "issues_url": "https://api.github.com/repos/adsurg/serverless-artillery/issues{/number}",
        "pulls_url": "https://api.github.com/repos/adsurg/serverless-artillery/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/adsurg/serverless-artillery/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/adsurg/serverless-artillery/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/adsurg/serverless-artillery/labels{/name}",
        "releases_url": "https://api.github.com/repos/adsurg/serverless-artillery/releases{/id}",
        "deployments_url": "https://api.github.com/repos/adsurg/serverless-artillery/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/erikerikson/serverless-artillery/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "sha": "146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "node_id": "MDY6Q29tbWl0MzQwNDgzNjgzOjE0NmE4OWJkMmI4ZWQ0MTQ2ZjU2YjQ3Y2JmYzdjODZjYmQxZWQ2NGE=",
      "html_url": "https://github.com/erikerikson/serverless-artillery/commit/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "comments_url": "https://api.github.com/repos/erikerikson/serverless-artillery/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a/comments",
      "commit": {
        "url": "https://api.github.com/repos/erikerikson/serverless-artillery/git/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
        "author": {
          "date": "2019-04-15T13:41:15.000-07:00",
          "name": "Gregory W. Smith II",
          "email": "gws_ii@msn.com"
        },
        "committer": {
          "date": "2019-04-15T13:41:15.000-07:00",
          "name": "GitHub",
          "email": "noreply@github.com"
        },
        "message": "Object-oriented monitoring mode (#212)\n\n* [WIP] Add Update Command\r\n\r\nAdd update command to CLI\r\nEstablish versioning folder to contain:\r\n  1. old versions (for comparison)\r\n  2. version specific update logic\r\n\r\nPlease note that the migration of logic from ~/lib/index.js into the versioning folder was entirely incomplete, as was most of the thinking associated with design and factoring of this feature.\r\n\r\nOf particular note, this mostly implements the logic for taking an existing serverless.yml and non-destructively updating it with the monitoring mode assets.  Missing functionality included (as per #161) the updating of the package.json or of the handler's javascript files.  Update should be non-destructive, preserving any customizations that cannot be automatically transferred.\r\n\r\n* Implements validation of project dependencies for upgrade command in versioning module.\r\n\r\n* [WIP] Adds validation of service definition.\r\n\r\n* Unit tests all passing for validateServiceConfiguration (in upgrade context)  and validateServiceForDeployment.\r\n\r\n* Renames asset directories by version number.\r\nMakes local assets path a higher order parameter to versioning implementation.\r\nCorrected update -> upgrade.\r\nRelocate validateServiceForUpgrade function and test.\r\n\r\n* Uses AJV and JSON schema definitions capture required preconditions and naming conflicts in the function service definition (serverless.yml).\r\n\r\n* Implements the version by version upgrade by plugin mechanism.\r\n\r\n* Removes now deprecated upgrade code from lib/index.js.\r\n\r\n* Removes deprecated constants.\r\n\r\n* Adds README to explain myself. ;)\r\n\r\n* remove legacy files and add a delete-all-in-s3-bucket step before removing target\r\n\r\n* get the integration test runner working\r\n\r\n* add finishing touches, remove unnecessary tests, fix linting errors\r\n\r\n* WIP: Upgrade saves to directories.\r\n\r\n* Fix bugs preventing proper backup of project files and upgrade of package.json.\r\nEstablishes baseline versioning upgrade integration tests from 0.0.0 to 0.0.1.\r\n\r\n* Repair some unit test drift.\r\n\r\n* Refactor upgradeTest function to be more comprehensible.\r\n\r\n* Implement fetchListOfCalls, fix deployment bugs\r\n\r\n* Replace xmlhttprequest with node-fetch, remove unncessary comments\r\n\r\n* Fix typos and update versioning README to describe the revised backup mechanism.\r\nAdds manual upgrade script for testing.\r\n\r\n* Updated parsing of deploy target urls, adding instructions to README\r\n\r\n* Remove unnecessary debug logging.\r\n\r\n* Adding scripts for all test cases\r\n\r\n* Update issue templates for bug reports\r\n\r\n* Update issue templates\r\n\r\n* Create pull_request_template.md\r\n\r\n* Adds output during upgrade to list files which were backed up.\r\n\r\n* Minor adjustment to upgrade output.\r\n\r\n* More verbose output explaining the next steps for users to finalize project upgrade. Improved output in general.\r\n\r\n* Rename .github/PULL_REQUEST_TEMPLATE/pull_request_template.md to pull_request_template.md\r\n\r\n* Rename pull_request_template.md to .github/pull_request_template.md\r\n\r\n* Integration tests passing reliably, now just reporting results via CW.\r\nRemoves numbering on scripts and all elimiates ramp-down scenarios.\r\n\r\n* Corrected comment regarding use of Dynamo in test case.\r\n\r\n* Tweak in increase integration tests results.\r\n\r\n* Tweak in increase integration tests results.\r\nProvide more messaging while deploying and removing test projects.\r\n\r\n* Tweak in increase integration tests results.\r\nUpdate README and remove unnecessary xmlhttprequest dependency.\r\n\r\n* Update private artillery branch to one which records match and capture errors.\r\nClarify analysis code.\r\nCount and return error code on exit.\r\n\r\n* Update private artillery version.\r\n\r\n* Correct private artillery reference to specific commit.\r\n\r\n* Adjust how errors are reported for acceptance and monitoring now that results.errors is correct.\r\n\r\n* Initial tweaks to reporting results.\r\n\r\n* Expose factors in constant values for clarity.\r\n\r\n* Improved output for acceptance test cases to include either PASSED or FAILED with error.\r\n\r\n* Update to latest private Artillery version.\r\n\r\n* Renaming from event to script where appropriate.\r\nUsing factory pattern to generate artillery acceptance/monitoring/performance tasks which are then executed.\r\nBegin articulating artillery tasks in task.js.\r\n\r\n* Renaming from event to script where appropriate.\r\nUsing factory pattern to generate artillery acceptance/monitoring/performance tasks which are then executed.\r\nBegin articulating artillery tasks in task.js.\r\n\r\n* Renames defaultsToSettings to defaultSettings and makes available acceptanceSettings and monitoringSettings in taskDef.\r\n\r\n* Simplify implementation of getSetting in funcDef.\r\nSimplify validation in funcValid.\r\nRemove unnecessary else statements in taskValid.\r\n\r\n* WIP: Core Artillery Task with acceptance, monitoring and performance variants and tests.\r\n\r\n* Adds modes module.\r\n\r\n* Better naming for alert and planning modules.\r\nMake use of modes module.\r\n\r\n* Readability improvements. Provide default AWS region or read from environment for local invocation. Update how results are returned in performance and acceptance tasks.\r\n\r\n* Module for AWS platform settings.\r\n\r\n* Add analysis and sampling modules. Shift the handler.js to user new implementation and remove files associated with old implementation.\r\n\r\n* Acceptance mode properly reports errors and provides report total.\r\n\r\n* Fix bug where we did not honor the command line options for acceptance mode.\r\n\r\n* Adjust the expectations of integration test results.\r\nChecks actual errors against error budget when analyzing statistical results.\r\nRemoves some debug output to error stream.\r\nFix bug where we swallow SLS CLI failures.\r\nAdd script to debug lambda code locally.\r\n\r\n* WIP: Partial updates to test cases which include fixes.\r\n\r\n* Many files changed due to upgrade changes.\r\nUpdated unit tests fixed bugs they uncovered.\r\n * Corrected adding script genesis\r\n * References to incorrect sampling names\r\nAdjusted NPM run names to be more consistent.\r\nVarious lint fixes.\r\n\r\n* NPM audit fixes.\r\n\r\n* NPM audit fixes. Reintroduce necessary script injection code.\r\n\r\n* Correct passing of results for analysis in monitoring mode.\r\n\r\n* Fix bug in analyzeSamples where we get a singular report.\r\nCorrect parameters to analyzeMonitoring.\r\n\r\n* Correct indentation in analysis.js. Provide alerting directly to artillery monitoring task.\r\n\r\n* Fix analysis bugs to allow an errorBudget of 0.\r\n\r\n* Linting fixes.\r\nFixed bug related to alerting on monitoring analysis.\r\nRestored ramp-down test cases.\r\nUpdated alerting tests.\r\nAdjusted upgrate tests expected js-yaml version.\r\n\r\n* Remove debugging statement.\r\n\r\n* Revert ramp down integration tests.\r\n\r\n* Completed merge of single.worker.rampUp.yml script.\r\n\r\n* Remove script.yml as part of the `configure` command payload.\r\n\r\n* Update kill command to honor region option if passed and provide user guidance in the case of a configuration failure.\r\n\r\n* Kill command: revised \"function not deployed\" error message.\r\n\r\n* Revised test sampling run results error message.\r\nRemoved unnecessary TODOs.\r\n\r\n* Update upgrade testing to address bug and changes to the lambda implementation.\r\nNow that `npm install` seems to work properly, remove yarn-lock and restore package-lock.",
        "tree": {
          "url": "https://api.github.com/repos/erikerikson/serverless-artillery/git/trees/774b71a18ffb65ad8011a04a8aaae95f2b0958ee",
          "sha": "774b71a18ffb65ad8011a04a8aaae95f2b0958ee"
        },
        "comment_count": 0
      },
      "author": {
        "login": "gwsii",
        "id": 1920378,
        "node_id": "MDQ6VXNlcjE5MjAzNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1920378?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwsii",
        "html_url": "https://github.com/gwsii",
        "followers_url": "https://api.github.com/users/gwsii/followers",
        "following_url": "https://api.github.com/users/gwsii/following{/other_user}",
        "gists_url": "https://api.github.com/users/gwsii/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gwsii/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gwsii/subscriptions",
        "organizations_url": "https://api.github.com/users/gwsii/orgs",
        "repos_url": "https://api.github.com/users/gwsii/repos",
        "events_url": "https://api.github.com/users/gwsii/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gwsii/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/erikerikson/serverless-artillery/commits/63ac18f361c8a236f69c61d2991aa09eeb8a34bd",
          "html_url": "https://github.com/erikerikson/serverless-artillery/commit/63ac18f361c8a236f69c61d2991aa09eeb8a34bd",
          "sha": "63ac18f361c8a236f69c61d2991aa09eeb8a34bd"
        }
      ],
      "repository": {
        "id": 340483683,
        "node_id": "MDEwOlJlcG9zaXRvcnkzNDA0ODM2ODM=",
        "name": "serverless-artillery",
        "full_name": "erikerikson/serverless-artillery",
        "private": false,
        "owner": {
          "login": "erikerikson",
          "id": 571200,
          "node_id": "MDQ6VXNlcjU3MTIwMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/571200?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/erikerikson",
          "html_url": "https://github.com/erikerikson",
          "followers_url": "https://api.github.com/users/erikerikson/followers",
          "following_url": "https://api.github.com/users/erikerikson/following{/other_user}",
          "gists_url": "https://api.github.com/users/erikerikson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/erikerikson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/erikerikson/subscriptions",
          "organizations_url": "https://api.github.com/users/erikerikson/orgs",
          "repos_url": "https://api.github.com/users/erikerikson/repos",
          "events_url": "https://api.github.com/users/erikerikson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/erikerikson/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/erikerikson/serverless-artillery",
        "description": "Combine serverless with artillery and you get serverless-artillery for instant, cheap, and easy performance testing at scale.",
        "fork": true,
        "url": "https://api.github.com/repos/erikerikson/serverless-artillery",
        "forks_url": "https://api.github.com/repos/erikerikson/serverless-artillery/forks",
        "keys_url": "https://api.github.com/repos/erikerikson/serverless-artillery/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/erikerikson/serverless-artillery/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/erikerikson/serverless-artillery/teams",
        "hooks_url": "https://api.github.com/repos/erikerikson/serverless-artillery/hooks",
        "issue_events_url": "https://api.github.com/repos/erikerikson/serverless-artillery/issues/events{/number}",
        "events_url": "https://api.github.com/repos/erikerikson/serverless-artillery/events",
        "assignees_url": "https://api.github.com/repos/erikerikson/serverless-artillery/assignees{/user}",
        "branches_url": "https://api.github.com/repos/erikerikson/serverless-artillery/branches{/branch}",
        "tags_url": "https://api.github.com/repos/erikerikson/serverless-artillery/tags",
        "blobs_url": "https://api.github.com/repos/erikerikson/serverless-artillery/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/erikerikson/serverless-artillery/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/erikerikson/serverless-artillery/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/erikerikson/serverless-artillery/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/erikerikson/serverless-artillery/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/erikerikson/serverless-artillery/languages",
        "stargazers_url": "https://api.github.com/repos/erikerikson/serverless-artillery/stargazers",
        "contributors_url": "https://api.github.com/repos/erikerikson/serverless-artillery/contributors",
        "subscribers_url": "https://api.github.com/repos/erikerikson/serverless-artillery/subscribers",
        "subscription_url": "https://api.github.com/repos/erikerikson/serverless-artillery/subscription",
        "commits_url": "https://api.github.com/repos/erikerikson/serverless-artillery/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/erikerikson/serverless-artillery/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/erikerikson/serverless-artillery/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/erikerikson/serverless-artillery/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/erikerikson/serverless-artillery/contents/{+path}",
        "compare_url": "https://api.github.com/repos/erikerikson/serverless-artillery/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/erikerikson/serverless-artillery/merges",
        "archive_url": "https://api.github.com/repos/erikerikson/serverless-artillery/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/erikerikson/serverless-artillery/downloads",
        "issues_url": "https://api.github.com/repos/erikerikson/serverless-artillery/issues{/number}",
        "pulls_url": "https://api.github.com/repos/erikerikson/serverless-artillery/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/erikerikson/serverless-artillery/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/erikerikson/serverless-artillery/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/erikerikson/serverless-artillery/labels{/name}",
        "releases_url": "https://api.github.com/repos/erikerikson/serverless-artillery/releases{/id}",
        "deployments_url": "https://api.github.com/repos/erikerikson/serverless-artillery/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/Lewuathe/mlir-hello/commits/5f63028555f11989b78d61371cb851f56e9779f3",
      "sha": "5f63028555f11989b78d61371cb851f56e9779f3",
      "node_id": "MDY6Q29tbWl0MzE3NzUwNTkwOjVmNjMwMjg1NTVmMTE5ODliNzhkNjEzNzFjYjg1MWY1NmU5Nzc5ZjM=",
      "html_url": "https://github.com/Lewuathe/mlir-hello/commit/5f63028555f11989b78d61371cb851f56e9779f3",
      "comments_url": "https://api.github.com/repos/Lewuathe/mlir-hello/commits/5f63028555f11989b78d61371cb851f56e9779f3/comments",
      "commit": {
        "url": "https://api.github.com/repos/Lewuathe/mlir-hello/git/commits/5f63028555f11989b78d61371cb851f56e9779f3",
        "author": {
          "date": "2023-02-18T10:57:51.000+09:00",
          "name": "Kai Sasaki",
          "email": "lewuathe@gmail.com"
        },
        "committer": {
          "date": "2023-02-18T10:57:51.000+09:00",
          "name": "Kai Sasaki",
          "email": "lewuathe@gmail.com"
        },
        "message": "Squashed 'thirdparty/llvm-project/' changes from 23c1822d1a74..63c77bf71d80\n\n63c77bf71d80 [lldb] Make persisting result variables configurable\n920b46e108b2 [lldb] Add expression command options in dwim-print\ne49b93ef29a6 [gn build] Port 07e3ca238e68\n07e3ca238e68 Revert \"[TextAPI] Implement TBDv5 Reader\"\n4be17641b05d [TextAPI] wrap returned Errors in std::move\n347954314c97 [gn build] Port b861b1225380\nb861b1225380 [TextAPI] Implement TBDv5 Reader\nb309bc04eebc [GlobalISel] Combine out-of-range shifts to undef.\nd6d59e660bc7 [Clang] Fix __VA_OPT__ implementation so that it treats the concatenation of a non-placemaker token and placemaker token as a non-placemaker token\n34aff47521c3 [RISCV] Use MCSubtargetInfo::hasFeature where possible. NFC\nd9e4c1044072 [AArch64] Simplify with MCSubtargetInfo::hasFeature. NFC\nc0f3ac1d0015 Revert \"[Fuchsia] Enable llvm-driver build\"\nb1e09b5fa679 [libc++][NFC] Remove TODOs that are already done\n8007bcc13f8f [llvm-cov] Create syntax to pass source w/o binary.\n4eadd19cc423 [Fuchsia] Enable llvm-driver build\nef3a3b0726f4 [libc++][NFC] Replace _VSTD and _LIBCPP_INLINE_VISIBILITY in <__atomic/*>\n10b7cd660c73 [RISCV] Select signed and unsigned bitfield extracts for XTHeadBb\n2f88c07cf820 [lldb] StructuredData should not truncate uint64_t values\n8caa8d95afe4 [libc++][format] Addresses LWG3810.\n01afb3fb9902 [NVPTX] Use by default 'sm_60' architecture when expanding %ptxas-verify macro.\nf50cad2c55df [libc++] Mark a test relying on `typeid` as unsupported without RTTI.\nf6b724f1f9c8 [libc] Add basic fuzz target for the printf parser\n47fb6d1c65ec [libc] add mock arg list\n5fa9933c13e7 [mlir][tensor] Do not use affine ops on non-perfect-tiling unpack cases.\n2b2b8409e684 [RISCV] For rv32, accept constants like 0xfffff800 as a valid simm12.\nefe7c4b77bed Revert \"[RISCV] Add performMULcombine to perform strength-reduction\"\n16a66af0a0fe Revert \"[RISCV] Add vendor-defined XTheadMemPair (two-GPR Memory Operations) extension\"\n6774ba841145 [RISCV] xtheadmac: fix commutativity issue for the in/out register\n20cc23c708f0 [RISCV] Add performMULcombine to perform strength-reduction\nd2918544a7fc [RISCV] Add vendor-defined XTheadMemPair (two-GPR Memory Operations) extension\n21a543656cf4 [libc++] Add missing include in <__atomic/cxx_atomic_impl.h>\ndf56b55e1288 [RISCV][CodeGen] Add codegen patterns for experimental zfa extension (try 2)\n04d59f2ab3a8 [IR] Fix a warning\nf25cfd339a80 [mlir] Reintroduce API for creating operations with a DictionaryAttr\nbe83a4b257c8 [ADT] Fix tests for `StringMap::at` and `DenseMap::at`\n42944abf8583 [RISCV] Improve isInterleaveShuffle to handle interleaving the high half and low half of the same source.\nbc6e10c9efca [ELF][llvm-objcopy] Reject duplicate SHT_SYMTAB sections\n998ad085e865 Reland [gn build] Support linux/win compiler-rt cross compilation\n7a035de2d6c4 Revert \"[gn build] Support linux/win compiler-rt cross compilation\"\n2d85683f987a [lib++][format] Uses the new exception test macros.\nc0947dc44109 [RISCV][MC] Add support for experimental zfa extension (FLI instruction not included) (try 3)\nd73eb92cc673 [gn build] Support linux/win compiler-rt cross compilation\ncf86855c4453 [M68k] fix test regression introduced by D140180\n261d21f8c375 [libc++] Fixes a flaky test.\nc8399811e7b1 [gn build] Support building x86/64 Android libraries\n1ceb79e2e075 Port PlaceSafepoints pass to the new pass manager\n4180b29d206f [flang][runtime] Support DT edit descriptor in result of READ(SIZE=)\n7067aee367d4 [libc++][CI] Switches to clang-format-16.\nf7f86451ecd7 [libc++] Improve the format ignorelist generation.\n22b564c64b73 [RISCV] Add preferred function and loop alignment RISCVSubtarget. NFC\nb22aa3d74f27 [libc++][NFC] Rename _LIBCPP_NO_EXCEPTIONS to _LIBCPP_HAS_NO_EXCEPTIONS\n132003603ae3 [ADT] Add `at` method (assertive lookup) to DenseMap and StringMap\n2b51c8cd2ac6 [clang-tidy] Clarify bugprone-branch-clone diagnostic message\ndf82394e7a2d [libc][bazel] Export .bzl files for libc/test and libc/test/src/math.\n3476b56f0c78 [libc++][test] Adds more generic test macros.\n783cbf70abca [gn build] Port bf0f94a5cf82\nddeb55ab3359 [mlir] add option to multi-buffering\n4ecc6af813e2 [InstCombine] create a pass options container and add \"use-loop-info\" argument\ne03d254bbd54 [SLP]Do not reduce repeated values, use scalar red ops instead.\nbf0f94a5cf82 New SetOperations and unittesting for all SetOperations\n17a90f1196c1 Tighten up a modules test\n87a0479538fe [mlir][llvm] Fuse access_group & loop export (NFC)\ncf4df6168838 [SVE] Add intrinsics for floating-point operations that explicitly undefine the result for inactive lanes.\n83e9ef7e519a [mlir][standalone] Extend sample with custom type\naf6c0b6d8c9d [clang][CodeGen] Use base subobject type layout for potentially-overlapping fields\n4bf6cc63aa77 GH60642: Fix ICE when checking a lambda defined in a concept definition\n06621ecdaf41 [Clang] Convert some tests to opaque pointers (NFC)\nf098fb69f164 [Clang] Convert some tests to opaque pointers (NFC)\n4901245481b6 Fix Clang sphinx build\n6f3a756998b3 [RISCV][NFC] Add missing immediate operand types.\ne133cb9c6daf [mlir][llvm] Add DINamespace attribute\n276358fd3af5 [mlir][llvm] Make DI param optional to match LLVM\n76c638d1ddec [gn build] Port 46db8d822ecd\n46db8d822ecd [libc++] Granularize <atomic>\n62e4f81c6793 [AMDGPU] Simplify widenScalar condition for BigTy for G_(UN)MERGE_VALUES\nf3fa1086c7f8 [Clang] Convert some tests to opaque pointers (NFC)\nafcf70aa6de7 [analyzer] Remove unjustified assert from EquivalenceClass::simplify\n40a20ae6ab80 [libc++] Granularize <bit> includes\n2693efa8a5bc [MachineCombiner] Support local strategy for traces\ne6e0ba8d20b4 [Clang] Convert some tests to opaque pointers (NFC)\ncdf8f064694c [mlir] Add a folder for lbs, ubs, steps of scf.forall.\neb14186771e7 Revert \"[LLD] [COFF] Don't try to detect MSVC installations in mingw mode\"\nbf91cd6ea9d6 [mlir][llvm] Verify LLVM module before import\nda3623de2411 [JT] Always create BPI/BFI when running in legacy PM\n159073bc0a87 [clang-repl] Support compound statement as a top-level statement.\neb2f946e780c [mlir][scf] Rename ForeachThreadOp->ForallOp, PerformConcurrentlyOp->InParallelOp.\n65898e526060 [ConstantRange] Handle `Intrinsic::ctlz`\na1e80c69223a [Support] [Windows] Don't check file access time in equivalent(file_status, file_status)\n389bfbd66d6f [LLD] [COFF] Don't try to detect MSVC installations in mingw mode\n3d84f4268dd9 [Clang] Convert some tests to opaque pointers (NFC)\n6f4af64b7422 [mlir][llvm] Add atomic support to the LoadOp.\n55a18bfe9b65 [Clang] Convert some tests to opaque pointers (NFC)\n58dada5f0aad [AMDGPU] Add cross-project-tests for WMMA builtins\na048d7394be5 [MLIR][LLVM] Only disallow inlining for selected function attributes.\n57c81917d3a5 [Clang] Convert update_cc_test_checks tests to opaque pointers (NFC)\na96cbeb45062 [DAGCombiner] Teach MatchContextClass classes to use TargetLowering::isOperationLegalOrCustom().\n310deca248c8 [mlir] Add loop bounds to scf.foreach_thread.\n6d5ea6b12342 Revert \"[Coroutines] Stop supportting std::experimental::coroutine_traits\"\nc4e6e771f255 [Coroutines] Stop supportting std::experimental::coroutine_traits\nf2404a58b0b4 [NDF] Revert earlier nfc commit to test commit access\n511d55060454 [NFC] Testing new commit access by adding newline\ne0528382b570 [lldb] Add missing decorators import in TestPoPersistentResult.py\n5552c4ddd76d [lldb] Limit TestPoPersistentResult to darwin\n3328ee550c86 [lldb] Suppress persistent result when running po\nb3215c810617 [lldb] Rename SetResultIsInternal to SetSuppressPersistentResult (NFC)\n39811e2e537d [llvm][test] enable/disable -verify-machineinstrs where possible for callbr\nb05dc1b8766a [clang-format] Add a space between an overloaded operator and '>'\n7c9df7743521 [ADT] Provide C++20-style bit functions\n93de5f13b9dd [CodeGen] Fix warnings\n0eabb884abeb [mlir][gpu] NFC let user pick the threadID values when distributing foreach_thread\ne3a88a41af83 Revert \"[mlir][vector] Prevent duplicating operations during vector distribute\"\ncda4a0e918b5 [Sema] Relax a failing assertion in TransformBlockExpr\n25a461046ec2 OpenMP: Regenerate test checks\n77af16bcb78a Recommit \"Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\" (2nd Try)\n9e9444ca7d4b Recommit \"Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\" (2nd Try)\nffe982f96bff [lldb] Stop generating swig bindings for SBLaunchInfo copy constructor\n8045ba89488c [ThinLTO/WPD] Handle function alias in vtable correctly\n54186d33c3a0 [clang] add __has_extension(gnu_asm_goto_with_outputs_full)\naf6656338db3 [clang] fix -Wuninitialized for asm goto outputs on indirect edges.\n329ef60f3e21 [Clang] support for outputs along indirect edges of asm goto\nb1bc723dfe97 [Clang] refactor CodeGenFunction::EmitAsmStmt NFC\na3a84c9e2511 [llvm] add CallBrPrepare pass to pipelines\n5cc1016a57b3 [llvm][SelectionDAGBuilder] codegen callbr.landingpad intrinsic\n28d45c843cd0 [llvm][CallBrPrepare] use SSAUpdater to use intrinsic value\n094190c2f529 [llvm][CallBrPrepare] add llvm.callbr.landingpad intrinsic\n0a39af0eb72d [llvm][CallBrPrepare] split critical edges\nfb471158aa0d [llvm] boilerplate for new callbrprepare codegen IR pass\n45a291b5f609 [Dominators] check indirect branches of callbr\ndf277ec67efd [X86][MC] Fix the bug of -output-asm-variant=1 for intel syntax\n7495a2e51bff [Attributor][FIX] Ensure we adjust types properly\n58bedaed0fea [LLDB] Remove unused variable 'lang_rt' in ClangExpressionParser.cpp (NFC)\n2738dc0bd3b7 [ComplexLogicCombine] Precommit tests for complex logic combine init patch; NFC\n8116fc592c5e Revert \"[LLDB] Enable 64 bit debug/type offset\"\nf253bb640d97 [WebAssembly] Fix simd bit shift intrinsics codegen\ne073de833671 [WebAssembly] Update wasm.c with update_cc_test_checks.py. NFC\ne6758c81f867 [mlir][sparse] comment out test cases in sparse_conversion with similiar behavior.\n65277494f04d [flang][runtime] Allow record advancement in child I/O via '/' control edit descriptor\n52a774fd4c18 [PowerPC] remove XXSWAPD after load from CP which is a splat value\nfb7c38073e80 [AArch64][ISel] Always use pre-inc/post-inc addressing mode for auto-indexed load/store with constant offset.\n0af5f84a13be [mlir][sparse] split reshape.mlir into expand/collapse_shape.mlir.\n22cdeb54a123 [MLIR][OpenMP] Add Conversion for Atomic Update Op\nb374423304a8 [Pipeline] Move ControlHeightReduction to module optimization pipeline\n9e8d9316ceaf [mlir][sparse] allow foreach operation to generate out-of-order loop on non-annotated tensor.\n2062e90aa531 [LLDB] Enable 64 bit debug/type offset\nb66fdbad44b3 [gn build] Manually port D143983\n956c7dca29c7 [Object][NFC] Remove unneeded llvm_unreachable\n56e41fcf5028 [PowerPC] Bail out of FISel when lowering long calls\nc2e248c6aea6 [mlir][sparse] Remove the expansion of symmetric MTX in the sparse tensor storage.\n5172877bbddc [Libomptarget] Check errors when synchronizing the async queue\n48c8e1602048 Revert \"[Libomptarget] Check errors when synchronizing the async queue\"\n53862b5658dd RenderScript still exists as a clang language, so handle as invalid\nf83e6c6d7a8d [Bazel][mlir] Fix build errors\nf5cca3c5ce7a [flang] Handle expression in SELECT TYPE selector\nb8d3d02d7c8c Remove now unused enum.\n5f5cf6029852 [Pipeline] Remove -enable-npm-O3-nontrivial-unswitch flag\n4d16ebd6c971 [Pipeline] Remove -enable-no-rerun-simplification-pipeline flag\ndccd1d736c25 [libc][bazel] add string to float targets\n662548c82683 [lldb] Replace SB swig interfaces with API headers\n23d43e697757 [libc++] Add regression test for std::hash implementation in ABI v1\nc6c41c31f1e5 [mlir][linalg][tensor] Delete duplicate tests and fix typo in filename\n17e2497593d6 Remove Renderscript LLDB\n22e199e6afb1 [RISCV] Accept zicsr and zifencei command line options\n372820bf571c [libunwind][PowerPC] Fix saving/restoring VSX registers on LE systems\nfbe210dc7a6a [libc] Implement htonl and htons\n35742743d273 [Hexagon] Fix number of arguments in call to DAG.getNode for VINSERTW0\nf842b7a6b8f4 [HLSL] add log library functions\n891b0910b3c4 Revert \"[RISCV][MC] Add support for experimental zfa extension (FLI instruction not included)\"\n8a17cd9905c2 AMDGPU: Add a regression test case for D143963\n8e5a41e8271f Revert \"AMDGPU: Override getNegatedExpression constant handling\"\nbbef38352fba Revert \"[LowerTypeTests] Support generating Armv6-M jump tables.\"\n9305b63d6951 [AMDGPU] Add another G_UNMERGE_VALUES legalization test case\nd9a04d1d5453 [libc] Support running tests for Pigweed\n2ac85cd56381 [AMDGPU] Regenerate check lines to enable updating for D144050.\n0871337d97f7 [XCore] Adapt Clang tests to opaque pointers.\n7ed26ad10cef [flang] Always incorporate parent types' special generic bindings\n1538761303ce [LSR] Add test case which shows additional LSR with D144050.\n861709107b43 [Libomptarget] Check errors when synchronizing the async queue\nf6fa5a66d8a8 [RISCV][MC] Add support for experimental zfa extension (FLI instruction not included)\neb3dfa0a2487 [Clang] Convert some tests to opaque pointers (NFC)\n081815b4e32c [Clang] Regenerate check lines (NFC)\n2d6713b5b7a2 Revert \"[RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\"\n80334ca1e285 Revert \"Update: [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\"\n80abf86d506b Revert \"[RISCV][CodeGen] Add codegen pattern for experimental zfa extension (FLI and FCVTMOD not included)\"\n7abe3497e72a [LSR] Improve filtered uses in NarrowSearchSpaceByPickingWinnerRegs\na768112e0641 [Clang] Convert some tests to opaque pointers (NFC)\nf6ddf7781471 [LowerTypeTests] Support generating Armv6-M jump tables.\nafde3f549d7a llvm-tblgen: Apply IWYU partially\n3a6f3b44e434 [flang] lower hlfir.matmul into fir runtime call\n91cbc3f2d83d [flang] lower matmul intrinsic to hlfir.matmul operation\n09472ba31504 [flang] add hlfir.matmul operation\nec640382fc93 [mlir][MemRef] NFC - Add debug information to MultiBuffer.cpp\ne44f405bb41b [mlir][bufferization] Fix bug in findValueInReverseUseDefChain\n4565bc00de6e [DataLayout] Use separate vectors to store alignment (NFC)\nace6072bca65 [mlir] PromoteBuffersToStackPass - Copy attributes of original AllocOp\n28542e99bb82 [mlir][llvm] Use before def debug intrinsic import\n8421307b6b16 [Clang] Convert some tests to opaque pointers (NFC)\nb32b7068ef8e [ConstraintSystem] Use sparse representation for constraints. (NFC)\n66749ce92707 [ARM] Add Thumb LSR codegen tests. NFC\na9e4bb387b21 [flang][hlfir] Array constructor lowering [part 2/4]\nffde9f17300b [flang][hlfir] Array constructor lowering [part 1/4]\n849c4402261a [Flang][OpenMP] Added parser support for device_type clause\n5c988cba4a66 [flang] Use derivedType from toAddedum to get updated components\n96179dff46a9 [mlir][Linalg] Add a transform dialect op to rewrite ops to destination passing style.\nb58daf91d677 Add a lowering for memref.dealloc with unranked memrefs.\nba23bca0a83d [SME2][AArch64] Add multi-single multiply-add long long intrinsics\ne97fc5007e72 [flang] Add TODO instead of crashing on assert\n83014d877017 [libc++] LWG 3857: allow `string_view` conversion when only traits vary\n574e417460cd [clang] Fix a bug that allowed some overflowing octal escape sequences\n5bdd0beeee56 [MachineCombiner][NFC] Rename `MinInstr` to `TraceEnsemble`\na3d1de3e2908 [LV] Move invalid cost remark code to separate function (NFC).\n873ea45115a8 [mlir][llvm] Rename void debug type to null\nc76acb9dffec [UniformityAnalysis] Fix some file headers and pass names\n130d2953d878 [Flang][OpenMP] Fix a corner case where target region is empty\n4bc2357c3de2 [mlir][MemRef|Tensor] Fix the handling of DimOp\n7fbcc24409ef [llvm-debuginfo-analyzer] (08a/09) - Memory Management\n2002c82278f6 AArch64: count callee stack we use when estimating scavenging requirements.\n819dfc338bdd [AMDGPU] Autogenerate checks for several tests. NFCI\n0e1fb48bb95a [lld-macho] Use uint64_t instead of size_t to fix 32 bit test failures\neeb125659c17 [InstSimplify] Slightly optimize simplifyLoad() (NFC)\n37b7a60cd74b [NFC] Add a test for C++20 Modules\na1b78fb929fc [JT][CT] Preserve exisiting BPI/BFI during JumpThreading\nf8d5f0e53b04 [NFC] Add two tests for C++ modules\n4469ec1d196f [mlir][llvm] Import alias scope metadata from LLVM IR.\nc9fad20f6a66 [InstCombine] Call simplifyInsertValueInst()\n6bec2c30777f [InstCombine] Add additional aggregate reconstruction test (NFC)\n9ca2c309ab06 [InstSimplify] Fix poison safety in insertvalue fold\nb0de87268a60 [flang] Retrieve the correct scope when lowering SELECT TYPE\n86c8ea9ac922 [mlir] Add check for value that might be null.\nf62b084e92e0 [LoopDeletion] Remove legacy pass\n999ead9dc908 [Modules] Code cleanup after removing ModulesTS\n612f3ac26f8c [Modules] Remove -fmodules-ts\n96df79af029b [X86] Support load/store for bf16 in avx\n7e6e636fb683 Use llvm::has_single_bit<uint32_t> (NFC)\n68e81d7e45c7 [ADT] Use llvm::rotr (NFC)\nd54888a3ebb1 [Modules] Refactor modules-ts tests to use standard c++ modules\nfc6d517e2f33 [RISCV][CodeGen] Add codegen pattern for experimental zfa extension (FLI and FCVTMOD not included)\n5e815372480d [Clang][RISCV] Sort test cases into its mnemonics\na1aad28d297a [mlir][vector] NFC: Improve vector type accessor methods\n5382d28815d8 [mlir] Use std::optional instead of llvm::Optional (NFC)\n43059255ce53 [RISCV] Make a const member function static. NFC\n321cd52ba264 Update: [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\n54c136e6c630 [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\n7081e59dd12a [MC] Remove an unneeded comparison on cast result. NFC\n9a2cb3a6925f Fix bazel build\nf30ca850ef8b [mlir][sparse] reduce the input size in stress_test.py to make it finish in time.\ndcf18e4757b2 [debugserver] Initialize logging earlier in the startup sequence\nc738b430c46a [mlir][sparse] introduce operations to query sparse tensor slice offset/strides at the given dimenion\na851d46e07c1 [Clang][Driver] Fix integer normalization with KCFI\n4eee77873bca [LoopReroll] Remove legacy pass (unused in the pipeline)\ne2e83f4c8f1d [mlir][sparse] support coiteration over sparse tensor slices\n22b7685401e8 Reland \"[hwasan] Add definitions for missing operator delete functions\"\na9269773eb94 [scudo] Improve the uses of roundUpTo/roundDownTo/isAligned\n94a391b94972 [scudo] Calling iterateOverChunks requires holding lock\nae1bd3adf02f [scudo] Add thread-safety annotations on TSD data members\ne7d3f43eafdd [LoopFlatten] Inline an external linkage function not in llvm::. NFC\n48bfed77cf86 [LoopFlatten] Remove legacy pass (unused in the pipeline)\nf1ddfa6d8a72 [lldb] Remove pydoc import during script interpreter init\n7d62bc9cd380 [mlir][sparse] disable sparse convolution test cases.\n21ccddd2cee1 [LoopInterchange] Remove legacy pass (unused in the pipeline)\n66b3f4a40731 [libc][bazel] Add missing dependency for stdlib tests.\n9ed587ea9bec [mlir][sparse] split sparse concatenate test cases smaller ones.\nae7942e2960e [mlir][sparse] adding `SparseTensorType::get{Pointer,Index}Type` methods\n8bd0e9481cfc Revert \"Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\"\n7adf26e7683d Revert \"Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\"\nc38c8d674383 [PseudoProbe] Refactoring a test\n7058f083020d [gn build] Port 6f3e6a765a9e\nf5aa8d191a5b [Clang][docs] Update the release notes page to the new skeleton\n6313ece5ce94 Revert \"[hwasan] Add definitions for missing operator delete functions\"\n052ae28ac77f [RISCV] Use !cond instead of multiple !if in RISCVInstrInfoVPseudos.td. NFC\nd464edde9571 [X86][Win64] Avoid statepoints prior to SEH epilogue\nd950bdc73eb2 [mlir][sparse] misc code cleanup\n74a5d7471fbd [flang][runtime] MayAlias() must be false for unallocated descriptors\n08ecef8e338f [RISCV] Add CLB/CLH/SLB/SLH formats for Zcb instructions.\n792a724f894a [RISCV] Remove some vestiges of Zbp and Zbt extensions. NFC\n8c1f77af7fd1 [clang-format] Fix windows build.\ne6fbfb1ff1d3 [NFC] Make Module::getIFuncList() private\nbb4fc6b6d6b4 [mlir][sparse] Adding `SparseTensorType::{operator==, hasSameDimToLvlMap}`\nee437afa912b [flang] Don't add a source range to a type instantiation's scope\n6f3e6a765a9e Revert D129735 \"[RISCV] Add new pass to transform undef to pseudo for vector values.\"\na9797d7d2d78 [C2x] Implement the `unreachable` macro for WG14 N2826\nd6ff0808618c [hwasan] Add definitions for missing operator delete functions\n565048543b35 [NFC][SVE] Refactor isel for floating multiply-add operations to use PatFrags.\n72584d91990b [scudo] Fix inconsistent signed/unsigned comparison\ndf2ea2fc2839 [ConstriantElimination] Add NODEBUG condition around `dump`\n8a7b5e0e50de [AArch64] Guard extra uses in mls combine.\nc3ca29080c17 [mlir] bazel fix\nbe75cf931f3f [mlir][tensor] Fix a bug in tiling unpack op.\na41e1ea2a746 [libc++][CI] Starts using Clang 17.\neddec9de44cd [Pseudo probe] Duplicate probes in vectorized loop body.\n57865bc5ad27 [CodeGen] Add a flag to `Address` and `Lvalue` that is used to keep track of whether the pointer is known not to be null\n9048ea28da95 Reland \"[mlir] Make the vast majority of intgration and runner tests work on Windows\"\n114ce273d86a [flang][runtime] Fix typo in assign.cpp\n78e172fc92e7 [mlir][spirv] Support i32 memref.atomic_rmw conversion\n7889f424966e [flang][NFC] Remove unwanted tab\n97ba3c2bec48 [Clang][AMDGPU] Set LTO CG opt level based on Clang option\n45ee0a9afc62 [LLD] Add --lto-CGO[0-3] option\n3cf7f2249825 [mlir][vectorToGPU] Fix type used when folding transpose into read op\na225d897c151 [DebugInfo][Docs] Fix broken link in instruction referencing doc\n82ae83a8487d [mlir] Silence a few -Wunused-but-set-parameter warnings\n22f0c7a45149 [mlir][AMDGPU] 8-bit float usage in the AMDGPU dialect\n50ef8673a378 [InstCombine] remove stale test comment; NFC\n07f93d8c2cc4 Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\nb413b84a704e [libc++abi][AIX] Skip non-C++ EH aware frames when retrieving exception object\nb0bfbad19b06 [AArch64] Always lower fp16 zero to FMOVH0\nef15617f124c [flang][runtime] Return the right mutable modes from INQUIRE in child I/O\n6dd9d18204d2 [mlir][linalg] Fix insertion point bug in D144022\n4f15267d3dd7 [libc++][NFC] Replace _LIBCPP_STD_VER > x with _LIBCPP_STD_VER >= x\n6b991ba486b6 [clang][dataflow] Change `transfer` API to take a reference.\n02ae7e72b3f0 Revert \"Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\"\n22882c39df71 [InstSimplify] Add additional insertvalue into undef tests (NFC)\n93164dba086d [llvm][AArch64] Fix BTI after returns_twice when call has no attributes\n2a2a6bfcfe8e Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\n62d0e1a8541f Revert \"[ConstraintElimination] Change debug output to display variable names.\"\n869c87ad10e8 [ConstraintElimination] Change debug output to display variable names.\nb67ee5d50562 [reland][libc] Separate memcpy implementations per arch\nc645eb0d03bd [mlir][memref] Bufferize memref.tensor_store op\n01581e28ad92 [mlir][linalg] Add bufferize_to_allocation transform op\n07916cea2e7e [ConstantFold] Check for constant global earlier (NFC)\n8b5004864aab [lld][RISCV][test] Expand testing in riscv-attributes.s\n4c3408697b73 [LangRef] improve documentation of SNaN in the default FP environment\n7a282bd2aaa5 [bazel] Fix missing dependency in clang-tools-extra/clang-tidy:llvmlibc\n861764b1c5f7 [NVPTX] Fix NVPTX output name in the driver with `-save-temps`\n15b90805bcb8 Revert \"[libc] Separate memcpy implementations per arch\"\n97e441dc6cfa [libc] Separate memcpy implementations per arch\n3ef062a4bd86 [mlir][transform] Add transform.get_result op\n1f818f63b829 [clang-format] assert(false) -> llvm_unreachable\nf70282237166 [bazel] create a clang-tidy binary target\n980aa8d740da [MachineTraceMetrics] Add local strategy\nb0e7ca79ab0c [X86] Remove abs(sub_nsw()) -> abds fold from adbu test file\na8483b9b3038 [lldb] Fix a log format warning on Windows, don't assume uint64_t is a long type\n1995d4424505 [clang-format] Enable FormatTokenSource to insert tokens.\n9ccc58893be8 AMDGPU: Fix not adding to depth in getNegatedExpression\n7cbbbc0a045b clang: Rename misleading test name\n674f094d852b [lld][ARM][NFCI][1/3]Big Endian support - Removing assumptions\n5bb8ead4e9dc [AArch64][NFC] Rename  AEK_SMEF64 and AEK_SMEI64 feature flags\n3600b384462b [SimpleLoopUnswitch] Canonicalize conditions for injection of invariant condition\n0992e6ee115e [Test][NFC] Rename one of test parameters to avoid confusing associations\ne117fd28d525 [Symbolize][MinGW] Support demangling i386 call-conv-decorated C++ names\n14fcdd7f9d7b [CVP] Add additional ctlz tests (NFC)\n4c8eda9337d4 [XCore] Adapt threads.ll to opaque pointers.\nbc173f526c57 [SimpleLoopUnswitch] Fix overflowing frequencies case\n45ddc157ca7c [clang-tidy][NFC] Remove ModernizeTidyModule::getModuleOptions\nc7f9344d0f8f [DAGCombine] Fold redundant select\nc3228714cc0e [libc][NFC] Make tuning macros start with LIBC_COPT_\nd64d5772b1ea Add InstSimplify tests for comparisons between known constants\n59b8db1db8ec [JITLink] Drop const qualifier from argument to ELFLinkGraphBuilder's ctors (NFC)\n1c42f8e69d8f [JITLink] Fix whitespace in debug dumps (NFC)\n7d9cf97f80f0 [bazel][mlir][examples] Add missing dependency for 72429a42ac33564fa82449d99dc234da32a05498\n458ad6900e66 Revert \"InstCombine: Fold is.fpclass(x, fcZero) to fcmp oeq 0\"\ne1d95e99bc31 [flang] Update intrinsic types to unlimited polymorphic form\n11c3cead2378 AMDGPU: Override getNegatedExpression constant handling\na4e8347b3661 AMDGPU: Refactor isConstantCostlierToNegate\ndf78976d023a InstCombine: Fold is.fpclass(x, fcZero) to fcmp oeq 0\n8f7e7400b74b [mlir][bufferization] Add restrict and writable attrs to to_tensor\n462227f1150f [SROA] NFC: Look at TypeStoreSize scalable property, rather than at type directly.\n35276f16e5a2 [llvm-c] Add C API methods to match 64bit ArrayType C++ API signatures\n71712440bbb2 [mlir] Add vectorize_nd_extract attribute to the masked_vectorize Op\n86a63b2ae147 [Metarenamer] Use 'inst' as default name for instructions\nddc5d40dd285 [clang][analyzer] Make messages of StdCLibraryFunctionsChecker user-friendly\nc1eb3db780b7 [LoopFuse] Remove legacy pass\n30d542f9b2ad [MLIR][Tensor] Introduce a pattern to propagate through `tensor.pad`\n2872987e5e91 [InstCombine] Fix InstCombinerImpl::foldICmpMulConstant for nsw and nuw mul with unsigned compare.\n41628d050a17 [mlir][Bazel] Add missing dependencies for 72429a42ac33564fa82449d99dc234da32a05498\n4bba8bd33efd [mlir] Add RewriterBase::replaceAllUsesWith for Blocks.\n72429a42ac33 Add a pass that builds a debug info scope for LLVMFuncOp (adding a DISubprogramAttr)\nd7ca25342ff6 [mlir][Bazel] Add dependency needed for e9b82a5c\n1427277eed80 [mlir][Vector] Enable masking for static shapes\n1ac874c9aa18 [mlir][Vector] Add support for masked vector gather ops\n9452356ddcf4 [mlir][Vector] Add support for masked vector.contract\ne9b82a5c4fb6 [mlir][Vector] Add LLVM lowering for masked reductions\na409f3c06914 [LoopVersioningLICM] Remove legacy pass\n0dc18b6222f4 [mlir] Use std::optional instead of llvm::Optional (NFC)\n05423905d064 [mlir] Use std::optional instead of llvm::Optional (NFC)\n4dfd5a3eb6c3 [llvm] Use std::optional instead of llvm::Optional (NFC)\n71251e8d4f3f [mlir] Fix -Wsign-compare in SparseTensorRewriting.cpp and Sparsification.cpp (NFC)\n9e6e96f3e4c3 [gn build] Port f1c4241fb6e5\nf1c4241fb6e5 [RISCV] Add new pass to transform undef to pseudo for vector values.\na17bfbad6387 [RISCV] precommit test for D129735\n54cf24dc6e63 [NFC] Refactor ModuleDeclStateTest to make it not dependent on Frontend\nef6d474aa7ac [ORC] Add ELFNixPlatform::Create overload -- Pass ORC runtime as def generator.\nf708a549b87e [mlir][sparse] Factoring out SparseTensorType class\n8d995b26c755 [C++20] [Modules] [ClangScanDeps] Ensure that we can mix the use of and clang modules\naef76fe554ee [clang-format][NFC] Reformat clang/tools/clang-format/fuzzer/\n81cb70e46ea1 [mlir][sparse] fix a bug in UnpackOp converter.\ndd31a3b3a526 [InstCombine] fold icmp of the sum of ext bool based on limited range\n06f06644efb0 [SeparateConstOffsetFromGEP] Fix: `b - a` matched `a - b` during reuniteExts\nf93da3962eed [Instcombine] Precommit tests for icmp range; NFC\na52432f63312 [NFC][SeparateConstOffsetFromGEP] Added flag `lower-gep`\na211d79cac12 [bazel] Port 26662ac010ef50e65e2774eab84f325aa09360fe\n6e794ba0b238 [Clang][RISCV] Guard vector int64, float32, float64 with semantic analysis\nc0f504df4857 [mlir] Fix two build warnings in VectorToGPU (NFC)\nbb692d44c43f [gn build] Add missing count dependency for check-asan\ndfacba5af0fb [scudo] Update ring buffer test to make it accept zero size\n766065aa6553 [LoopUnrollAndJam] Remove legacy pass\n6a4c39596d68 [scudo] Add the thread-safety annotations\n2b8cb7d87fcb [LoongArch] Make use of addu16i.d for adds with suitable immediates\ndcf9c60a538c [LoongArch] Add baseline tests for `addu16i.d` codegen. NFC\n82c6e90d6a3d [Clang][Test] Add llvm-lto, llvm-lto2 and llvm-profdata to the tool substitutions list\n6adf92026ee5 Remove trailing whitespace in `X86InstrAVX512.td`; NFC\nf895d55f149b Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\n42e11a6ea321 Add transform (and/or (icmp eq/ne (A, C)), (icmp eq/ne (A, -C))) -> (icmp eq/ne (ABS A), ABS(C))\nabf6692f9513 Tests for (and/or (icmp eq/ne A, C), (icmp eq/ne A, -C)) <--> (icmp eq/ne (ABS A), ABS(C)); NFC\n8b5c3902475b Transform `(icmp eq/ne Abs(A), Pow2)` -> `(and/or (icmp eq/ne A,Pow2), (icmp eq/ne A,-Pow2))`\n54a9e992c84c Add Transform for `(and/or (eq/ne A,Pow2),(eq/ne A,-Pow2))`->`(eq/ne (and (and A,Pow2),~(Pow2*2)), 0)`\ne29c4393236f Add tests for folding `(and/or (icmp eq/ne A, Pow2), (icmp eq/ne A, -Pow2))`; NFC\nf3732c2b18df Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\n3e0866bf616b [mlir][Vector] NFC - Fail gracefully on size mismatch instead of assert\n5ef7ceae5769 [mlir][Vector] Significantly improve VectorToGPU.cpp\n26662ac010ef [Support/BLAKE3] Rename blake3_* -> llvm_blake3_* to avoid symbol collisions\n10eea3fe1536 [LoopVersioning] Remove legacy pass\n74a2dd1356bf [InstSimplify] fix/improve folding with an SNaN vector element operand\nac2f13f673b8 [InstSimplify] add tests for vectors with SNaN constants; NFC\nae0c203e676e [LoopLoadElimination] Remove legacy pass\n87046744e6a8 [Driver] Allow test to use lld-link.exe not just lld-link\neb5530e621aa [LoopDistribute] Remove legacy pass\n823186b14dc9 Recommit: [NFC][IR] Make Module::getGlobalList() private\n0a0d58f5465a [libc++] `<algorithm>`: `ranges::minmax` should dereference iterators only once\n83ba349ae0a8 [InstSimplify] fix/improve folding with an SNaN operand\n4a4e44e378ca [InstCombine] add test for loop-invariant fdiv; NFC\n1ce1e4a4d59d [mlir][spirv] Validate float type bitwidths\n96fcaf0cc06a [openmp] Fix building for mingw targets after import library changes\ncb5f239363a3 Revert \"[NFC][IR] Make Module::getGlobalList() private\"\ncafb1c1cb241 [runtimes] Remove duplicate imports of libcxx.test.config\nb4243bb611a3 [clang-format] Don't rewrite the input file if already formatted\ned3e3ee9e30d [NFC][IR] Make Module::getGlobalList() private\n33d0d1e36ffa [runtimes] Rename newconfig.py to config.py -- it's not new anymore\n9f3a3e1f3f97 [lldb] Disable macro redefinition warnings in expression wrapper\n20cdf7c70667 [InstCombine] Increase limit for max copied from constant fold\n0d4e55ba69c1 [OpenMP] Recover non-blocking target nowait disabled by D141232\n9093f3c39b8f Report a useful error when someone passes an incorrect python class name.\n853a46cfb1ca Revert \"llvm-reduce: Run instruction reduction last\"\n9e9293ee6aaf [llvm][test] convert one test to use opaque ptrs (NFC)\nac835ecb5fea [Fuchsia] Set /winsysroot in Windows runtimes linker flags\nc062e97acfba [llvm][test] restrict 2 GVN tests to just test GVN (NFC)\nc510c387631e [libc++][NFC] update Range Status for the completion of C++20 ranges\nb677d0753c0a [IPSCCP] Remove legacy pass\n36606cf07080 [NFC] Replace -1U{LL} expressions with appropriate *_MAX macros in Support library.\n31c35285d27e [mlir][spirv] Fix crash when decorating physical storage buffer pointers\n913b4aa60830 Reland \"[compiler-rt][hwasan] Add unused attribute to GetRegisters\"\nddb704247b16 [clang][test][RISCV] Introduce separate RUN lines for __risv_i test in riscv-target-features.c\naecb36c8489a [GlobalOpt] Remove legacy pass\nb40bfc1b9e38 Reland \"[gn] port f29cfab55d1f\"\n5b455a8efbf5 [InlineAdvisor] Restructure advisor plugin unittest cmake\n08533f8b8660 Revert \"[CGP] Add generic TargetLowering::shouldAlignPointerArgs() implementation\"\n12b4f9e2af95 [AMDGPU] Do not apply schedule metric for regions with spilling\n5c1b8de77d1c [libc++][doc] Sets the proper plenary date.\n8cf1524cbc7f [loop unroll] Fix `branch-weights` for unrolled loop.\nfb717fe06dd0 [NFC][IR] Make Module::getNamedMDList() private\neaeb8ddd4a9d [LLDB] add arch-specific watchpoint behavior defaults to lldb\n8198f30f7e75 [lld-macho] Account for alignment in thunk insertion algorithm\n055cd78eef15 [RISCV] Untabify THMulAccumulate_rr. NFC.\nd4012bc43f9a [RISCV] Add vendor-defined XTheadMAC (multiply-accumulate) extension\n179db7efe567 [MLIR][OpenMP] Add support for depend clause\n361d5a7a9f14 [gn] port 4e3dac6f0a4c (ScudoHooksUnitTest)\n7301a7ce196e [mlir][linalg] Make Linalg vectorizer lower affine.apply\n4e3dac6f0a4c [scudo] Call __scudo_deallocate_hook on reallocations.\n6c7894a8e652 [libc][doc] Move docs/math.rst to docs/math/index.rst\nddde06906be1 [OpenMP]Fix PR55970: Miscompile of collapse(3) with non-rectangular loop nest.\n5dc400ea2f06 [gn build] Port 7f5d130a428f\n1da2085a5133 libclc: add clspv to targets exempt from alwaysinline\n290308a99e6b libclc: add generated convert.cl to clspv/clspv64 targets\n9c8f3409494f [libc++][format] Fixes test failures.\n7f5d130a428f [libc++][chrono] Add hh_mm_ss formatter.\n5205c7126b2f [mlir][gpu] Add support for unsigned integer extend in vector to gpu.subgroup_mma lowering\nf6cd46e07fcc libclc: add more generic implementations to clspv SOURCES\nf8877d86a867 [libc++][doc] Adds Issaquah papers and issues.\n5a81d0eea40a [AArch64] Remove dead isReflexive methods. NFC\na9f384994b9d [libc++] Counter<T>'s assignment operator shouldn't ++gConstructed\n755535b5eb5f [flang][runtime] Handle aliasing in Assign()\n0f52c1f86c62 [llvm] Deprecate {Bits,Float,Double}To{Bits,Float,Double} (NFC)\nd180443570d7 [NFC][IR] Make Module::getIFuncList() private.\n016d5a0a0a15 [flang] Strengthen conformance requirements for allocatable/pointer dummy arguments\nd05e1e99b1d6 [clang][test][RISCV] Check for __riscv_i in riscv-target-features.c\n574d0c2ec107 [clang][test][RISCV] Fix precision of CHECK-NOT lines in riscv-target-features.c\nf4d8b8781de9 [AMDGPU ASAN] Remove reference to asan bitcode library\nc5085c91cc8e [CodeGen] Trivial simplification of some getRegisterType calls. NFC.\n800fec13a81f [libc++] Enforce formatting for already formatted and new files and ignore the formatting of tests\nacbb15ed705f Revert \"[extract_symbols.py] Adjust how the output of nm is interpreted\"\n9a8d64a66a15 Revert \"[libc] Separate memcpy implementations per arch\"\nbf987e108fcc [AArch64][SME]: Custom lower select and fp_extend for streaming SVE\n26541d417634 [libc] Separate memcpy implementations per arch\n8981f20ae9c3 [libc] refactor logic around embedded memcpy\n3af88305e443 [flang] Associate entities are variables\nfefe729f0f4a [AArch64][SME]: Custom-lower SIGN_EXTEND_INREG for streaming SVE\n057cae64ebc4 [MLIR][Presburger] Matrix: hide expensive consistency check behind EXPENSIVE_CHECKS macro\nf04421739232 [ConstraintElim] Add reproducer remarks.\n9c14132d7b6c [AArch64][SME]: Add missing Ops that need custom-lowering in streaming mode.\nbfbfbd8b65de [LVI] Fix and re-enable at-use reasoning (PR60629)\n0fa5df1959fa [LV] Synthesize all true masks for masked vector function variants\n09dd4d870e19 DAG: Remove hasBitPreservingFPLogic\nd94399c64151 [mlir][llvm] Make LoopAnnotations non-discardable\n463fa25c34d6 [clang][NFC] Adjust tests to not un/define predefined macros\n7a49d50f22ad [flang] support fir.unreachable in stack arrays pass\neb436da6b826 [flang] automatically load FIR dialect with hlfir\nddfabefe1be1 [libc] Conform memcpy tuning macro to the new naming scheme\n77bd15ae2fa3 [MachineTraceMetrics][NFC] Move Strategy enum out of the class\n147f476e851d [mlir][LLVM] Properly wrap code examples in markdown code blocks\na5488a398f3b [flang][hlfir] remove unnecessary header include\n1fae1464d7a7 [flang] Fix USE rename\n67223522355b [SimpleLoopUnswitch] Re-enable simple-loop-unswitch-inject-invariant-conditions\nc7ea20c8eed5 [SimpleLoopUnswitch] Ignore inner loops when injecting invariant conditions. PR60736\nf3c008ca776b DAG: Relax foldBitcastedFPLogic conditions\n3849dc1f8eeb [NFC] Move some asserts out of Expensive Checks\n94676cf8a13c [llvm][AArch64] Fix an interaction of SLS and BTI after a returns twice call\nebc21c7a2558 [Test] Add test for PR60736\ncfeb0bf83ec1 [SimpleLoopUnswitch] Temorarily switch off simple-loop-unswitch-inject-invariant-conditions. PR60736\n8c7cfa357280 [mlir] fix LLVM IR translation of vector<... x index>\n98ecc3ac77a9 [Flang] Fix for Any/All simplification to properly propogate the inital value\ne8d44841c5d5 [docs] Update the ACLE URL\n6240627cfda4 [docs] Fix bullet list formatting\n0b33f0d80b83 [mlir][linalg] expose convolution dimension classifier\n7fdc2ed09f44 [mlir] reallow null results in TransformEachOpTrait\n64dad4ba9af6 Use llvm::bit_cast (NFC)\n544831ab9f35 [mlir] Drop unused arith conversion class (NFC)\n504aa8ae941e [include-cleaner] Better support ambiguous std symbols\n1ba93c3c30dc [Modules] Don't re-generate template specialization in the importer\n46cdf7f09912 [Tooling][Stdlib][NFC] Reflow comments and strip clang-format pragmas\n697a162fa63d [AVR] Fix inaccurate offsets in PC relative branch instructions\n1e6921131aa4 Move global namespace cl::opt inside llvm::\n4f0eb57222de AMDGPU: Teach getNegatedExpression about rcp\nce4b719f33e5 AMDGPU: Add test for getNegatedExpression with rcp\n0a669bd894f3 AMDGPU: Add additional tests for combiner infinite loop\n463ab1e07a0a llvm-reduce: Run instruction reduction last\n04f69345894d [DAG] Handle build_vector with all undefs in reduceBuildVecTruncToBitCast\n2e9549db2686 [LangRef] Global variable declarations imply minimum size\naf838c1b1c20 [Coroutines] Don't run optimizations for optnone functions\nbfea83767603 [mlir][llvm] Reintroduce string based attribute setting.\ncb90bb986611 [PowerPC] Specify the dynamic loader prefix in ppc-float-abi-warning\ndf3e73dabb5b [LoopDeletion] Simplify. NFC\n9c4f0d83f64e [docs] Add document for clang-scan-deps -format=p1689\n8c74defcca50 [OpenMP] Fix extra parenthesis in kmp_os.h\n5e78b749eccf [ARM] Use llvm::rotl and llvm::rotr (NFC)\na411bc727426 [RISCV] Rename InstFormatCSZN->InstFormatCU to match latest Zcb spec. NFC\n639b7865a67f [RISCV] Use llvm::rotl (NFC)\nafad153a0890 Recommit: [NFC][IR] Make Module::getAliasList() private\ndf77dec93e17 [AArch64] Use llvm::rotl and llvm::rotr (NFC)\n9700eb4fbfdc [bazel] build fix\n48f04ffa9f36 [mlir][affine] Normalize constant valued bound loop\n6d4a674acbc5 Revert \"[NFC][IR] Make Module::getAliasList() private\"\n7c6b46e87eaf Revert \"[DAGCombiner] handle more store value forwarding\"\nac6219d0aeb7 Revert \"[DAGCombiner] fix comments for D138899; NFC\"\nb64f7d028bdc [NFC][IR] Make Module::getAliasList() private\n6ee2f770efb6 [PowerPC][GISel] add support for fpconstant\n5561e174117f Revert \"[mlir] Make the vast majority of integration and runner tests work on Windows\"\n663725947bae [flang] Disable libc++ assertions in the runtime library\ncff7fad1544a [flang] Catch repeated BIND(C) attribute specifications for a symbol\n235e90c1d760 [Clang][RISCV] Guard vector float16 type correctly with semantic analysis\n4b815d8443db [mlir][NFC] Remove unused variable 'indexType' in GPUTransformOps.cpp\n288ae0b92f57 [mlir][gpu] NFC change to pass threadID ops to rewriteOneForeachThreadToGpuThreads\n69373a5d3f45 [flang] Check for invalid BIND(C) names\n4148f2768b87 [flang] Check for non-interoperable intrinsic types in BIND(C) derived types\n855b67799b7c [libc++][NFC] Remove duplicated line from `Cxx20Issues.csv`\n30d932305567 [flang] Pointers returned from functions are not definable as pointers\n632fd9fb861c [flang] Respect inaccessibility of type-bound ASSIGNMENT(=)\n5402110e0123 Revert \"[lldb] Use portable format string PRIx64\"\n7bc9dc26bc9b [Fuchsia] Add FUCHSIA_ENABLE_LLDB option.\n860ed6c078b4 [flang] Warn about dangerous TRANSFER()\n776b7499ea81 [TLS] Added a LangRef entry wrt the module flag MaxTLSAlign.\nb57bc158ea46 [flang] Catch obscure structure constructor error\nee88f1177003 Find SDK path more lazily in Apple Simulator platforms\nf7016f8a8ea2 [scudo] Call getStats when the region is exhausted\n70758b801df9 [scudo] Calling getStats requires holding lock\nf28c1a9df2e3 [flang] Conform with standard (mostly) for character length mismatches on arguments\ne800c664f0e9 [mlir][sparse] Extend readCOOIndices to support overhead types beyond index_type.\n8151d6f80458 [flang] Diagnose REPEAT with negative NCOPIES=\nce9ce66b8def [mlir][sparse] fix a memory leakage when converting from a tensor slice\n5fde2d99513f [libc] Write stub files to a new directory to avoid conflicts\n4f1037f86a62 [flang][build] Fix build issue reported on recent commit\n620b3d9ba334 Revert \"[LLDB] Enable 64 bit debug/type offset\"\neb0ea28b6a1b [OpenMP] Add check for target allocator regardless of the availability of libmemkind\n81566001e0c8 [mlir][tosa] Enable `apply_scale` unrolling\nb673135bb833 [Release] Produce bolt tarball\nbe7d7ca11018 [lldb] Use portable format string PRIx64\n17b097b8df69 [runtimes] Set LLVM_ENABLE_PER_TARGET_RUNTIME_DIR_default to ON for OS390\nf11ab8353f97 libclc: remove sqrt/rsqrt from clspv SOURCES\n807d43239a5f [VPlan] Use properlyDominates predicate for ordering FOR users.\n161b9d741a3c [mlir] Make the vast majority of integration and runner tests work on Windows\n19b1e27fcd56 [mlir][SPIRVToLLVM] Add pass option to emit opaque-pointers\n009fc4ca3b44 [mlir][LLVM] Verify correct pointer casts with `llvm.bitcast`\n0aaf2e3bc057 [mlir][GPU] add required address space cast when lowering to LLVM\n9d0b596aada6 [mlir][tosa] Fix segmentation fault in case of folding unranked tensor\nf36fe009c0fc [LLDB] Enable 64 bit debug/type offset\n7156d3b1fe80 [libc][bazel] Update math function unit tests' dependency computation.\n2dab5bdf89f6 [flang] Warn on mismatched DATA substring sizes rather than crashing\n9369b7d307be [lld][WebAssembly] Limit size of shared 64-bit memories of 2^^34\n67d78e3c6fe5 [libc] Add a loader utility for AMDHSA architectures for testing\ne5d914672233 [extract_symbols.py] Be more permissive when examining nm output\n8f5d81585aa9 [Clang][LLVM] Enable __arithmetic_fence and fprotect-parens on AArch64\ne96f994f39ad Revert \"[Hexagon] Add release note for LLVM 16\"\n892bf09606b6 [mlir][arith] Allow to specify `constFoldBinaryOp` result type\ndc38cbcc8b89 [mlir][arith] Fold selection over constant vector conditions\nf841c4af5f5e [lldb] Fix image lookup crash\n51a07fc24cb9 [clang] Add test for CWG2396\n7638409d4363 [RISCV] Make vsetvli intrinsics default to MA.\n06d9bf5e64d4 [OpenMP] generate the Windows import library that imports by name rather than ordinal\n96267b6b8840 [mlir] Add Float8E5M2FNUZ and Float8E4M3FNUZ types to MLIR\n7c84f6a43ae3 [flang] Emit portability warning for extension\n8e628f72b00c [mlir] Avoid building some shared libraries when PIC is off\nbf7c42161700 Revert \"Reland \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\"\n8a57748804bd Revert \"[lldb][Test][NFC] TestExternalCtorDtorLookup: add more instantiations to test linkage name is correct\"\n9dd1168fe115 [docs] Speculative link syntax fix\nf1f62ed0c834 [ADT] Add llvm::rotl and llvm::rotr to bit.h\n31c42f8f3588 [libc++][doc] Updates format status page.\n756395f61b90 [clang] fix DR status in cxx_status.html\ndf5beebc98bb [Driver] Add --vfsoverlay flag\n176ee268f8df [flang] Allow for user-defined intrinsic operators (regression)\n39eb1c6145eb [CSSPGO][Preinliner] Set default value of sample-profile-inline-limit-max to 50000.\nb6259eca16f6 [Clang] Export CanPassInRegisters as a type trait\n0c412fed360f [RISCV][docs] Describe status of zicsr and zifencei\nd4021ed3d79d [Tooling/Inclusion] Add symbol mappings for `std::experimental::filesystem`\n6e10e6cb8fab Reland \"[lldb][DWARFASTParserClang] Correctly resolve imported namespaces during expression evaluation\"\n1232b9d47209 [RISCV] Fix -Wbraced-scalar-init warning. NFC\n171ffd499e16 [ORC] StaticLibraryDefinitionGenerator -- support in-memory universal binaries.\n201b2b5674e1 [libc++] Reorganize exception_guard\n1c9e6238fe2f [AMDGPU] Allow architected SGPRs for workgroup IDs\nb35d0a6834f8 [AMDGPU] Add switch to enable architected SGPRs.\n1edb04bc70f3 [extract_symbols.py] Adjust usage of nm again\n4198ff0cb999 [AArch64] Add NZCV Def for TLSDESC_CALLSEQ\nd44b31eca27c [DAGCombine] Allow DAGCombine to remove dead masked stores.\n58d246a27b8c [mlir][spirv] Drop outdated TODO comment\nfc02eeb24fc0 [RISCV] Add vendor-defined XTheadBb (basic bit-manipulation) extension\nb8c2ba138ef6 [NFC] Fix using-declspec.cpp test with non-C++17 compilers\n00a5ae12448e [mlir][bufferization] Better propagation of bufferizesToMemoryWrite through regions\n95526930da6c [flang] Fix new assertion failure\nbbff77a14ef2 Revert \"[libc++] Remove _LIBCPP_CONSTEVAL\"\n04a2baf58f23 [RISCV] Add vendor-defined XTHeadBs (single-bit) extension\n676bca0b6f0d [libc][NFC] Fix typo in header guards\n5a5f3de6ee62 [RISCV] edit document of Zcb to match the Implementation\n2e47aafb02f3 [PowerPC] Fix float materialization patterns.\n6a6c527ee287 [X86][FP16] Combine two steps conversions into direct conversion\n388d679c1dfa Recommit [YAML IO] Check that mapping doesn't contain duplicating keys\nd904ee3d479a [flang] Handle correctly optional intrinsic scalar to unlimited polymorphic optional\n877859a09bda [clang] Handle __declspec() attributes in using\na01edb169bb0 [flang] Fix output type when emboxing intrinsic type to unlimited polymorphic box\ncc4fb5837647 [mlir] support complex type in DenseElementsAttr::get.\ne9eaee9da196 [AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\naf3c25dc3d87 [VPlan] Fix iterator invalidation in adjustFixedOrderRecurrences.\n580109025801 [libc++] Fix bug in allocate_shared_for_overwrite\n7eec2f2f218c [flang] Avoid infinite recursion in common block check\n87cc95a904e0 [libc++] Implement P2136R3 std::invoke_r\nafe9b0ba87b7 [Test][lldb] Fix YAML mapping keys duplication. NFC.\nd3b0fba6084d Revert rG0b0a38a7a229b70d7261771ba0e702843bd34e97 : \"[X86] combineX86ShufflesRecursively - don't widen shuffle subvector inputs\"\nb838b6287617 [mlir][MemRef][Transform] Don't apply multibuffer on \"useless\" allocs\n5d3c58829d28 [gn] port c4f7cc867299 (CoroTests)\n9f650ae779b4 [Libomptarget] Remove dependency on the DeviceRTL from the GPU plugins\n3c160d3051dc [lldb][Test][NFC] TestExternalCtorDtorLookup: add more instantiations to test linkage name is correct\n9e3010ad992d [AArch64] Fix LSE2/LSE128/RCPC3 precedence\ne698c5950430 [libc++] Granularize <type_traits> includes in <algorithm>\ne3515ba3816b Reapply \"[AMDGPU] Modify adjustInliningThreshold to also consider the cost of passing function arguments through the stack\"\n8b28500f60b7 [mlir][MemRef][TransformOps] Fix error reporting for multibuffer\n4c273cd07115 [DWARFLinker] Refactor cloneAddressAttribute().\n30f515a9101d [libc] Fix LIBC_LOOP_NOUNROLL being a noop\nc4f7cc867299 [Coroutines] Modify CoroFrame materializable into a callback\n3e51af9b5b3a [Coroutines] Improve rematerialization stage\n35106ad1009f [Coroutines] Presubmit test for more coro remats\n8f104a3f9ae2 [ARM] O3-pipeline fix\n5922b886350c [flang] RFC: -fstack-arrays\n2feafd059e9f [flang][hlfir] lower hlfir.sum into fir runtime call\n9facbb694250 [flang] lower sum intrinsic to hlfir.sum operation\n3ad26060e4bc [flang] add hlfir.sum operation\n7c4e45ec7d6d [mlir][SCFToOpenMP] Add pass option to emit LLVM opaque pointers\n4a2d4588a041 [mlir][Vector] add pass option to `convert-vector-to-llvm` to emit opaque pointers\nd5ea1b22cba3 [flang] use mlir::LoopLikeOpInterface::blockIsInLoop\ne6ec76c647aa [LLDB] Apply FixCodeAddress to all forms of address arguments\na9329a96ada3 Adjust #pragma warning so GCC is not unhappy\n5a028cc8ffa5 [mlir][LinAlgTransformOps][NFC] Use emitSilenceableError\n2a58be423963 [HardwareLoops] NewPM support.\nc5e1000b2915 Add build for Windows on Arm in packaging script\nfdd18e866b05 [llvm][TableGen][Jupyter] Show llvm-tblgen not found error in notebook\n24ecd9984235 [NFC] Set C++20 Named Modules for CodeGen in ASTContext in the early place\n19659b5f0dd1 [clangd] Drop includes from disabled PP regions in preamble patch\nfae01d175a29 [clangd] Fix bugs in main-file include patching for stale preambles\nf79a5fb9df42 [Test][SCEV] Add a test where the trip count can't be calculated\n7f249e45eca4 [milr][llvm] Add remaining loop metadata support\nfff762d674c3 Revert \"[CMake] Remove custom ccache CMake logic\"\n240c6f264399 [mlir][llvm] Improve LoadOp and StoreOp import.\n0fad18c44a14 [CMake] Remove custom ccache CMake logic\nae55f1cf9c10 [gn build] Port b7b28c6cfe04\nb7b28c6cfe04 [clang-tidy][libc] Add an inline function checker for the libc project.\n2bc095037eb6 [AMDGPU] Use llvm::bit_cast (NFC)\n92716a42a6aa [llvm-debuginfo-analyzer] LLVM 16.0.0-rc1 Failing test on osx-64.\nb49b429fde3a [llvm] Deprecate PowerOf2Floor and ByteSwap_{16,32,64}\n9c401687eb46 [x86] Move combineAddOrSubToADCOrSBB within the source file (NFC)\ne0e329609858 [X86] Precommit tests for D143838\n64287d69827c Recommit [C++20] [Modules] [ClangScanDeps] Enable to print make-style dependency file within P1689 format (4/4)\n212d905643bd Recommit [C++20] [Modules] [ClangScanDeps] Allow clang-scan-deps to without specified compilation database in P1689 (3/4)\neb70b38f838f Recommit [C++20] [Modules] [ClangScanDeps] Add ClangScanDeps support for C++20 Named Modules in P1689 format (2/4)\n2e4499e749c0 [flang] Handle forward references to modules\nff5c00d4ffc8 [X86][FP16] Add tests to show suboptimal codegen, NFC\n9f8ee610beb1 [flang] Warn on overflow folding DIM()\naa128bb21ee3 [flang] Catch misuse of a procedure designator as an output item\n57751e60e34e [gn build] Port 2a06757a200c\n2a06757a200c [libc++][spaceship] Implement `lexicographical_compare_three_way`\n2e6430666caf [LV] Update recipe builder functions to pass VPlan directly (NFC).\naf03616f46a1 [Flang][OpenMP][NFC] Remove usage of else after return\n15cb5ebed7a4 [Support] Use llvm::popcount (NFC)\nbe2fc577c389 [ORC] Add MachOPlatform::Create overload -- Pass ORC runtime as def generator.\naca9016bcde0 [flang] Fix crash on SELECT RANK\nec116ea684b4 [llvm] Deprecate llvm::count{Leading,Trailing}{Zeros,Ones} and llvm::countPopulation\nbb00fb66ba11 [libc++][NFC] Fix formatting in ranges status page\n594700c12247 [flang] Warn about construct names that are not distinct in the inclusive scope\n129eb5bcab91 [lldb] Add the ability to provide a message to a progress event update\n19c1682b6a4c [X86] combineConcatVectorOps - concatenate 512-bit VPERMILPS nodes.\n6eb66890e473 [X86] Add some basic matrix multiplication test coverage\n10d8b3054a72 [Flang][OpenMP][NFC] Correct a few instances of variable naming\n9f2014269ad8 [AArch64] Regenerate and extend zip1 tests. NFC\nfaf5616e110c BlockFrequencyInfoImpl.cpp - add missing closing namespace comment. NFC\nd38fcb421657 BlockFrequencyInfoImpl.h - use auto* for pointer types. NFC.\n51007cfa456f BlockFrequency.h - add missing closing namespace comment. NFC\nfe655717bff1 [flang] Support polymorphic inputs for the TRANSPOSE intrinsic\n1bb95a3a99cb [X86] combinePredicateReduction - attempt to fold subvector all_of(icmp_eq()) / any_of(icmp_ne()) to integers\n8bb98b571547 [Clang] Add the list of approved (Issaquah) C++ papers to the status page\n738370ae0e7f DemandedBits.cpp - use auto* when initializing from cast<>. NFC.\n41328d7c0e6e RegisterPressure.h - consistently initialize all pointer fields. NFC.\n1300a4fdae35 Revert rG23cb32c6d5bda0919cc1ef129917ceb2dbf1b1b8 \"[X86] combineX86ShufflesRecursively - treat ISD::TRUNCATE as faux shuffle\"\n7717e1114ad3 Revert \"[AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\"\nf48f17871792 [InstCombine] canonicalize cmp+select as smin/smax\n14411adc3dce [InstCombine] add tests for disguised smin/smax; NFC\nc697119dafce [bazel][libc] Add a few more missing dependency that show up when parsing headers\nbb5f79158b71 llvm-tblgen: Apply IWYU in some files\n2d570bab4f99 CodeGenTarget.cpp: Reformat.\n0e18b5feaaba LLVMFuzzerCLI: [CMake] Prune the last PARTIAL_SOURCES_INTENDED to cover all sources.\n36adb82c251d LLVMProcessSources.cmake: Improve PARTIAL_SOURCES_INTENDED.\n19128792e2aa Reland \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\nfebe740b2c8f [test] Remove occurences of br undef in Transform/Util tests [NFC]\n069dd8768a6a Revert \"[C++20] [Modules] [ClangScanDeps] Add ClangScanDeps support for C++20 Named Modules in P1689 format (2/4)\"\nf8b5003cb3f9 Revert \"[C++20] [Modules] [ClangScanDeps] Allow clang-scan-deps to without specified compilation database in P1689 (3/4)\"\n502e357dc77c Revert \"[ClangScanDeps] Add UNSUPPORTED: system-windows to test P1689.cppm\"\n08f31b8fa85c [docs] Make consistent between MLIR tutorial doc and example code\nc9a7b92a23bb [AArch64] Consider tiny code model in emitLoadFromConstantPool.\n6a75aec09098 [Clang][perf-training] Remove trailing whitespace in perf-helper\ndf3b703a4c17 [AArch64] Use llvm::countr_{zero,one} (NFC)\n6d90c590b7f5 [JITLink] Don't initialize local ArrayRefs with initializer lists.\nc8ad1de4f068 [RISCV] Remove dead code from RISCVDAGToDAGISel::selectVSETVLI. NFC\n4afb1ee7bc0e Specify target triple for bb-prefix-dump.ll\n86cbf3d5f8a2 [JITLink] Add explicit conversion to silence warnings / errors on bots.\n01d68b13f52d [libcxx][ranges] mark new join view tests unsupported without experimental flag\n7e772e12d10e [RISCV] Fix mistake in comment. NFC\n10b5fec25638 [JITLink][ORC] Add LinkGraph::allocateCString method.\na38a4654ce4b [libc++] fix `shared_ptr`'s incorrect constraints\n23cb32c6d5bd [X86] combineX86ShufflesRecursively - treat ISD::TRUNCATE as faux shuffle\nd05f889535ab [libc++] Enable radability-identifier-naming for local variables and fix any problems\ncc236b64d11d [gn build] Port 3d4e9d5eb0f7\n9eccc6cce07b [JITLink] Add a predicate to test for C-string blocks.\n3d4e9d5eb0f7 [ORC] Move ORC-specific object format details into OrcShared.\nf00d101b8e32 llvm/utils/TableGen/CodeGenIntrinsics.h: Fix a comment line (since 2006!)\nda876a157d79 [libc++][NFC] Reorganize the std::pair constructor tests to be more consistently named\n2e08e431cc18 LLVMTableGenGlobalISel: Provide `INTERFACE_INCLUDE_DIRECTORIES`\n4537bda929bd [libc++][NFC] Change some std::pair tests from .compile.fail.cpp to .verify.cpp\naaef3b82f4f0 [libc++] Remove _LIBCPP_CONSTEVAL\ne3eb61a8cd61 [libc++][NFC] Fix leftover #endif comments\nb48880f39f96 [libc++][NFC] Use using instead of typedef in pair.h\nab17e1b76cf7 [libc++][NFC] Always define __non_trivially_copyable_base in pair.h\na98936d5a698 [libc++][NFC] Use std:: instead of _VSTD:: in pair.h\n9994340a49ba [libc++][NFC] Use >= 23 instead of > 20 in pair.h\n1d6117c8c4d2 [libc++][NFC] Use std:: instead of _VSTD:: in construct_at.h\nf543614ce641 [libc] Update dependency for __support_fputil_nearest_integer in bazel overlay.\n4c2ad195f8c9 [libc++][ranges] move all range iterators back in class\n3b059cd25b8c [libcxx][ranges] revert join_view::iterator and sentinel to be in-class\nc586b81347cb [X86][Win64] Precommit test for D143812\na55b35dbee6d [X86] combineVectorInsert - pull out Vec/Scl/Idx operands. NFC.\n0b0a38a7a229 [X86] combineX86ShufflesRecursively - don't widen shuffle subvector inputs\n5dc34eb379f4 Reland \"[mlir][func] Use the generated pass options in func to llvm.\"\n5ba396011377 [MLGO] Disable BB Profile Dump Test on NVPTX\n09e0f48c0a40 [MLGO] Enable BB Profile Dump Test without TFLite\n39da46826da8 Revert \"[mlir][func] Use the generated pass options in func to llvm.\"\n771d9c05afc2 [mlir][func] Use the generated pass options in func to llvm.\n19c42f672f94 [DFAPacketizer] Move DefaultVLIWScheduler class declaration to header file\n5fc73b7502fb [clang] Add test for CWG1111\n22fb66eb94b6 [clang][NFC] Add another example to CWG952 test\n89ba737bcf34 [clang] Mark CWG2165 as N/A\n5eaaf8f18093 Revert \"[clang] Mark CWG2165 as N/A\"\nd0e24f0c97ec [clang] Mark CWG2165 as N/A\n4663d784ddee [libc] Update macros/optimization.h build dependency for CMake and Bazel.\na630b8eefb41 [libc][Obvious] Fix static method declarations for FEnv class on macOS.\ne9e43e31d3bd [libc] Fix the regex detecting architecture triplet for macOS.\nd8e9a1a12557 [CMake] Use `LLVM_ENABLE_ASSERTIONS` to enable assertions in `libc++`\n29fa21eb6129 [lldb] Fix passing None as an env variable in TestMultipleDebuggers\n294ca122956f Adapt TestCustomShell and TestMultipleDebuggers to run under ASAN\n0ac8dfd0587a [lldb] Add an SB API to get progress events as SBStructuredData\ndc6427d687c4 [mlir][sparse] implement lowering rules for sparse_tensor::unpack\n6dbca86d838c [mlir][sparse] introduce sparse_tensor::unpack operation\ne74bb3471fc4 [libc++] Remove unused std::function test\ne7ade78a8ceb [dfsan] Fix some build-libc-list.py lint issues\n9db037d542d9 [mlir][sparse] fixed pack op documentation and purity\ndac423bd5718 [SanitizerBinaryMetadata] Fix ignorelist test with -Assert\ne8a79dc3d8eb [flang] Do not print backtrace for most TODOs.\nd2cc2c5610ff Revert \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\nc46e15e1dec9 Revert \"[lldb][Test] TestExternalCtorDtorLookup.py: skip on Windows and dwo\"\n2979070f1b3a [libc++] Simplify non_default_alloc\n043550e33509 [Driver] Stop stack use after free\n9e57a5739d8b [bazel] Fix {clang,llvm}/unittests\n0751fc68b976 [libunwind] On Darwin, add a callback-based lookup scheme for JIT'd unwind info.\n89197b59f597 [openmp] Fix building z_Linux_asm.S for armv5t\n3de0bc4c3d02 [MLIR] Reintroduce shared attribute names in the LLVM dialect\ndb89896bbbd2 [InstCombine] Add tests for D143766. NFC\n811d11b064f7 [AMDGPU] Add GFX11 HW_REG_PERF_SNAPSHOT_*\na2dcd994a7f8 [mlir][tosa] Add TOSA f64 type support for cast op\ncd4ca2d7f991 [mlir] Port Conversion Passes to LLVM to use TableGen generated constructors and options\n3e57aa304f15 [llvm-driver] Reinvoke clang as described by llvm driver extra args\n1f173a0653e7 [llvm-driver] Pass extra arguments to tools\n34653a0a8a40 [Propeller] Change SHT_LLVM_BB_ADDR_MAP version to 2.\n8e13ec9eca1f [libc++] In tests, use `abort` to terminate upon an error.\n7ca3444fba73 AMDGPU: Use module flag to get code object version at IR level folow-up\n70acb3aab3a1 A slightly more concise AST dump :)\n83e84cdbe4bc [InstCombine] precommit tests for D143593\n81d0d2b2a068 [mlir][sparse] Sparse reduction in lex order no longer produces dense output\nae2d8b49713d [libc][math] Update exceptional cases for logf, log10f, log2f, log1pf.\n35188e02d1f2 [dfsan] Fix build-libc-list.py for Python 3 after D143701\na543d840ee0a Fix handling of -> calls for modernize-use-emplace\nf889d6f9d05b [lldb][Test] TestExternalCtorDtorLookup.py: skip on Windows and dwo\nc8b8d6baddf9 [Passes] Remove some legacy passes\n3a66446a9a0d [libc] add standalone strtoint/float fuzzers\n79a3803bb2cc [ClangScanDeps] Add UNSUPPORTED: system-windows to test P1689.cppm\ne7e577f68421 [clang-tidy] Clarify documention of `bugprone-unchecked-optional-access`.\n295f5fafcb55 [Assignment Tracking] Fix migrateDebuginfo in SROA\nc52255d26a23 [AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\nd37a31cf237c [X86] Attempt to fix ubsan failure.\n185dbf9d6f00 [bazel] Port 81a79ee446\n1763c632544d [Attributor][NFCI] Use a set to track dependences\n86cce90e21c5 [Attributor][NFCI] Avoid AAIntraFnReachability updates if possible\na9557aacd1a9 [Attributor][NFCI] Use queries without exclusion set whenever possible\n294db31be748 [Attributor][FIX] Ensure we use the right set comparison\n76a19190269b [Attributor][NFC] Avoid unnecessary string operations\nbf9964fb138f [Attributor][NFCI] Create a AAIsDead for the function eagerly\n8bc0bee2f8ca [Attributor][NFCI] Avoid a temporary vector and exit early\n91e38bc76010 [libc++][NFC] Reorganize hash.h\nb296ddd91cb8 [lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\nb8ef007fca1d Reland \"[llvm][dsymutil] Add DW_TAG_imported_declaration to accelerator table\"\n9497680067cc [ConstraintElim] Update getLastConstraint to return to last row. (NFC)\nff8742df9e65 [flang] Fixed selective TargetRewrite.\n81767f52f493 [mlir][OpenMP] Add support for using Opaque Pointers in the OpenMP Dialect\n2ca46421f85a [mlir][Async] Add option to LLVM lowering to use opaque pointers\n7da2d644e039 [clang] [extract-api] Don't crash for category in libclang APIs\n57606bb35619 [ConstraintElim] Improve debug test to show removed constraints (NFC).\n81a79ee446fe [mlir] Add function for checking if a block is inside a loop\naf39acda8873 [VectorCombine] fix insertion point of shuffles\n78f13ea093af [extract_symbols.py] Adjust how the output of nm is interpreted\na00f17d81efb [clang][dataflow] Convert nonnull pointer parameter to a reference.\nb87e53ee2ad1 Revert \"[mlgo] Fix test after D143624\"\n737e1cd161f3 [libc] Move likely/unlikely to the optimization header\n78056e2f2d95 [InstCombine] propagate FMF in exp2->ldexp fold\n3abea2b5447c [InstCombine] copy tail markings in exp2->ldexp fold\ne89180801cd2 [InstCombine] add 'tail' to exp2 call in test; NFC\n86bfeb906e3a Revert \"Inlining: Run the legacy AlwaysInliner before the regular inliner.\"\nc4a250ecea14 [AMDGPU][MC] Generate relative relocations for allocatable (more particularly, eh_frame) sections\nf1837c707478 [DebugInfo] Handle missed DW_FORM_addrx3 and DW_FORM_strx3 cases\n04f4c4cc59db [clangd] Move function body to out-of-line: unnamed class method incorrect moving\nfef08da4b75f [mlir][llvm] Store memory op metadata using op attributes.\n067a5c68845c [amdgpu-arch] Fix build of amdgpu-arch with CLANG_LINK_CLANG_DYLIB\nb252824e6e6e [clangd] fix wrong CalleeArgInfo in the hover\n08061a5f1db6 [gn build] Port 6470706bc0ed\na3060f0f37e3 [X86] combineConcatVectorOps - concatenate AVX512 vselect nodes. NFC.\n4a96893fc5ca [libc] Fix exp2f and prevent misuse of likely/unlikely\n065a8cf00812 [gn] port 6470706bc0e\n25d0f3c4d0d9 [Assignment Tracking] Fix fragment index error in getDerefOffsetInBytes\n4d7c879d33a2 [mlir][llvm] Adapt loop metadata to match llvm\n8470430107d0 [NFC][compiler-rt] Shorten comment\n1e658ad1728e [Workflow] Add Release Repo sync script\n8ccde9368f94 [CMake][compiler-rt] Support clang-cl in CompilerRTMockLLVMCMakeConfig\nb3477f579c86 [RISCV] Add tests for .attribute stack_align\n9dcd7195a21c [InstCombine] avoid crashing in pow->ldexp\n5cec69bb43bc [clang] Update Clang version from 16 to 17 in scan-build.1.\n62a0a1b9eea7 [InstCombine] avoid crashing in exp2->ldexp\nc2b7085d5c86 [InstCombine] add test for exp2->ldexp; NFC\n55c0719557a9 [InstCombine] auto-generate check lines in test file; NFC\nc4ce967e3437 ARM: skip debug instructions when matching jump-table patterns.\ndc700f1e4daf [mlir][bufferization] Restrict function boundary buffer. to func.call.\n1842b5885baa [bazel] Fix build and make all target respect layering_check\nd624b9217d35 [RISCV] Add precommit tests for D143646\nf0f8ae7596c4 [AMDGPU][AsmParser] Fix matching immediate literals.\n68adc028b42d [InstCombine][NFC] regenerate tests for simple_phi_condition.ll\nce2514a6dea7 [Test] Add complementary tests for OR analogous for those for AND\n393675dad0c0 [Test] Add test showing an opportunity to transform checks and hoist invariants\nbb8bd8c232e8 [SanitizerBinaryMetadata] Fix ignorelist test under Windows\nbaca3c150733 Move SIMD alignment calculation to LLVM Frontend\nc77c186a647b [LVI] Don't traverse uses when calculating range at use\n0737770c3e1d [LVI][CVP] Add test for miscompilation by CVP due to incorrect range returned by LVI\nd768bf994f50 [NFC][TargetParser] Replace uses of llvm/Support/Host.h\n4ad8f7a18957 [Assignment Tracking][mem2reg] Remove overly defensive assert\nbb059e85d61b [Assignment Tracking][SROA] Delete dbg.assigns linked to rewritten stores\n65f9719913ec Revert \"[C++20] [Modules] [ClangScanDeps] Enable to print make-style dependency file within P1689 format (4/4)\"\na674a12dd57e [WebAssembly] Additional patterns for pmin/pax\n9ec06f40d66e [flang][NFC] Clean up polymorphic-temp.f90\n421215b919d0 [SanitizerBinaryMetadata] Support ignore list\nc340956e4efc [NFC][Assignment Tracking] Remove lifetime intrinsics from some tests\nfaf029d9728f [Test][SCEV] Add tests where multiple assumes can be used to improve trip multiple\n09c52a49402c [bazel] Add missing dependency after 687f78210d0\n57edc61093d9 [NFC] convert compiler-rt/lib/dfsan/scripts/build-libc-list.py to python3 syntax\nb67b26acc2ab [libc][Obvious] Include MPFRWrapper and testutils only if tests are enabled.\n6eb13809fb6f [bazel] fix build for 6470706bc0ed\n14dedd9cf596 [Reland][LSR] Hoist IVInc to loop header if its all uses are in the loop header\nd9283e79d826 [libc] Run libc tests unconditionally, even if there are no source changes.\n2441c0730603 [mlir][bufferization] Support multiple leaves in EmptyTensorElimination\nf4ef08433fe7 [OPENMP][NFC] added loop bind to the support page\n79d2c26f89e1 [SimplifyIndVar][NFC] Refactor Binary Operator's flag strengthening\n288f688e294a [NFC] Add test to show that preprocess an import decl won't require to load it actually\n687f78210d07 [MLIR] Fold away divs and mods in affine ops with operand info\ndd380f9243de [NFC] Remove the unused parameter introduced in e135476\n92e904b9ce2d [flang][hlfir] Ramp-up support of implicit interface mismatches\nfc2c791e89cd [mlir][llvm] Fix TBAA verfication crash\n70924673af68 [RFC][GISel] Add a way to ignore COPY instructions in InstructionSelector\nd9a6fc82f56f [AMDGPU] Run unmerge …",
        "tree": {
          "url": "https://api.github.com/repos/Lewuathe/mlir-hello/git/trees/6673480f178c18dcc743b1f61183a8eead4724a8",
          "sha": "6673480f178c18dcc743b1f61183a8eead4724a8"
        },
        "comment_count": 0
      },
      "author": {
        "login": "Lewuathe",
        "id": 1713047,
        "node_id": "MDQ6VXNlcjE3MTMwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1713047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lewuathe",
        "html_url": "https://github.com/Lewuathe",
        "followers_url": "https://api.github.com/users/Lewuathe/followers",
        "following_url": "https://api.github.com/users/Lewuathe/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lewuathe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lewuathe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lewuathe/subscriptions",
        "organizations_url": "https://api.github.com/users/Lewuathe/orgs",
        "repos_url": "https://api.github.com/users/Lewuathe/repos",
        "events_url": "https://api.github.com/users/Lewuathe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lewuathe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "Lewuathe",
        "id": 1713047,
        "node_id": "MDQ6VXNlcjE3MTMwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1713047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lewuathe",
        "html_url": "https://github.com/Lewuathe",
        "followers_url": "https://api.github.com/users/Lewuathe/followers",
        "following_url": "https://api.github.com/users/Lewuathe/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lewuathe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lewuathe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lewuathe/subscriptions",
        "organizations_url": "https://api.github.com/users/Lewuathe/orgs",
        "repos_url": "https://api.github.com/users/Lewuathe/repos",
        "events_url": "https://api.github.com/users/Lewuathe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lewuathe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/Lewuathe/mlir-hello/commits/59575d47b7b987c0f248b164547278a82ed0b456",
          "html_url": "https://github.com/Lewuathe/mlir-hello/commit/59575d47b7b987c0f248b164547278a82ed0b456",
          "sha": "59575d47b7b987c0f248b164547278a82ed0b456"
        }
      ],
      "repository": {
        "id": 317750590,
        "node_id": "MDEwOlJlcG9zaXRvcnkzMTc3NTA1OTA=",
        "name": "mlir-hello",
        "full_name": "Lewuathe/mlir-hello",
        "private": false,
        "owner": {
          "login": "Lewuathe",
          "id": 1713047,
          "node_id": "MDQ6VXNlcjE3MTMwNDc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1713047?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Lewuathe",
          "html_url": "https://github.com/Lewuathe",
          "followers_url": "https://api.github.com/users/Lewuathe/followers",
          "following_url": "https://api.github.com/users/Lewuathe/following{/other_user}",
          "gists_url": "https://api.github.com/users/Lewuathe/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Lewuathe/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Lewuathe/subscriptions",
          "organizations_url": "https://api.github.com/users/Lewuathe/orgs",
          "repos_url": "https://api.github.com/users/Lewuathe/repos",
          "events_url": "https://api.github.com/users/Lewuathe/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Lewuathe/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/Lewuathe/mlir-hello",
        "description": "MLIR Sample dialect",
        "fork": false,
        "url": "https://api.github.com/repos/Lewuathe/mlir-hello",
        "forks_url": "https://api.github.com/repos/Lewuathe/mlir-hello/forks",
        "keys_url": "https://api.github.com/repos/Lewuathe/mlir-hello/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/Lewuathe/mlir-hello/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/Lewuathe/mlir-hello/teams",
        "hooks_url": "https://api.github.com/repos/Lewuathe/mlir-hello/hooks",
        "issue_events_url": "https://api.github.com/repos/Lewuathe/mlir-hello/issues/events{/number}",
        "events_url": "https://api.github.com/repos/Lewuathe/mlir-hello/events",
        "assignees_url": "https://api.github.com/repos/Lewuathe/mlir-hello/assignees{/user}",
        "branches_url": "https://api.github.com/repos/Lewuathe/mlir-hello/branches{/branch}",
        "tags_url": "https://api.github.com/repos/Lewuathe/mlir-hello/tags",
        "blobs_url": "https://api.github.com/repos/Lewuathe/mlir-hello/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/Lewuathe/mlir-hello/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/Lewuathe/mlir-hello/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/Lewuathe/mlir-hello/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/Lewuathe/mlir-hello/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/Lewuathe/mlir-hello/languages",
        "stargazers_url": "https://api.github.com/repos/Lewuathe/mlir-hello/stargazers",
        "contributors_url": "https://api.github.com/repos/Lewuathe/mlir-hello/contributors",
        "subscribers_url": "https://api.github.com/repos/Lewuathe/mlir-hello/subscribers",
        "subscription_url": "https://api.github.com/repos/Lewuathe/mlir-hello/subscription",
        "commits_url": "https://api.github.com/repos/Lewuathe/mlir-hello/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/Lewuathe/mlir-hello/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/Lewuathe/mlir-hello/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/Lewuathe/mlir-hello/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/Lewuathe/mlir-hello/contents/{+path}",
        "compare_url": "https://api.github.com/repos/Lewuathe/mlir-hello/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/Lewuathe/mlir-hello/merges",
        "archive_url": "https://api.github.com/repos/Lewuathe/mlir-hello/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/Lewuathe/mlir-hello/downloads",
        "issues_url": "https://api.github.com/repos/Lewuathe/mlir-hello/issues{/number}",
        "pulls_url": "https://api.github.com/repos/Lewuathe/mlir-hello/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/Lewuathe/mlir-hello/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/Lewuathe/mlir-hello/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/Lewuathe/mlir-hello/labels{/name}",
        "releases_url": "https://api.github.com/repos/Lewuathe/mlir-hello/releases{/id}",
        "deployments_url": "https://api.github.com/repos/Lewuathe/mlir-hello/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/mocusez/mlir-learn/commits/5f63028555f11989b78d61371cb851f56e9779f3",
      "sha": "5f63028555f11989b78d61371cb851f56e9779f3",
      "node_id": "MDY6Q29tbWl0OTExNDQyMDU2OjVmNjMwMjg1NTVmMTE5ODliNzhkNjEzNzFjYjg1MWY1NmU5Nzc5ZjM=",
      "html_url": "https://github.com/mocusez/mlir-learn/commit/5f63028555f11989b78d61371cb851f56e9779f3",
      "comments_url": "https://api.github.com/repos/mocusez/mlir-learn/commits/5f63028555f11989b78d61371cb851f56e9779f3/comments",
      "commit": {
        "url": "https://api.github.com/repos/mocusez/mlir-learn/git/commits/5f63028555f11989b78d61371cb851f56e9779f3",
        "author": {
          "date": "2023-02-18T10:57:51.000+09:00",
          "name": "Kai Sasaki",
          "email": "lewuathe@gmail.com"
        },
        "committer": {
          "date": "2023-02-18T10:57:51.000+09:00",
          "name": "Kai Sasaki",
          "email": "lewuathe@gmail.com"
        },
        "message": "Squashed 'thirdparty/llvm-project/' changes from 23c1822d1a74..63c77bf71d80\n\n63c77bf71d80 [lldb] Make persisting result variables configurable\n920b46e108b2 [lldb] Add expression command options in dwim-print\ne49b93ef29a6 [gn build] Port 07e3ca238e68\n07e3ca238e68 Revert \"[TextAPI] Implement TBDv5 Reader\"\n4be17641b05d [TextAPI] wrap returned Errors in std::move\n347954314c97 [gn build] Port b861b1225380\nb861b1225380 [TextAPI] Implement TBDv5 Reader\nb309bc04eebc [GlobalISel] Combine out-of-range shifts to undef.\nd6d59e660bc7 [Clang] Fix __VA_OPT__ implementation so that it treats the concatenation of a non-placemaker token and placemaker token as a non-placemaker token\n34aff47521c3 [RISCV] Use MCSubtargetInfo::hasFeature where possible. NFC\nd9e4c1044072 [AArch64] Simplify with MCSubtargetInfo::hasFeature. NFC\nc0f3ac1d0015 Revert \"[Fuchsia] Enable llvm-driver build\"\nb1e09b5fa679 [libc++][NFC] Remove TODOs that are already done\n8007bcc13f8f [llvm-cov] Create syntax to pass source w/o binary.\n4eadd19cc423 [Fuchsia] Enable llvm-driver build\nef3a3b0726f4 [libc++][NFC] Replace _VSTD and _LIBCPP_INLINE_VISIBILITY in <__atomic/*>\n10b7cd660c73 [RISCV] Select signed and unsigned bitfield extracts for XTHeadBb\n2f88c07cf820 [lldb] StructuredData should not truncate uint64_t values\n8caa8d95afe4 [libc++][format] Addresses LWG3810.\n01afb3fb9902 [NVPTX] Use by default 'sm_60' architecture when expanding %ptxas-verify macro.\nf50cad2c55df [libc++] Mark a test relying on `typeid` as unsupported without RTTI.\nf6b724f1f9c8 [libc] Add basic fuzz target for the printf parser\n47fb6d1c65ec [libc] add mock arg list\n5fa9933c13e7 [mlir][tensor] Do not use affine ops on non-perfect-tiling unpack cases.\n2b2b8409e684 [RISCV] For rv32, accept constants like 0xfffff800 as a valid simm12.\nefe7c4b77bed Revert \"[RISCV] Add performMULcombine to perform strength-reduction\"\n16a66af0a0fe Revert \"[RISCV] Add vendor-defined XTheadMemPair (two-GPR Memory Operations) extension\"\n6774ba841145 [RISCV] xtheadmac: fix commutativity issue for the in/out register\n20cc23c708f0 [RISCV] Add performMULcombine to perform strength-reduction\nd2918544a7fc [RISCV] Add vendor-defined XTheadMemPair (two-GPR Memory Operations) extension\n21a543656cf4 [libc++] Add missing include in <__atomic/cxx_atomic_impl.h>\ndf56b55e1288 [RISCV][CodeGen] Add codegen patterns for experimental zfa extension (try 2)\n04d59f2ab3a8 [IR] Fix a warning\nf25cfd339a80 [mlir] Reintroduce API for creating operations with a DictionaryAttr\nbe83a4b257c8 [ADT] Fix tests for `StringMap::at` and `DenseMap::at`\n42944abf8583 [RISCV] Improve isInterleaveShuffle to handle interleaving the high half and low half of the same source.\nbc6e10c9efca [ELF][llvm-objcopy] Reject duplicate SHT_SYMTAB sections\n998ad085e865 Reland [gn build] Support linux/win compiler-rt cross compilation\n7a035de2d6c4 Revert \"[gn build] Support linux/win compiler-rt cross compilation\"\n2d85683f987a [lib++][format] Uses the new exception test macros.\nc0947dc44109 [RISCV][MC] Add support for experimental zfa extension (FLI instruction not included) (try 3)\nd73eb92cc673 [gn build] Support linux/win compiler-rt cross compilation\ncf86855c4453 [M68k] fix test regression introduced by D140180\n261d21f8c375 [libc++] Fixes a flaky test.\nc8399811e7b1 [gn build] Support building x86/64 Android libraries\n1ceb79e2e075 Port PlaceSafepoints pass to the new pass manager\n4180b29d206f [flang][runtime] Support DT edit descriptor in result of READ(SIZE=)\n7067aee367d4 [libc++][CI] Switches to clang-format-16.\nf7f86451ecd7 [libc++] Improve the format ignorelist generation.\n22b564c64b73 [RISCV] Add preferred function and loop alignment RISCVSubtarget. NFC\nb22aa3d74f27 [libc++][NFC] Rename _LIBCPP_NO_EXCEPTIONS to _LIBCPP_HAS_NO_EXCEPTIONS\n132003603ae3 [ADT] Add `at` method (assertive lookup) to DenseMap and StringMap\n2b51c8cd2ac6 [clang-tidy] Clarify bugprone-branch-clone diagnostic message\ndf82394e7a2d [libc][bazel] Export .bzl files for libc/test and libc/test/src/math.\n3476b56f0c78 [libc++][test] Adds more generic test macros.\n783cbf70abca [gn build] Port bf0f94a5cf82\nddeb55ab3359 [mlir] add option to multi-buffering\n4ecc6af813e2 [InstCombine] create a pass options container and add \"use-loop-info\" argument\ne03d254bbd54 [SLP]Do not reduce repeated values, use scalar red ops instead.\nbf0f94a5cf82 New SetOperations and unittesting for all SetOperations\n17a90f1196c1 Tighten up a modules test\n87a0479538fe [mlir][llvm] Fuse access_group & loop export (NFC)\ncf4df6168838 [SVE] Add intrinsics for floating-point operations that explicitly undefine the result for inactive lanes.\n83e9ef7e519a [mlir][standalone] Extend sample with custom type\naf6c0b6d8c9d [clang][CodeGen] Use base subobject type layout for potentially-overlapping fields\n4bf6cc63aa77 GH60642: Fix ICE when checking a lambda defined in a concept definition\n06621ecdaf41 [Clang] Convert some tests to opaque pointers (NFC)\nf098fb69f164 [Clang] Convert some tests to opaque pointers (NFC)\n4901245481b6 Fix Clang sphinx build\n6f3a756998b3 [RISCV][NFC] Add missing immediate operand types.\ne133cb9c6daf [mlir][llvm] Add DINamespace attribute\n276358fd3af5 [mlir][llvm] Make DI param optional to match LLVM\n76c638d1ddec [gn build] Port 46db8d822ecd\n46db8d822ecd [libc++] Granularize <atomic>\n62e4f81c6793 [AMDGPU] Simplify widenScalar condition for BigTy for G_(UN)MERGE_VALUES\nf3fa1086c7f8 [Clang] Convert some tests to opaque pointers (NFC)\nafcf70aa6de7 [analyzer] Remove unjustified assert from EquivalenceClass::simplify\n40a20ae6ab80 [libc++] Granularize <bit> includes\n2693efa8a5bc [MachineCombiner] Support local strategy for traces\ne6e0ba8d20b4 [Clang] Convert some tests to opaque pointers (NFC)\ncdf8f064694c [mlir] Add a folder for lbs, ubs, steps of scf.forall.\neb14186771e7 Revert \"[LLD] [COFF] Don't try to detect MSVC installations in mingw mode\"\nbf91cd6ea9d6 [mlir][llvm] Verify LLVM module before import\nda3623de2411 [JT] Always create BPI/BFI when running in legacy PM\n159073bc0a87 [clang-repl] Support compound statement as a top-level statement.\neb2f946e780c [mlir][scf] Rename ForeachThreadOp->ForallOp, PerformConcurrentlyOp->InParallelOp.\n65898e526060 [ConstantRange] Handle `Intrinsic::ctlz`\na1e80c69223a [Support] [Windows] Don't check file access time in equivalent(file_status, file_status)\n389bfbd66d6f [LLD] [COFF] Don't try to detect MSVC installations in mingw mode\n3d84f4268dd9 [Clang] Convert some tests to opaque pointers (NFC)\n6f4af64b7422 [mlir][llvm] Add atomic support to the LoadOp.\n55a18bfe9b65 [Clang] Convert some tests to opaque pointers (NFC)\n58dada5f0aad [AMDGPU] Add cross-project-tests for WMMA builtins\na048d7394be5 [MLIR][LLVM] Only disallow inlining for selected function attributes.\n57c81917d3a5 [Clang] Convert update_cc_test_checks tests to opaque pointers (NFC)\na96cbeb45062 [DAGCombiner] Teach MatchContextClass classes to use TargetLowering::isOperationLegalOrCustom().\n310deca248c8 [mlir] Add loop bounds to scf.foreach_thread.\n6d5ea6b12342 Revert \"[Coroutines] Stop supportting std::experimental::coroutine_traits\"\nc4e6e771f255 [Coroutines] Stop supportting std::experimental::coroutine_traits\nf2404a58b0b4 [NDF] Revert earlier nfc commit to test commit access\n511d55060454 [NFC] Testing new commit access by adding newline\ne0528382b570 [lldb] Add missing decorators import in TestPoPersistentResult.py\n5552c4ddd76d [lldb] Limit TestPoPersistentResult to darwin\n3328ee550c86 [lldb] Suppress persistent result when running po\nb3215c810617 [lldb] Rename SetResultIsInternal to SetSuppressPersistentResult (NFC)\n39811e2e537d [llvm][test] enable/disable -verify-machineinstrs where possible for callbr\nb05dc1b8766a [clang-format] Add a space between an overloaded operator and '>'\n7c9df7743521 [ADT] Provide C++20-style bit functions\n93de5f13b9dd [CodeGen] Fix warnings\n0eabb884abeb [mlir][gpu] NFC let user pick the threadID values when distributing foreach_thread\ne3a88a41af83 Revert \"[mlir][vector] Prevent duplicating operations during vector distribute\"\ncda4a0e918b5 [Sema] Relax a failing assertion in TransformBlockExpr\n25a461046ec2 OpenMP: Regenerate test checks\n77af16bcb78a Recommit \"Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\" (2nd Try)\n9e9444ca7d4b Recommit \"Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\" (2nd Try)\nffe982f96bff [lldb] Stop generating swig bindings for SBLaunchInfo copy constructor\n8045ba89488c [ThinLTO/WPD] Handle function alias in vtable correctly\n54186d33c3a0 [clang] add __has_extension(gnu_asm_goto_with_outputs_full)\naf6656338db3 [clang] fix -Wuninitialized for asm goto outputs on indirect edges.\n329ef60f3e21 [Clang] support for outputs along indirect edges of asm goto\nb1bc723dfe97 [Clang] refactor CodeGenFunction::EmitAsmStmt NFC\na3a84c9e2511 [llvm] add CallBrPrepare pass to pipelines\n5cc1016a57b3 [llvm][SelectionDAGBuilder] codegen callbr.landingpad intrinsic\n28d45c843cd0 [llvm][CallBrPrepare] use SSAUpdater to use intrinsic value\n094190c2f529 [llvm][CallBrPrepare] add llvm.callbr.landingpad intrinsic\n0a39af0eb72d [llvm][CallBrPrepare] split critical edges\nfb471158aa0d [llvm] boilerplate for new callbrprepare codegen IR pass\n45a291b5f609 [Dominators] check indirect branches of callbr\ndf277ec67efd [X86][MC] Fix the bug of -output-asm-variant=1 for intel syntax\n7495a2e51bff [Attributor][FIX] Ensure we adjust types properly\n58bedaed0fea [LLDB] Remove unused variable 'lang_rt' in ClangExpressionParser.cpp (NFC)\n2738dc0bd3b7 [ComplexLogicCombine] Precommit tests for complex logic combine init patch; NFC\n8116fc592c5e Revert \"[LLDB] Enable 64 bit debug/type offset\"\nf253bb640d97 [WebAssembly] Fix simd bit shift intrinsics codegen\ne073de833671 [WebAssembly] Update wasm.c with update_cc_test_checks.py. NFC\ne6758c81f867 [mlir][sparse] comment out test cases in sparse_conversion with similiar behavior.\n65277494f04d [flang][runtime] Allow record advancement in child I/O via '/' control edit descriptor\n52a774fd4c18 [PowerPC] remove XXSWAPD after load from CP which is a splat value\nfb7c38073e80 [AArch64][ISel] Always use pre-inc/post-inc addressing mode for auto-indexed load/store with constant offset.\n0af5f84a13be [mlir][sparse] split reshape.mlir into expand/collapse_shape.mlir.\n22cdeb54a123 [MLIR][OpenMP] Add Conversion for Atomic Update Op\nb374423304a8 [Pipeline] Move ControlHeightReduction to module optimization pipeline\n9e8d9316ceaf [mlir][sparse] allow foreach operation to generate out-of-order loop on non-annotated tensor.\n2062e90aa531 [LLDB] Enable 64 bit debug/type offset\nb66fdbad44b3 [gn build] Manually port D143983\n956c7dca29c7 [Object][NFC] Remove unneeded llvm_unreachable\n56e41fcf5028 [PowerPC] Bail out of FISel when lowering long calls\nc2e248c6aea6 [mlir][sparse] Remove the expansion of symmetric MTX in the sparse tensor storage.\n5172877bbddc [Libomptarget] Check errors when synchronizing the async queue\n48c8e1602048 Revert \"[Libomptarget] Check errors when synchronizing the async queue\"\n53862b5658dd RenderScript still exists as a clang language, so handle as invalid\nf83e6c6d7a8d [Bazel][mlir] Fix build errors\nf5cca3c5ce7a [flang] Handle expression in SELECT TYPE selector\nb8d3d02d7c8c Remove now unused enum.\n5f5cf6029852 [Pipeline] Remove -enable-npm-O3-nontrivial-unswitch flag\n4d16ebd6c971 [Pipeline] Remove -enable-no-rerun-simplification-pipeline flag\ndccd1d736c25 [libc][bazel] add string to float targets\n662548c82683 [lldb] Replace SB swig interfaces with API headers\n23d43e697757 [libc++] Add regression test for std::hash implementation in ABI v1\nc6c41c31f1e5 [mlir][linalg][tensor] Delete duplicate tests and fix typo in filename\n17e2497593d6 Remove Renderscript LLDB\n22e199e6afb1 [RISCV] Accept zicsr and zifencei command line options\n372820bf571c [libunwind][PowerPC] Fix saving/restoring VSX registers on LE systems\nfbe210dc7a6a [libc] Implement htonl and htons\n35742743d273 [Hexagon] Fix number of arguments in call to DAG.getNode for VINSERTW0\nf842b7a6b8f4 [HLSL] add log library functions\n891b0910b3c4 Revert \"[RISCV][MC] Add support for experimental zfa extension (FLI instruction not included)\"\n8a17cd9905c2 AMDGPU: Add a regression test case for D143963\n8e5a41e8271f Revert \"AMDGPU: Override getNegatedExpression constant handling\"\nbbef38352fba Revert \"[LowerTypeTests] Support generating Armv6-M jump tables.\"\n9305b63d6951 [AMDGPU] Add another G_UNMERGE_VALUES legalization test case\nd9a04d1d5453 [libc] Support running tests for Pigweed\n2ac85cd56381 [AMDGPU] Regenerate check lines to enable updating for D144050.\n0871337d97f7 [XCore] Adapt Clang tests to opaque pointers.\n7ed26ad10cef [flang] Always incorporate parent types' special generic bindings\n1538761303ce [LSR] Add test case which shows additional LSR with D144050.\n861709107b43 [Libomptarget] Check errors when synchronizing the async queue\nf6fa5a66d8a8 [RISCV][MC] Add support for experimental zfa extension (FLI instruction not included)\neb3dfa0a2487 [Clang] Convert some tests to opaque pointers (NFC)\n081815b4e32c [Clang] Regenerate check lines (NFC)\n2d6713b5b7a2 Revert \"[RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\"\n80334ca1e285 Revert \"Update: [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\"\n80abf86d506b Revert \"[RISCV][CodeGen] Add codegen pattern for experimental zfa extension (FLI and FCVTMOD not included)\"\n7abe3497e72a [LSR] Improve filtered uses in NarrowSearchSpaceByPickingWinnerRegs\na768112e0641 [Clang] Convert some tests to opaque pointers (NFC)\nf6ddf7781471 [LowerTypeTests] Support generating Armv6-M jump tables.\nafde3f549d7a llvm-tblgen: Apply IWYU partially\n3a6f3b44e434 [flang] lower hlfir.matmul into fir runtime call\n91cbc3f2d83d [flang] lower matmul intrinsic to hlfir.matmul operation\n09472ba31504 [flang] add hlfir.matmul operation\nec640382fc93 [mlir][MemRef] NFC - Add debug information to MultiBuffer.cpp\ne44f405bb41b [mlir][bufferization] Fix bug in findValueInReverseUseDefChain\n4565bc00de6e [DataLayout] Use separate vectors to store alignment (NFC)\nace6072bca65 [mlir] PromoteBuffersToStackPass - Copy attributes of original AllocOp\n28542e99bb82 [mlir][llvm] Use before def debug intrinsic import\n8421307b6b16 [Clang] Convert some tests to opaque pointers (NFC)\nb32b7068ef8e [ConstraintSystem] Use sparse representation for constraints. (NFC)\n66749ce92707 [ARM] Add Thumb LSR codegen tests. NFC\na9e4bb387b21 [flang][hlfir] Array constructor lowering [part 2/4]\nffde9f17300b [flang][hlfir] Array constructor lowering [part 1/4]\n849c4402261a [Flang][OpenMP] Added parser support for device_type clause\n5c988cba4a66 [flang] Use derivedType from toAddedum to get updated components\n96179dff46a9 [mlir][Linalg] Add a transform dialect op to rewrite ops to destination passing style.\nb58daf91d677 Add a lowering for memref.dealloc with unranked memrefs.\nba23bca0a83d [SME2][AArch64] Add multi-single multiply-add long long intrinsics\ne97fc5007e72 [flang] Add TODO instead of crashing on assert\n83014d877017 [libc++] LWG 3857: allow `string_view` conversion when only traits vary\n574e417460cd [clang] Fix a bug that allowed some overflowing octal escape sequences\n5bdd0beeee56 [MachineCombiner][NFC] Rename `MinInstr` to `TraceEnsemble`\na3d1de3e2908 [LV] Move invalid cost remark code to separate function (NFC).\n873ea45115a8 [mlir][llvm] Rename void debug type to null\nc76acb9dffec [UniformityAnalysis] Fix some file headers and pass names\n130d2953d878 [Flang][OpenMP] Fix a corner case where target region is empty\n4bc2357c3de2 [mlir][MemRef|Tensor] Fix the handling of DimOp\n7fbcc24409ef [llvm-debuginfo-analyzer] (08a/09) - Memory Management\n2002c82278f6 AArch64: count callee stack we use when estimating scavenging requirements.\n819dfc338bdd [AMDGPU] Autogenerate checks for several tests. NFCI\n0e1fb48bb95a [lld-macho] Use uint64_t instead of size_t to fix 32 bit test failures\neeb125659c17 [InstSimplify] Slightly optimize simplifyLoad() (NFC)\n37b7a60cd74b [NFC] Add a test for C++20 Modules\na1b78fb929fc [JT][CT] Preserve exisiting BPI/BFI during JumpThreading\nf8d5f0e53b04 [NFC] Add two tests for C++ modules\n4469ec1d196f [mlir][llvm] Import alias scope metadata from LLVM IR.\nc9fad20f6a66 [InstCombine] Call simplifyInsertValueInst()\n6bec2c30777f [InstCombine] Add additional aggregate reconstruction test (NFC)\n9ca2c309ab06 [InstSimplify] Fix poison safety in insertvalue fold\nb0de87268a60 [flang] Retrieve the correct scope when lowering SELECT TYPE\n86c8ea9ac922 [mlir] Add check for value that might be null.\nf62b084e92e0 [LoopDeletion] Remove legacy pass\n999ead9dc908 [Modules] Code cleanup after removing ModulesTS\n612f3ac26f8c [Modules] Remove -fmodules-ts\n96df79af029b [X86] Support load/store for bf16 in avx\n7e6e636fb683 Use llvm::has_single_bit<uint32_t> (NFC)\n68e81d7e45c7 [ADT] Use llvm::rotr (NFC)\nd54888a3ebb1 [Modules] Refactor modules-ts tests to use standard c++ modules\nfc6d517e2f33 [RISCV][CodeGen] Add codegen pattern for experimental zfa extension (FLI and FCVTMOD not included)\n5e815372480d [Clang][RISCV] Sort test cases into its mnemonics\na1aad28d297a [mlir][vector] NFC: Improve vector type accessor methods\n5382d28815d8 [mlir] Use std::optional instead of llvm::Optional (NFC)\n43059255ce53 [RISCV] Make a const member function static. NFC\n321cd52ba264 Update: [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\n54c136e6c630 [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\n7081e59dd12a [MC] Remove an unneeded comparison on cast result. NFC\n9a2cb3a6925f Fix bazel build\nf30ca850ef8b [mlir][sparse] reduce the input size in stress_test.py to make it finish in time.\ndcf18e4757b2 [debugserver] Initialize logging earlier in the startup sequence\nc738b430c46a [mlir][sparse] introduce operations to query sparse tensor slice offset/strides at the given dimenion\na851d46e07c1 [Clang][Driver] Fix integer normalization with KCFI\n4eee77873bca [LoopReroll] Remove legacy pass (unused in the pipeline)\ne2e83f4c8f1d [mlir][sparse] support coiteration over sparse tensor slices\n22b7685401e8 Reland \"[hwasan] Add definitions for missing operator delete functions\"\na9269773eb94 [scudo] Improve the uses of roundUpTo/roundDownTo/isAligned\n94a391b94972 [scudo] Calling iterateOverChunks requires holding lock\nae1bd3adf02f [scudo] Add thread-safety annotations on TSD data members\ne7d3f43eafdd [LoopFlatten] Inline an external linkage function not in llvm::. NFC\n48bfed77cf86 [LoopFlatten] Remove legacy pass (unused in the pipeline)\nf1ddfa6d8a72 [lldb] Remove pydoc import during script interpreter init\n7d62bc9cd380 [mlir][sparse] disable sparse convolution test cases.\n21ccddd2cee1 [LoopInterchange] Remove legacy pass (unused in the pipeline)\n66b3f4a40731 [libc][bazel] Add missing dependency for stdlib tests.\n9ed587ea9bec [mlir][sparse] split sparse concatenate test cases smaller ones.\nae7942e2960e [mlir][sparse] adding `SparseTensorType::get{Pointer,Index}Type` methods\n8bd0e9481cfc Revert \"Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\"\n7adf26e7683d Revert \"Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\"\nc38c8d674383 [PseudoProbe] Refactoring a test\n7058f083020d [gn build] Port 6f3e6a765a9e\nf5aa8d191a5b [Clang][docs] Update the release notes page to the new skeleton\n6313ece5ce94 Revert \"[hwasan] Add definitions for missing operator delete functions\"\n052ae28ac77f [RISCV] Use !cond instead of multiple !if in RISCVInstrInfoVPseudos.td. NFC\nd464edde9571 [X86][Win64] Avoid statepoints prior to SEH epilogue\nd950bdc73eb2 [mlir][sparse] misc code cleanup\n74a5d7471fbd [flang][runtime] MayAlias() must be false for unallocated descriptors\n08ecef8e338f [RISCV] Add CLB/CLH/SLB/SLH formats for Zcb instructions.\n792a724f894a [RISCV] Remove some vestiges of Zbp and Zbt extensions. NFC\n8c1f77af7fd1 [clang-format] Fix windows build.\ne6fbfb1ff1d3 [NFC] Make Module::getIFuncList() private\nbb4fc6b6d6b4 [mlir][sparse] Adding `SparseTensorType::{operator==, hasSameDimToLvlMap}`\nee437afa912b [flang] Don't add a source range to a type instantiation's scope\n6f3e6a765a9e Revert D129735 \"[RISCV] Add new pass to transform undef to pseudo for vector values.\"\na9797d7d2d78 [C2x] Implement the `unreachable` macro for WG14 N2826\nd6ff0808618c [hwasan] Add definitions for missing operator delete functions\n565048543b35 [NFC][SVE] Refactor isel for floating multiply-add operations to use PatFrags.\n72584d91990b [scudo] Fix inconsistent signed/unsigned comparison\ndf2ea2fc2839 [ConstriantElimination] Add NODEBUG condition around `dump`\n8a7b5e0e50de [AArch64] Guard extra uses in mls combine.\nc3ca29080c17 [mlir] bazel fix\nbe75cf931f3f [mlir][tensor] Fix a bug in tiling unpack op.\na41e1ea2a746 [libc++][CI] Starts using Clang 17.\neddec9de44cd [Pseudo probe] Duplicate probes in vectorized loop body.\n57865bc5ad27 [CodeGen] Add a flag to `Address` and `Lvalue` that is used to keep track of whether the pointer is known not to be null\n9048ea28da95 Reland \"[mlir] Make the vast majority of intgration and runner tests work on Windows\"\n114ce273d86a [flang][runtime] Fix typo in assign.cpp\n78e172fc92e7 [mlir][spirv] Support i32 memref.atomic_rmw conversion\n7889f424966e [flang][NFC] Remove unwanted tab\n97ba3c2bec48 [Clang][AMDGPU] Set LTO CG opt level based on Clang option\n45ee0a9afc62 [LLD] Add --lto-CGO[0-3] option\n3cf7f2249825 [mlir][vectorToGPU] Fix type used when folding transpose into read op\na225d897c151 [DebugInfo][Docs] Fix broken link in instruction referencing doc\n82ae83a8487d [mlir] Silence a few -Wunused-but-set-parameter warnings\n22f0c7a45149 [mlir][AMDGPU] 8-bit float usage in the AMDGPU dialect\n50ef8673a378 [InstCombine] remove stale test comment; NFC\n07f93d8c2cc4 Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\nb413b84a704e [libc++abi][AIX] Skip non-C++ EH aware frames when retrieving exception object\nb0bfbad19b06 [AArch64] Always lower fp16 zero to FMOVH0\nef15617f124c [flang][runtime] Return the right mutable modes from INQUIRE in child I/O\n6dd9d18204d2 [mlir][linalg] Fix insertion point bug in D144022\n4f15267d3dd7 [libc++][NFC] Replace _LIBCPP_STD_VER > x with _LIBCPP_STD_VER >= x\n6b991ba486b6 [clang][dataflow] Change `transfer` API to take a reference.\n02ae7e72b3f0 Revert \"Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\"\n22882c39df71 [InstSimplify] Add additional insertvalue into undef tests (NFC)\n93164dba086d [llvm][AArch64] Fix BTI after returns_twice when call has no attributes\n2a2a6bfcfe8e Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\n62d0e1a8541f Revert \"[ConstraintElimination] Change debug output to display variable names.\"\n869c87ad10e8 [ConstraintElimination] Change debug output to display variable names.\nb67ee5d50562 [reland][libc] Separate memcpy implementations per arch\nc645eb0d03bd [mlir][memref] Bufferize memref.tensor_store op\n01581e28ad92 [mlir][linalg] Add bufferize_to_allocation transform op\n07916cea2e7e [ConstantFold] Check for constant global earlier (NFC)\n8b5004864aab [lld][RISCV][test] Expand testing in riscv-attributes.s\n4c3408697b73 [LangRef] improve documentation of SNaN in the default FP environment\n7a282bd2aaa5 [bazel] Fix missing dependency in clang-tools-extra/clang-tidy:llvmlibc\n861764b1c5f7 [NVPTX] Fix NVPTX output name in the driver with `-save-temps`\n15b90805bcb8 Revert \"[libc] Separate memcpy implementations per arch\"\n97e441dc6cfa [libc] Separate memcpy implementations per arch\n3ef062a4bd86 [mlir][transform] Add transform.get_result op\n1f818f63b829 [clang-format] assert(false) -> llvm_unreachable\nf70282237166 [bazel] create a clang-tidy binary target\n980aa8d740da [MachineTraceMetrics] Add local strategy\nb0e7ca79ab0c [X86] Remove abs(sub_nsw()) -> abds fold from adbu test file\na8483b9b3038 [lldb] Fix a log format warning on Windows, don't assume uint64_t is a long type\n1995d4424505 [clang-format] Enable FormatTokenSource to insert tokens.\n9ccc58893be8 AMDGPU: Fix not adding to depth in getNegatedExpression\n7cbbbc0a045b clang: Rename misleading test name\n674f094d852b [lld][ARM][NFCI][1/3]Big Endian support - Removing assumptions\n5bb8ead4e9dc [AArch64][NFC] Rename  AEK_SMEF64 and AEK_SMEI64 feature flags\n3600b384462b [SimpleLoopUnswitch] Canonicalize conditions for injection of invariant condition\n0992e6ee115e [Test][NFC] Rename one of test parameters to avoid confusing associations\ne117fd28d525 [Symbolize][MinGW] Support demangling i386 call-conv-decorated C++ names\n14fcdd7f9d7b [CVP] Add additional ctlz tests (NFC)\n4c8eda9337d4 [XCore] Adapt threads.ll to opaque pointers.\nbc173f526c57 [SimpleLoopUnswitch] Fix overflowing frequencies case\n45ddc157ca7c [clang-tidy][NFC] Remove ModernizeTidyModule::getModuleOptions\nc7f9344d0f8f [DAGCombine] Fold redundant select\nc3228714cc0e [libc][NFC] Make tuning macros start with LIBC_COPT_\nd64d5772b1ea Add InstSimplify tests for comparisons between known constants\n59b8db1db8ec [JITLink] Drop const qualifier from argument to ELFLinkGraphBuilder's ctors (NFC)\n1c42f8e69d8f [JITLink] Fix whitespace in debug dumps (NFC)\n7d9cf97f80f0 [bazel][mlir][examples] Add missing dependency for 72429a42ac33564fa82449d99dc234da32a05498\n458ad6900e66 Revert \"InstCombine: Fold is.fpclass(x, fcZero) to fcmp oeq 0\"\ne1d95e99bc31 [flang] Update intrinsic types to unlimited polymorphic form\n11c3cead2378 AMDGPU: Override getNegatedExpression constant handling\na4e8347b3661 AMDGPU: Refactor isConstantCostlierToNegate\ndf78976d023a InstCombine: Fold is.fpclass(x, fcZero) to fcmp oeq 0\n8f7e7400b74b [mlir][bufferization] Add restrict and writable attrs to to_tensor\n462227f1150f [SROA] NFC: Look at TypeStoreSize scalable property, rather than at type directly.\n35276f16e5a2 [llvm-c] Add C API methods to match 64bit ArrayType C++ API signatures\n71712440bbb2 [mlir] Add vectorize_nd_extract attribute to the masked_vectorize Op\n86a63b2ae147 [Metarenamer] Use 'inst' as default name for instructions\nddc5d40dd285 [clang][analyzer] Make messages of StdCLibraryFunctionsChecker user-friendly\nc1eb3db780b7 [LoopFuse] Remove legacy pass\n30d542f9b2ad [MLIR][Tensor] Introduce a pattern to propagate through `tensor.pad`\n2872987e5e91 [InstCombine] Fix InstCombinerImpl::foldICmpMulConstant for nsw and nuw mul with unsigned compare.\n41628d050a17 [mlir][Bazel] Add missing dependencies for 72429a42ac33564fa82449d99dc234da32a05498\n4bba8bd33efd [mlir] Add RewriterBase::replaceAllUsesWith for Blocks.\n72429a42ac33 Add a pass that builds a debug info scope for LLVMFuncOp (adding a DISubprogramAttr)\nd7ca25342ff6 [mlir][Bazel] Add dependency needed for e9b82a5c\n1427277eed80 [mlir][Vector] Enable masking for static shapes\n1ac874c9aa18 [mlir][Vector] Add support for masked vector gather ops\n9452356ddcf4 [mlir][Vector] Add support for masked vector.contract\ne9b82a5c4fb6 [mlir][Vector] Add LLVM lowering for masked reductions\na409f3c06914 [LoopVersioningLICM] Remove legacy pass\n0dc18b6222f4 [mlir] Use std::optional instead of llvm::Optional (NFC)\n05423905d064 [mlir] Use std::optional instead of llvm::Optional (NFC)\n4dfd5a3eb6c3 [llvm] Use std::optional instead of llvm::Optional (NFC)\n71251e8d4f3f [mlir] Fix -Wsign-compare in SparseTensorRewriting.cpp and Sparsification.cpp (NFC)\n9e6e96f3e4c3 [gn build] Port f1c4241fb6e5\nf1c4241fb6e5 [RISCV] Add new pass to transform undef to pseudo for vector values.\na17bfbad6387 [RISCV] precommit test for D129735\n54cf24dc6e63 [NFC] Refactor ModuleDeclStateTest to make it not dependent on Frontend\nef6d474aa7ac [ORC] Add ELFNixPlatform::Create overload -- Pass ORC runtime as def generator.\nf708a549b87e [mlir][sparse] Factoring out SparseTensorType class\n8d995b26c755 [C++20] [Modules] [ClangScanDeps] Ensure that we can mix the use of and clang modules\naef76fe554ee [clang-format][NFC] Reformat clang/tools/clang-format/fuzzer/\n81cb70e46ea1 [mlir][sparse] fix a bug in UnpackOp converter.\ndd31a3b3a526 [InstCombine] fold icmp of the sum of ext bool based on limited range\n06f06644efb0 [SeparateConstOffsetFromGEP] Fix: `b - a` matched `a - b` during reuniteExts\nf93da3962eed [Instcombine] Precommit tests for icmp range; NFC\na52432f63312 [NFC][SeparateConstOffsetFromGEP] Added flag `lower-gep`\na211d79cac12 [bazel] Port 26662ac010ef50e65e2774eab84f325aa09360fe\n6e794ba0b238 [Clang][RISCV] Guard vector int64, float32, float64 with semantic analysis\nc0f504df4857 [mlir] Fix two build warnings in VectorToGPU (NFC)\nbb692d44c43f [gn build] Add missing count dependency for check-asan\ndfacba5af0fb [scudo] Update ring buffer test to make it accept zero size\n766065aa6553 [LoopUnrollAndJam] Remove legacy pass\n6a4c39596d68 [scudo] Add the thread-safety annotations\n2b8cb7d87fcb [LoongArch] Make use of addu16i.d for adds with suitable immediates\ndcf9c60a538c [LoongArch] Add baseline tests for `addu16i.d` codegen. NFC\n82c6e90d6a3d [Clang][Test] Add llvm-lto, llvm-lto2 and llvm-profdata to the tool substitutions list\n6adf92026ee5 Remove trailing whitespace in `X86InstrAVX512.td`; NFC\nf895d55f149b Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\n42e11a6ea321 Add transform (and/or (icmp eq/ne (A, C)), (icmp eq/ne (A, -C))) -> (icmp eq/ne (ABS A), ABS(C))\nabf6692f9513 Tests for (and/or (icmp eq/ne A, C), (icmp eq/ne A, -C)) <--> (icmp eq/ne (ABS A), ABS(C)); NFC\n8b5c3902475b Transform `(icmp eq/ne Abs(A), Pow2)` -> `(and/or (icmp eq/ne A,Pow2), (icmp eq/ne A,-Pow2))`\n54a9e992c84c Add Transform for `(and/or (eq/ne A,Pow2),(eq/ne A,-Pow2))`->`(eq/ne (and (and A,Pow2),~(Pow2*2)), 0)`\ne29c4393236f Add tests for folding `(and/or (icmp eq/ne A, Pow2), (icmp eq/ne A, -Pow2))`; NFC\nf3732c2b18df Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\n3e0866bf616b [mlir][Vector] NFC - Fail gracefully on size mismatch instead of assert\n5ef7ceae5769 [mlir][Vector] Significantly improve VectorToGPU.cpp\n26662ac010ef [Support/BLAKE3] Rename blake3_* -> llvm_blake3_* to avoid symbol collisions\n10eea3fe1536 [LoopVersioning] Remove legacy pass\n74a2dd1356bf [InstSimplify] fix/improve folding with an SNaN vector element operand\nac2f13f673b8 [InstSimplify] add tests for vectors with SNaN constants; NFC\nae0c203e676e [LoopLoadElimination] Remove legacy pass\n87046744e6a8 [Driver] Allow test to use lld-link.exe not just lld-link\neb5530e621aa [LoopDistribute] Remove legacy pass\n823186b14dc9 Recommit: [NFC][IR] Make Module::getGlobalList() private\n0a0d58f5465a [libc++] `<algorithm>`: `ranges::minmax` should dereference iterators only once\n83ba349ae0a8 [InstSimplify] fix/improve folding with an SNaN operand\n4a4e44e378ca [InstCombine] add test for loop-invariant fdiv; NFC\n1ce1e4a4d59d [mlir][spirv] Validate float type bitwidths\n96fcaf0cc06a [openmp] Fix building for mingw targets after import library changes\ncb5f239363a3 Revert \"[NFC][IR] Make Module::getGlobalList() private\"\ncafb1c1cb241 [runtimes] Remove duplicate imports of libcxx.test.config\nb4243bb611a3 [clang-format] Don't rewrite the input file if already formatted\ned3e3ee9e30d [NFC][IR] Make Module::getGlobalList() private\n33d0d1e36ffa [runtimes] Rename newconfig.py to config.py -- it's not new anymore\n9f3a3e1f3f97 [lldb] Disable macro redefinition warnings in expression wrapper\n20cdf7c70667 [InstCombine] Increase limit for max copied from constant fold\n0d4e55ba69c1 [OpenMP] Recover non-blocking target nowait disabled by D141232\n9093f3c39b8f Report a useful error when someone passes an incorrect python class name.\n853a46cfb1ca Revert \"llvm-reduce: Run instruction reduction last\"\n9e9293ee6aaf [llvm][test] convert one test to use opaque ptrs (NFC)\nac835ecb5fea [Fuchsia] Set /winsysroot in Windows runtimes linker flags\nc062e97acfba [llvm][test] restrict 2 GVN tests to just test GVN (NFC)\nc510c387631e [libc++][NFC] update Range Status for the completion of C++20 ranges\nb677d0753c0a [IPSCCP] Remove legacy pass\n36606cf07080 [NFC] Replace -1U{LL} expressions with appropriate *_MAX macros in Support library.\n31c35285d27e [mlir][spirv] Fix crash when decorating physical storage buffer pointers\n913b4aa60830 Reland \"[compiler-rt][hwasan] Add unused attribute to GetRegisters\"\nddb704247b16 [clang][test][RISCV] Introduce separate RUN lines for __risv_i test in riscv-target-features.c\naecb36c8489a [GlobalOpt] Remove legacy pass\nb40bfc1b9e38 Reland \"[gn] port f29cfab55d1f\"\n5b455a8efbf5 [InlineAdvisor] Restructure advisor plugin unittest cmake\n08533f8b8660 Revert \"[CGP] Add generic TargetLowering::shouldAlignPointerArgs() implementation\"\n12b4f9e2af95 [AMDGPU] Do not apply schedule metric for regions with spilling\n5c1b8de77d1c [libc++][doc] Sets the proper plenary date.\n8cf1524cbc7f [loop unroll] Fix `branch-weights` for unrolled loop.\nfb717fe06dd0 [NFC][IR] Make Module::getNamedMDList() private\neaeb8ddd4a9d [LLDB] add arch-specific watchpoint behavior defaults to lldb\n8198f30f7e75 [lld-macho] Account for alignment in thunk insertion algorithm\n055cd78eef15 [RISCV] Untabify THMulAccumulate_rr. NFC.\nd4012bc43f9a [RISCV] Add vendor-defined XTheadMAC (multiply-accumulate) extension\n179db7efe567 [MLIR][OpenMP] Add support for depend clause\n361d5a7a9f14 [gn] port 4e3dac6f0a4c (ScudoHooksUnitTest)\n7301a7ce196e [mlir][linalg] Make Linalg vectorizer lower affine.apply\n4e3dac6f0a4c [scudo] Call __scudo_deallocate_hook on reallocations.\n6c7894a8e652 [libc][doc] Move docs/math.rst to docs/math/index.rst\nddde06906be1 [OpenMP]Fix PR55970: Miscompile of collapse(3) with non-rectangular loop nest.\n5dc400ea2f06 [gn build] Port 7f5d130a428f\n1da2085a5133 libclc: add clspv to targets exempt from alwaysinline\n290308a99e6b libclc: add generated convert.cl to clspv/clspv64 targets\n9c8f3409494f [libc++][format] Fixes test failures.\n7f5d130a428f [libc++][chrono] Add hh_mm_ss formatter.\n5205c7126b2f [mlir][gpu] Add support for unsigned integer extend in vector to gpu.subgroup_mma lowering\nf6cd46e07fcc libclc: add more generic implementations to clspv SOURCES\nf8877d86a867 [libc++][doc] Adds Issaquah papers and issues.\n5a81d0eea40a [AArch64] Remove dead isReflexive methods. NFC\na9f384994b9d [libc++] Counter<T>'s assignment operator shouldn't ++gConstructed\n755535b5eb5f [flang][runtime] Handle aliasing in Assign()\n0f52c1f86c62 [llvm] Deprecate {Bits,Float,Double}To{Bits,Float,Double} (NFC)\nd180443570d7 [NFC][IR] Make Module::getIFuncList() private.\n016d5a0a0a15 [flang] Strengthen conformance requirements for allocatable/pointer dummy arguments\nd05e1e99b1d6 [clang][test][RISCV] Check for __riscv_i in riscv-target-features.c\n574d0c2ec107 [clang][test][RISCV] Fix precision of CHECK-NOT lines in riscv-target-features.c\nf4d8b8781de9 [AMDGPU ASAN] Remove reference to asan bitcode library\nc5085c91cc8e [CodeGen] Trivial simplification of some getRegisterType calls. NFC.\n800fec13a81f [libc++] Enforce formatting for already formatted and new files and ignore the formatting of tests\nacbb15ed705f Revert \"[extract_symbols.py] Adjust how the output of nm is interpreted\"\n9a8d64a66a15 Revert \"[libc] Separate memcpy implementations per arch\"\nbf987e108fcc [AArch64][SME]: Custom lower select and fp_extend for streaming SVE\n26541d417634 [libc] Separate memcpy implementations per arch\n8981f20ae9c3 [libc] refactor logic around embedded memcpy\n3af88305e443 [flang] Associate entities are variables\nfefe729f0f4a [AArch64][SME]: Custom-lower SIGN_EXTEND_INREG for streaming SVE\n057cae64ebc4 [MLIR][Presburger] Matrix: hide expensive consistency check behind EXPENSIVE_CHECKS macro\nf04421739232 [ConstraintElim] Add reproducer remarks.\n9c14132d7b6c [AArch64][SME]: Add missing Ops that need custom-lowering in streaming mode.\nbfbfbd8b65de [LVI] Fix and re-enable at-use reasoning (PR60629)\n0fa5df1959fa [LV] Synthesize all true masks for masked vector function variants\n09dd4d870e19 DAG: Remove hasBitPreservingFPLogic\nd94399c64151 [mlir][llvm] Make LoopAnnotations non-discardable\n463fa25c34d6 [clang][NFC] Adjust tests to not un/define predefined macros\n7a49d50f22ad [flang] support fir.unreachable in stack arrays pass\neb436da6b826 [flang] automatically load FIR dialect with hlfir\nddfabefe1be1 [libc] Conform memcpy tuning macro to the new naming scheme\n77bd15ae2fa3 [MachineTraceMetrics][NFC] Move Strategy enum out of the class\n147f476e851d [mlir][LLVM] Properly wrap code examples in markdown code blocks\na5488a398f3b [flang][hlfir] remove unnecessary header include\n1fae1464d7a7 [flang] Fix USE rename\n67223522355b [SimpleLoopUnswitch] Re-enable simple-loop-unswitch-inject-invariant-conditions\nc7ea20c8eed5 [SimpleLoopUnswitch] Ignore inner loops when injecting invariant conditions. PR60736\nf3c008ca776b DAG: Relax foldBitcastedFPLogic conditions\n3849dc1f8eeb [NFC] Move some asserts out of Expensive Checks\n94676cf8a13c [llvm][AArch64] Fix an interaction of SLS and BTI after a returns twice call\nebc21c7a2558 [Test] Add test for PR60736\ncfeb0bf83ec1 [SimpleLoopUnswitch] Temorarily switch off simple-loop-unswitch-inject-invariant-conditions. PR60736\n8c7cfa357280 [mlir] fix LLVM IR translation of vector<... x index>\n98ecc3ac77a9 [Flang] Fix for Any/All simplification to properly propogate the inital value\ne8d44841c5d5 [docs] Update the ACLE URL\n6240627cfda4 [docs] Fix bullet list formatting\n0b33f0d80b83 [mlir][linalg] expose convolution dimension classifier\n7fdc2ed09f44 [mlir] reallow null results in TransformEachOpTrait\n64dad4ba9af6 Use llvm::bit_cast (NFC)\n544831ab9f35 [mlir] Drop unused arith conversion class (NFC)\n504aa8ae941e [include-cleaner] Better support ambiguous std symbols\n1ba93c3c30dc [Modules] Don't re-generate template specialization in the importer\n46cdf7f09912 [Tooling][Stdlib][NFC] Reflow comments and strip clang-format pragmas\n697a162fa63d [AVR] Fix inaccurate offsets in PC relative branch instructions\n1e6921131aa4 Move global namespace cl::opt inside llvm::\n4f0eb57222de AMDGPU: Teach getNegatedExpression about rcp\nce4b719f33e5 AMDGPU: Add test for getNegatedExpression with rcp\n0a669bd894f3 AMDGPU: Add additional tests for combiner infinite loop\n463ab1e07a0a llvm-reduce: Run instruction reduction last\n04f69345894d [DAG] Handle build_vector with all undefs in reduceBuildVecTruncToBitCast\n2e9549db2686 [LangRef] Global variable declarations imply minimum size\naf838c1b1c20 [Coroutines] Don't run optimizations for optnone functions\nbfea83767603 [mlir][llvm] Reintroduce string based attribute setting.\ncb90bb986611 [PowerPC] Specify the dynamic loader prefix in ppc-float-abi-warning\ndf3e73dabb5b [LoopDeletion] Simplify. NFC\n9c4f0d83f64e [docs] Add document for clang-scan-deps -format=p1689\n8c74defcca50 [OpenMP] Fix extra parenthesis in kmp_os.h\n5e78b749eccf [ARM] Use llvm::rotl and llvm::rotr (NFC)\na411bc727426 [RISCV] Rename InstFormatCSZN->InstFormatCU to match latest Zcb spec. NFC\n639b7865a67f [RISCV] Use llvm::rotl (NFC)\nafad153a0890 Recommit: [NFC][IR] Make Module::getAliasList() private\ndf77dec93e17 [AArch64] Use llvm::rotl and llvm::rotr (NFC)\n9700eb4fbfdc [bazel] build fix\n48f04ffa9f36 [mlir][affine] Normalize constant valued bound loop\n6d4a674acbc5 Revert \"[NFC][IR] Make Module::getAliasList() private\"\n7c6b46e87eaf Revert \"[DAGCombiner] handle more store value forwarding\"\nac6219d0aeb7 Revert \"[DAGCombiner] fix comments for D138899; NFC\"\nb64f7d028bdc [NFC][IR] Make Module::getAliasList() private\n6ee2f770efb6 [PowerPC][GISel] add support for fpconstant\n5561e174117f Revert \"[mlir] Make the vast majority of integration and runner tests work on Windows\"\n663725947bae [flang] Disable libc++ assertions in the runtime library\ncff7fad1544a [flang] Catch repeated BIND(C) attribute specifications for a symbol\n235e90c1d760 [Clang][RISCV] Guard vector float16 type correctly with semantic analysis\n4b815d8443db [mlir][NFC] Remove unused variable 'indexType' in GPUTransformOps.cpp\n288ae0b92f57 [mlir][gpu] NFC change to pass threadID ops to rewriteOneForeachThreadToGpuThreads\n69373a5d3f45 [flang] Check for invalid BIND(C) names\n4148f2768b87 [flang] Check for non-interoperable intrinsic types in BIND(C) derived types\n855b67799b7c [libc++][NFC] Remove duplicated line from `Cxx20Issues.csv`\n30d932305567 [flang] Pointers returned from functions are not definable as pointers\n632fd9fb861c [flang] Respect inaccessibility of type-bound ASSIGNMENT(=)\n5402110e0123 Revert \"[lldb] Use portable format string PRIx64\"\n7bc9dc26bc9b [Fuchsia] Add FUCHSIA_ENABLE_LLDB option.\n860ed6c078b4 [flang] Warn about dangerous TRANSFER()\n776b7499ea81 [TLS] Added a LangRef entry wrt the module flag MaxTLSAlign.\nb57bc158ea46 [flang] Catch obscure structure constructor error\nee88f1177003 Find SDK path more lazily in Apple Simulator platforms\nf7016f8a8ea2 [scudo] Call getStats when the region is exhausted\n70758b801df9 [scudo] Calling getStats requires holding lock\nf28c1a9df2e3 [flang] Conform with standard (mostly) for character length mismatches on arguments\ne800c664f0e9 [mlir][sparse] Extend readCOOIndices to support overhead types beyond index_type.\n8151d6f80458 [flang] Diagnose REPEAT with negative NCOPIES=\nce9ce66b8def [mlir][sparse] fix a memory leakage when converting from a tensor slice\n5fde2d99513f [libc] Write stub files to a new directory to avoid conflicts\n4f1037f86a62 [flang][build] Fix build issue reported on recent commit\n620b3d9ba334 Revert \"[LLDB] Enable 64 bit debug/type offset\"\neb0ea28b6a1b [OpenMP] Add check for target allocator regardless of the availability of libmemkind\n81566001e0c8 [mlir][tosa] Enable `apply_scale` unrolling\nb673135bb833 [Release] Produce bolt tarball\nbe7d7ca11018 [lldb] Use portable format string PRIx64\n17b097b8df69 [runtimes] Set LLVM_ENABLE_PER_TARGET_RUNTIME_DIR_default to ON for OS390\nf11ab8353f97 libclc: remove sqrt/rsqrt from clspv SOURCES\n807d43239a5f [VPlan] Use properlyDominates predicate for ordering FOR users.\n161b9d741a3c [mlir] Make the vast majority of integration and runner tests work on Windows\n19b1e27fcd56 [mlir][SPIRVToLLVM] Add pass option to emit opaque-pointers\n009fc4ca3b44 [mlir][LLVM] Verify correct pointer casts with `llvm.bitcast`\n0aaf2e3bc057 [mlir][GPU] add required address space cast when lowering to LLVM\n9d0b596aada6 [mlir][tosa] Fix segmentation fault in case of folding unranked tensor\nf36fe009c0fc [LLDB] Enable 64 bit debug/type offset\n7156d3b1fe80 [libc][bazel] Update math function unit tests' dependency computation.\n2dab5bdf89f6 [flang] Warn on mismatched DATA substring sizes rather than crashing\n9369b7d307be [lld][WebAssembly] Limit size of shared 64-bit memories of 2^^34\n67d78e3c6fe5 [libc] Add a loader utility for AMDHSA architectures for testing\ne5d914672233 [extract_symbols.py] Be more permissive when examining nm output\n8f5d81585aa9 [Clang][LLVM] Enable __arithmetic_fence and fprotect-parens on AArch64\ne96f994f39ad Revert \"[Hexagon] Add release note for LLVM 16\"\n892bf09606b6 [mlir][arith] Allow to specify `constFoldBinaryOp` result type\ndc38cbcc8b89 [mlir][arith] Fold selection over constant vector conditions\nf841c4af5f5e [lldb] Fix image lookup crash\n51a07fc24cb9 [clang] Add test for CWG2396\n7638409d4363 [RISCV] Make vsetvli intrinsics default to MA.\n06d9bf5e64d4 [OpenMP] generate the Windows import library that imports by name rather than ordinal\n96267b6b8840 [mlir] Add Float8E5M2FNUZ and Float8E4M3FNUZ types to MLIR\n7c84f6a43ae3 [flang] Emit portability warning for extension\n8e628f72b00c [mlir] Avoid building some shared libraries when PIC is off\nbf7c42161700 Revert \"Reland \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\"\n8a57748804bd Revert \"[lldb][Test][NFC] TestExternalCtorDtorLookup: add more instantiations to test linkage name is correct\"\n9dd1168fe115 [docs] Speculative link syntax fix\nf1f62ed0c834 [ADT] Add llvm::rotl and llvm::rotr to bit.h\n31c42f8f3588 [libc++][doc] Updates format status page.\n756395f61b90 [clang] fix DR status in cxx_status.html\ndf5beebc98bb [Driver] Add --vfsoverlay flag\n176ee268f8df [flang] Allow for user-defined intrinsic operators (regression)\n39eb1c6145eb [CSSPGO][Preinliner] Set default value of sample-profile-inline-limit-max to 50000.\nb6259eca16f6 [Clang] Export CanPassInRegisters as a type trait\n0c412fed360f [RISCV][docs] Describe status of zicsr and zifencei\nd4021ed3d79d [Tooling/Inclusion] Add symbol mappings for `std::experimental::filesystem`\n6e10e6cb8fab Reland \"[lldb][DWARFASTParserClang] Correctly resolve imported namespaces during expression evaluation\"\n1232b9d47209 [RISCV] Fix -Wbraced-scalar-init warning. NFC\n171ffd499e16 [ORC] StaticLibraryDefinitionGenerator -- support in-memory universal binaries.\n201b2b5674e1 [libc++] Reorganize exception_guard\n1c9e6238fe2f [AMDGPU] Allow architected SGPRs for workgroup IDs\nb35d0a6834f8 [AMDGPU] Add switch to enable architected SGPRs.\n1edb04bc70f3 [extract_symbols.py] Adjust usage of nm again\n4198ff0cb999 [AArch64] Add NZCV Def for TLSDESC_CALLSEQ\nd44b31eca27c [DAGCombine] Allow DAGCombine to remove dead masked stores.\n58d246a27b8c [mlir][spirv] Drop outdated TODO comment\nfc02eeb24fc0 [RISCV] Add vendor-defined XTheadBb (basic bit-manipulation) extension\nb8c2ba138ef6 [NFC] Fix using-declspec.cpp test with non-C++17 compilers\n00a5ae12448e [mlir][bufferization] Better propagation of bufferizesToMemoryWrite through regions\n95526930da6c [flang] Fix new assertion failure\nbbff77a14ef2 Revert \"[libc++] Remove _LIBCPP_CONSTEVAL\"\n04a2baf58f23 [RISCV] Add vendor-defined XTHeadBs (single-bit) extension\n676bca0b6f0d [libc][NFC] Fix typo in header guards\n5a5f3de6ee62 [RISCV] edit document of Zcb to match the Implementation\n2e47aafb02f3 [PowerPC] Fix float materialization patterns.\n6a6c527ee287 [X86][FP16] Combine two steps conversions into direct conversion\n388d679c1dfa Recommit [YAML IO] Check that mapping doesn't contain duplicating keys\nd904ee3d479a [flang] Handle correctly optional intrinsic scalar to unlimited polymorphic optional\n877859a09bda [clang] Handle __declspec() attributes in using\na01edb169bb0 [flang] Fix output type when emboxing intrinsic type to unlimited polymorphic box\ncc4fb5837647 [mlir] support complex type in DenseElementsAttr::get.\ne9eaee9da196 [AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\naf3c25dc3d87 [VPlan] Fix iterator invalidation in adjustFixedOrderRecurrences.\n580109025801 [libc++] Fix bug in allocate_shared_for_overwrite\n7eec2f2f218c [flang] Avoid infinite recursion in common block check\n87cc95a904e0 [libc++] Implement P2136R3 std::invoke_r\nafe9b0ba87b7 [Test][lldb] Fix YAML mapping keys duplication. NFC.\nd3b0fba6084d Revert rG0b0a38a7a229b70d7261771ba0e702843bd34e97 : \"[X86] combineX86ShufflesRecursively - don't widen shuffle subvector inputs\"\nb838b6287617 [mlir][MemRef][Transform] Don't apply multibuffer on \"useless\" allocs\n5d3c58829d28 [gn] port c4f7cc867299 (CoroTests)\n9f650ae779b4 [Libomptarget] Remove dependency on the DeviceRTL from the GPU plugins\n3c160d3051dc [lldb][Test][NFC] TestExternalCtorDtorLookup: add more instantiations to test linkage name is correct\n9e3010ad992d [AArch64] Fix LSE2/LSE128/RCPC3 precedence\ne698c5950430 [libc++] Granularize <type_traits> includes in <algorithm>\ne3515ba3816b Reapply \"[AMDGPU] Modify adjustInliningThreshold to also consider the cost of passing function arguments through the stack\"\n8b28500f60b7 [mlir][MemRef][TransformOps] Fix error reporting for multibuffer\n4c273cd07115 [DWARFLinker] Refactor cloneAddressAttribute().\n30f515a9101d [libc] Fix LIBC_LOOP_NOUNROLL being a noop\nc4f7cc867299 [Coroutines] Modify CoroFrame materializable into a callback\n3e51af9b5b3a [Coroutines] Improve rematerialization stage\n35106ad1009f [Coroutines] Presubmit test for more coro remats\n8f104a3f9ae2 [ARM] O3-pipeline fix\n5922b886350c [flang] RFC: -fstack-arrays\n2feafd059e9f [flang][hlfir] lower hlfir.sum into fir runtime call\n9facbb694250 [flang] lower sum intrinsic to hlfir.sum operation\n3ad26060e4bc [flang] add hlfir.sum operation\n7c4e45ec7d6d [mlir][SCFToOpenMP] Add pass option to emit LLVM opaque pointers\n4a2d4588a041 [mlir][Vector] add pass option to `convert-vector-to-llvm` to emit opaque pointers\nd5ea1b22cba3 [flang] use mlir::LoopLikeOpInterface::blockIsInLoop\ne6ec76c647aa [LLDB] Apply FixCodeAddress to all forms of address arguments\na9329a96ada3 Adjust #pragma warning so GCC is not unhappy\n5a028cc8ffa5 [mlir][LinAlgTransformOps][NFC] Use emitSilenceableError\n2a58be423963 [HardwareLoops] NewPM support.\nc5e1000b2915 Add build for Windows on Arm in packaging script\nfdd18e866b05 [llvm][TableGen][Jupyter] Show llvm-tblgen not found error in notebook\n24ecd9984235 [NFC] Set C++20 Named Modules for CodeGen in ASTContext in the early place\n19659b5f0dd1 [clangd] Drop includes from disabled PP regions in preamble patch\nfae01d175a29 [clangd] Fix bugs in main-file include patching for stale preambles\nf79a5fb9df42 [Test][SCEV] Add a test where the trip count can't be calculated\n7f249e45eca4 [milr][llvm] Add remaining loop metadata support\nfff762d674c3 Revert \"[CMake] Remove custom ccache CMake logic\"\n240c6f264399 [mlir][llvm] Improve LoadOp and StoreOp import.\n0fad18c44a14 [CMake] Remove custom ccache CMake logic\nae55f1cf9c10 [gn build] Port b7b28c6cfe04\nb7b28c6cfe04 [clang-tidy][libc] Add an inline function checker for the libc project.\n2bc095037eb6 [AMDGPU] Use llvm::bit_cast (NFC)\n92716a42a6aa [llvm-debuginfo-analyzer] LLVM 16.0.0-rc1 Failing test on osx-64.\nb49b429fde3a [llvm] Deprecate PowerOf2Floor and ByteSwap_{16,32,64}\n9c401687eb46 [x86] Move combineAddOrSubToADCOrSBB within the source file (NFC)\ne0e329609858 [X86] Precommit tests for D143838\n64287d69827c Recommit [C++20] [Modules] [ClangScanDeps] Enable to print make-style dependency file within P1689 format (4/4)\n212d905643bd Recommit [C++20] [Modules] [ClangScanDeps] Allow clang-scan-deps to without specified compilation database in P1689 (3/4)\neb70b38f838f Recommit [C++20] [Modules] [ClangScanDeps] Add ClangScanDeps support for C++20 Named Modules in P1689 format (2/4)\n2e4499e749c0 [flang] Handle forward references to modules\nff5c00d4ffc8 [X86][FP16] Add tests to show suboptimal codegen, NFC\n9f8ee610beb1 [flang] Warn on overflow folding DIM()\naa128bb21ee3 [flang] Catch misuse of a procedure designator as an output item\n57751e60e34e [gn build] Port 2a06757a200c\n2a06757a200c [libc++][spaceship] Implement `lexicographical_compare_three_way`\n2e6430666caf [LV] Update recipe builder functions to pass VPlan directly (NFC).\naf03616f46a1 [Flang][OpenMP][NFC] Remove usage of else after return\n15cb5ebed7a4 [Support] Use llvm::popcount (NFC)\nbe2fc577c389 [ORC] Add MachOPlatform::Create overload -- Pass ORC runtime as def generator.\naca9016bcde0 [flang] Fix crash on SELECT RANK\nec116ea684b4 [llvm] Deprecate llvm::count{Leading,Trailing}{Zeros,Ones} and llvm::countPopulation\nbb00fb66ba11 [libc++][NFC] Fix formatting in ranges status page\n594700c12247 [flang] Warn about construct names that are not distinct in the inclusive scope\n129eb5bcab91 [lldb] Add the ability to provide a message to a progress event update\n19c1682b6a4c [X86] combineConcatVectorOps - concatenate 512-bit VPERMILPS nodes.\n6eb66890e473 [X86] Add some basic matrix multiplication test coverage\n10d8b3054a72 [Flang][OpenMP][NFC] Correct a few instances of variable naming\n9f2014269ad8 [AArch64] Regenerate and extend zip1 tests. NFC\nfaf5616e110c BlockFrequencyInfoImpl.cpp - add missing closing namespace comment. NFC\nd38fcb421657 BlockFrequencyInfoImpl.h - use auto* for pointer types. NFC.\n51007cfa456f BlockFrequency.h - add missing closing namespace comment. NFC\nfe655717bff1 [flang] Support polymorphic inputs for the TRANSPOSE intrinsic\n1bb95a3a99cb [X86] combinePredicateReduction - attempt to fold subvector all_of(icmp_eq()) / any_of(icmp_ne()) to integers\n8bb98b571547 [Clang] Add the list of approved (Issaquah) C++ papers to the status page\n738370ae0e7f DemandedBits.cpp - use auto* when initializing from cast<>. NFC.\n41328d7c0e6e RegisterPressure.h - consistently initialize all pointer fields. NFC.\n1300a4fdae35 Revert rG23cb32c6d5bda0919cc1ef129917ceb2dbf1b1b8 \"[X86] combineX86ShufflesRecursively - treat ISD::TRUNCATE as faux shuffle\"\n7717e1114ad3 Revert \"[AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\"\nf48f17871792 [InstCombine] canonicalize cmp+select as smin/smax\n14411adc3dce [InstCombine] add tests for disguised smin/smax; NFC\nc697119dafce [bazel][libc] Add a few more missing dependency that show up when parsing headers\nbb5f79158b71 llvm-tblgen: Apply IWYU in some files\n2d570bab4f99 CodeGenTarget.cpp: Reformat.\n0e18b5feaaba LLVMFuzzerCLI: [CMake] Prune the last PARTIAL_SOURCES_INTENDED to cover all sources.\n36adb82c251d LLVMProcessSources.cmake: Improve PARTIAL_SOURCES_INTENDED.\n19128792e2aa Reland \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\nfebe740b2c8f [test] Remove occurences of br undef in Transform/Util tests [NFC]\n069dd8768a6a Revert \"[C++20] [Modules] [ClangScanDeps] Add ClangScanDeps support for C++20 Named Modules in P1689 format (2/4)\"\nf8b5003cb3f9 Revert \"[C++20] [Modules] [ClangScanDeps] Allow clang-scan-deps to without specified compilation database in P1689 (3/4)\"\n502e357dc77c Revert \"[ClangScanDeps] Add UNSUPPORTED: system-windows to test P1689.cppm\"\n08f31b8fa85c [docs] Make consistent between MLIR tutorial doc and example code\nc9a7b92a23bb [AArch64] Consider tiny code model in emitLoadFromConstantPool.\n6a75aec09098 [Clang][perf-training] Remove trailing whitespace in perf-helper\ndf3b703a4c17 [AArch64] Use llvm::countr_{zero,one} (NFC)\n6d90c590b7f5 [JITLink] Don't initialize local ArrayRefs with initializer lists.\nc8ad1de4f068 [RISCV] Remove dead code from RISCVDAGToDAGISel::selectVSETVLI. NFC\n4afb1ee7bc0e Specify target triple for bb-prefix-dump.ll\n86cbf3d5f8a2 [JITLink] Add explicit conversion to silence warnings / errors on bots.\n01d68b13f52d [libcxx][ranges] mark new join view tests unsupported without experimental flag\n7e772e12d10e [RISCV] Fix mistake in comment. NFC\n10b5fec25638 [JITLink][ORC] Add LinkGraph::allocateCString method.\na38a4654ce4b [libc++] fix `shared_ptr`'s incorrect constraints\n23cb32c6d5bd [X86] combineX86ShufflesRecursively - treat ISD::TRUNCATE as faux shuffle\nd05f889535ab [libc++] Enable radability-identifier-naming for local variables and fix any problems\ncc236b64d11d [gn build] Port 3d4e9d5eb0f7\n9eccc6cce07b [JITLink] Add a predicate to test for C-string blocks.\n3d4e9d5eb0f7 [ORC] Move ORC-specific object format details into OrcShared.\nf00d101b8e32 llvm/utils/TableGen/CodeGenIntrinsics.h: Fix a comment line (since 2006!)\nda876a157d79 [libc++][NFC] Reorganize the std::pair constructor tests to be more consistently named\n2e08e431cc18 LLVMTableGenGlobalISel: Provide `INTERFACE_INCLUDE_DIRECTORIES`\n4537bda929bd [libc++][NFC] Change some std::pair tests from .compile.fail.cpp to .verify.cpp\naaef3b82f4f0 [libc++] Remove _LIBCPP_CONSTEVAL\ne3eb61a8cd61 [libc++][NFC] Fix leftover #endif comments\nb48880f39f96 [libc++][NFC] Use using instead of typedef in pair.h\nab17e1b76cf7 [libc++][NFC] Always define __non_trivially_copyable_base in pair.h\na98936d5a698 [libc++][NFC] Use std:: instead of _VSTD:: in pair.h\n9994340a49ba [libc++][NFC] Use >= 23 instead of > 20 in pair.h\n1d6117c8c4d2 [libc++][NFC] Use std:: instead of _VSTD:: in construct_at.h\nf543614ce641 [libc] Update dependency for __support_fputil_nearest_integer in bazel overlay.\n4c2ad195f8c9 [libc++][ranges] move all range iterators back in class\n3b059cd25b8c [libcxx][ranges] revert join_view::iterator and sentinel to be in-class\nc586b81347cb [X86][Win64] Precommit test for D143812\na55b35dbee6d [X86] combineVectorInsert - pull out Vec/Scl/Idx operands. NFC.\n0b0a38a7a229 [X86] combineX86ShufflesRecursively - don't widen shuffle subvector inputs\n5dc34eb379f4 Reland \"[mlir][func] Use the generated pass options in func to llvm.\"\n5ba396011377 [MLGO] Disable BB Profile Dump Test on NVPTX\n09e0f48c0a40 [MLGO] Enable BB Profile Dump Test without TFLite\n39da46826da8 Revert \"[mlir][func] Use the generated pass options in func to llvm.\"\n771d9c05afc2 [mlir][func] Use the generated pass options in func to llvm.\n19c42f672f94 [DFAPacketizer] Move DefaultVLIWScheduler class declaration to header file\n5fc73b7502fb [clang] Add test for CWG1111\n22fb66eb94b6 [clang][NFC] Add another example to CWG952 test\n89ba737bcf34 [clang] Mark CWG2165 as N/A\n5eaaf8f18093 Revert \"[clang] Mark CWG2165 as N/A\"\nd0e24f0c97ec [clang] Mark CWG2165 as N/A\n4663d784ddee [libc] Update macros/optimization.h build dependency for CMake and Bazel.\na630b8eefb41 [libc][Obvious] Fix static method declarations for FEnv class on macOS.\ne9e43e31d3bd [libc] Fix the regex detecting architecture triplet for macOS.\nd8e9a1a12557 [CMake] Use `LLVM_ENABLE_ASSERTIONS` to enable assertions in `libc++`\n29fa21eb6129 [lldb] Fix passing None as an env variable in TestMultipleDebuggers\n294ca122956f Adapt TestCustomShell and TestMultipleDebuggers to run under ASAN\n0ac8dfd0587a [lldb] Add an SB API to get progress events as SBStructuredData\ndc6427d687c4 [mlir][sparse] implement lowering rules for sparse_tensor::unpack\n6dbca86d838c [mlir][sparse] introduce sparse_tensor::unpack operation\ne74bb3471fc4 [libc++] Remove unused std::function test\ne7ade78a8ceb [dfsan] Fix some build-libc-list.py lint issues\n9db037d542d9 [mlir][sparse] fixed pack op documentation and purity\ndac423bd5718 [SanitizerBinaryMetadata] Fix ignorelist test with -Assert\ne8a79dc3d8eb [flang] Do not print backtrace for most TODOs.\nd2cc2c5610ff Revert \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\nc46e15e1dec9 Revert \"[lldb][Test] TestExternalCtorDtorLookup.py: skip on Windows and dwo\"\n2979070f1b3a [libc++] Simplify non_default_alloc\n043550e33509 [Driver] Stop stack use after free\n9e57a5739d8b [bazel] Fix {clang,llvm}/unittests\n0751fc68b976 [libunwind] On Darwin, add a callback-based lookup scheme for JIT'd unwind info.\n89197b59f597 [openmp] Fix building z_Linux_asm.S for armv5t\n3de0bc4c3d02 [MLIR] Reintroduce shared attribute names in the LLVM dialect\ndb89896bbbd2 [InstCombine] Add tests for D143766. NFC\n811d11b064f7 [AMDGPU] Add GFX11 HW_REG_PERF_SNAPSHOT_*\na2dcd994a7f8 [mlir][tosa] Add TOSA f64 type support for cast op\ncd4ca2d7f991 [mlir] Port Conversion Passes to LLVM to use TableGen generated constructors and options\n3e57aa304f15 [llvm-driver] Reinvoke clang as described by llvm driver extra args\n1f173a0653e7 [llvm-driver] Pass extra arguments to tools\n34653a0a8a40 [Propeller] Change SHT_LLVM_BB_ADDR_MAP version to 2.\n8e13ec9eca1f [libc++] In tests, use `abort` to terminate upon an error.\n7ca3444fba73 AMDGPU: Use module flag to get code object version at IR level folow-up\n70acb3aab3a1 A slightly more concise AST dump :)\n83e84cdbe4bc [InstCombine] precommit tests for D143593\n81d0d2b2a068 [mlir][sparse] Sparse reduction in lex order no longer produces dense output\nae2d8b49713d [libc][math] Update exceptional cases for logf, log10f, log2f, log1pf.\n35188e02d1f2 [dfsan] Fix build-libc-list.py for Python 3 after D143701\na543d840ee0a Fix handling of -> calls for modernize-use-emplace\nf889d6f9d05b [lldb][Test] TestExternalCtorDtorLookup.py: skip on Windows and dwo\nc8b8d6baddf9 [Passes] Remove some legacy passes\n3a66446a9a0d [libc] add standalone strtoint/float fuzzers\n79a3803bb2cc [ClangScanDeps] Add UNSUPPORTED: system-windows to test P1689.cppm\ne7e577f68421 [clang-tidy] Clarify documention of `bugprone-unchecked-optional-access`.\n295f5fafcb55 [Assignment Tracking] Fix migrateDebuginfo in SROA\nc52255d26a23 [AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\nd37a31cf237c [X86] Attempt to fix ubsan failure.\n185dbf9d6f00 [bazel] Port 81a79ee446\n1763c632544d [Attributor][NFCI] Use a set to track dependences\n86cce90e21c5 [Attributor][NFCI] Avoid AAIntraFnReachability updates if possible\na9557aacd1a9 [Attributor][NFCI] Use queries without exclusion set whenever possible\n294db31be748 [Attributor][FIX] Ensure we use the right set comparison\n76a19190269b [Attributor][NFC] Avoid unnecessary string operations\nbf9964fb138f [Attributor][NFCI] Create a AAIsDead for the function eagerly\n8bc0bee2f8ca [Attributor][NFCI] Avoid a temporary vector and exit early\n91e38bc76010 [libc++][NFC] Reorganize hash.h\nb296ddd91cb8 [lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\nb8ef007fca1d Reland \"[llvm][dsymutil] Add DW_TAG_imported_declaration to accelerator table\"\n9497680067cc [ConstraintElim] Update getLastConstraint to return to last row. (NFC)\nff8742df9e65 [flang] Fixed selective TargetRewrite.\n81767f52f493 [mlir][OpenMP] Add support for using Opaque Pointers in the OpenMP Dialect\n2ca46421f85a [mlir][Async] Add option to LLVM lowering to use opaque pointers\n7da2d644e039 [clang] [extract-api] Don't crash for category in libclang APIs\n57606bb35619 [ConstraintElim] Improve debug test to show removed constraints (NFC).\n81a79ee446fe [mlir] Add function for checking if a block is inside a loop\naf39acda8873 [VectorCombine] fix insertion point of shuffles\n78f13ea093af [extract_symbols.py] Adjust how the output of nm is interpreted\na00f17d81efb [clang][dataflow] Convert nonnull pointer parameter to a reference.\nb87e53ee2ad1 Revert \"[mlgo] Fix test after D143624\"\n737e1cd161f3 [libc] Move likely/unlikely to the optimization header\n78056e2f2d95 [InstCombine] propagate FMF in exp2->ldexp fold\n3abea2b5447c [InstCombine] copy tail markings in exp2->ldexp fold\ne89180801cd2 [InstCombine] add 'tail' to exp2 call in test; NFC\n86bfeb906e3a Revert \"Inlining: Run the legacy AlwaysInliner before the regular inliner.\"\nc4a250ecea14 [AMDGPU][MC] Generate relative relocations for allocatable (more particularly, eh_frame) sections\nf1837c707478 [DebugInfo] Handle missed DW_FORM_addrx3 and DW_FORM_strx3 cases\n04f4c4cc59db [clangd] Move function body to out-of-line: unnamed class method incorrect moving\nfef08da4b75f [mlir][llvm] Store memory op metadata using op attributes.\n067a5c68845c [amdgpu-arch] Fix build of amdgpu-arch with CLANG_LINK_CLANG_DYLIB\nb252824e6e6e [clangd] fix wrong CalleeArgInfo in the hover\n08061a5f1db6 [gn build] Port 6470706bc0ed\na3060f0f37e3 [X86] combineConcatVectorOps - concatenate AVX512 vselect nodes. NFC.\n4a96893fc5ca [libc] Fix exp2f and prevent misuse of likely/unlikely\n065a8cf00812 [gn] port 6470706bc0e\n25d0f3c4d0d9 [Assignment Tracking] Fix fragment index error in getDerefOffsetInBytes\n4d7c879d33a2 [mlir][llvm] Adapt loop metadata to match llvm\n8470430107d0 [NFC][compiler-rt] Shorten comment\n1e658ad1728e [Workflow] Add Release Repo sync script\n8ccde9368f94 [CMake][compiler-rt] Support clang-cl in CompilerRTMockLLVMCMakeConfig\nb3477f579c86 [RISCV] Add tests for .attribute stack_align\n9dcd7195a21c [InstCombine] avoid crashing in pow->ldexp\n5cec69bb43bc [clang] Update Clang version from 16 to 17 in scan-build.1.\n62a0a1b9eea7 [InstCombine] avoid crashing in exp2->ldexp\nc2b7085d5c86 [InstCombine] add test for exp2->ldexp; NFC\n55c0719557a9 [InstCombine] auto-generate check lines in test file; NFC\nc4ce967e3437 ARM: skip debug instructions when matching jump-table patterns.\ndc700f1e4daf [mlir][bufferization] Restrict function boundary buffer. to func.call.\n1842b5885baa [bazel] Fix build and make all target respect layering_check\nd624b9217d35 [RISCV] Add precommit tests for D143646\nf0f8ae7596c4 [AMDGPU][AsmParser] Fix matching immediate literals.\n68adc028b42d [InstCombine][NFC] regenerate tests for simple_phi_condition.ll\nce2514a6dea7 [Test] Add complementary tests for OR analogous for those for AND\n393675dad0c0 [Test] Add test showing an opportunity to transform checks and hoist invariants\nbb8bd8c232e8 [SanitizerBinaryMetadata] Fix ignorelist test under Windows\nbaca3c150733 Move SIMD alignment calculation to LLVM Frontend\nc77c186a647b [LVI] Don't traverse uses when calculating range at use\n0737770c3e1d [LVI][CVP] Add test for miscompilation by CVP due to incorrect range returned by LVI\nd768bf994f50 [NFC][TargetParser] Replace uses of llvm/Support/Host.h\n4ad8f7a18957 [Assignment Tracking][mem2reg] Remove overly defensive assert\nbb059e85d61b [Assignment Tracking][SROA] Delete dbg.assigns linked to rewritten stores\n65f9719913ec Revert \"[C++20] [Modules] [ClangScanDeps] Enable to print make-style dependency file within P1689 format (4/4)\"\na674a12dd57e [WebAssembly] Additional patterns for pmin/pax\n9ec06f40d66e [flang][NFC] Clean up polymorphic-temp.f90\n421215b919d0 [SanitizerBinaryMetadata] Support ignore list\nc340956e4efc [NFC][Assignment Tracking] Remove lifetime intrinsics from some tests\nfaf029d9728f [Test][SCEV] Add tests where multiple assumes can be used to improve trip multiple\n09c52a49402c [bazel] Add missing dependency after 687f78210d0\n57edc61093d9 [NFC] convert compiler-rt/lib/dfsan/scripts/build-libc-list.py to python3 syntax\nb67b26acc2ab [libc][Obvious] Include MPFRWrapper and testutils only if tests are enabled.\n6eb13809fb6f [bazel] fix build for 6470706bc0ed\n14dedd9cf596 [Reland][LSR] Hoist IVInc to loop header if its all uses are in the loop header\nd9283e79d826 [libc] Run libc tests unconditionally, even if there are no source changes.\n2441c0730603 [mlir][bufferization] Support multiple leaves in EmptyTensorElimination\nf4ef08433fe7 [OPENMP][NFC] added loop bind to the support page\n79d2c26f89e1 [SimplifyIndVar][NFC] Refactor Binary Operator's flag strengthening\n288f688e294a [NFC] Add test to show that preprocess an import decl won't require to load it actually\n687f78210d07 [MLIR] Fold away divs and mods in affine ops with operand info\ndd380f9243de [NFC] Remove the unused parameter introduced in e135476\n92e904b9ce2d [flang][hlfir] Ramp-up support of implicit interface mismatches\nfc2c791e89cd [mlir][llvm] Fix TBAA verfication crash\n70924673af68 [RFC][GISel] Add a way to ignore COPY instructions in InstructionSelector\nd9a6fc82f56f [AMDGPU] Run unmerge …",
        "tree": {
          "url": "https://api.github.com/repos/mocusez/mlir-learn/git/trees/6673480f178c18dcc743b1f61183a8eead4724a8",
          "sha": "6673480f178c18dcc743b1f61183a8eead4724a8"
        },
        "comment_count": 0
      },
      "author": {
        "login": "Lewuathe",
        "id": 1713047,
        "node_id": "MDQ6VXNlcjE3MTMwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1713047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lewuathe",
        "html_url": "https://github.com/Lewuathe",
        "followers_url": "https://api.github.com/users/Lewuathe/followers",
        "following_url": "https://api.github.com/users/Lewuathe/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lewuathe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lewuathe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lewuathe/subscriptions",
        "organizations_url": "https://api.github.com/users/Lewuathe/orgs",
        "repos_url": "https://api.github.com/users/Lewuathe/repos",
        "events_url": "https://api.github.com/users/Lewuathe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lewuathe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "Lewuathe",
        "id": 1713047,
        "node_id": "MDQ6VXNlcjE3MTMwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1713047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lewuathe",
        "html_url": "https://github.com/Lewuathe",
        "followers_url": "https://api.github.com/users/Lewuathe/followers",
        "following_url": "https://api.github.com/users/Lewuathe/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lewuathe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lewuathe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lewuathe/subscriptions",
        "organizations_url": "https://api.github.com/users/Lewuathe/orgs",
        "repos_url": "https://api.github.com/users/Lewuathe/repos",
        "events_url": "https://api.github.com/users/Lewuathe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lewuathe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/mocusez/mlir-learn/commits/59575d47b7b987c0f248b164547278a82ed0b456",
          "html_url": "https://github.com/mocusez/mlir-learn/commit/59575d47b7b987c0f248b164547278a82ed0b456",
          "sha": "59575d47b7b987c0f248b164547278a82ed0b456"
        }
      ],
      "repository": {
        "id": 911442056,
        "node_id": "R_kgDONlOAiA",
        "name": "mlir-learn",
        "full_name": "mocusez/mlir-learn",
        "private": false,
        "owner": {
          "login": "mocusez",
          "id": 57286919,
          "node_id": "MDQ6VXNlcjU3Mjg2OTE5",
          "avatar_url": "https://avatars.githubusercontent.com/u/57286919?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mocusez",
          "html_url": "https://github.com/mocusez",
          "followers_url": "https://api.github.com/users/mocusez/followers",
          "following_url": "https://api.github.com/users/mocusez/following{/other_user}",
          "gists_url": "https://api.github.com/users/mocusez/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mocusez/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mocusez/subscriptions",
          "organizations_url": "https://api.github.com/users/mocusez/orgs",
          "repos_url": "https://api.github.com/users/mocusez/repos",
          "events_url": "https://api.github.com/users/mocusez/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mocusez/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/mocusez/mlir-learn",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/mocusez/mlir-learn",
        "forks_url": "https://api.github.com/repos/mocusez/mlir-learn/forks",
        "keys_url": "https://api.github.com/repos/mocusez/mlir-learn/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/mocusez/mlir-learn/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/mocusez/mlir-learn/teams",
        "hooks_url": "https://api.github.com/repos/mocusez/mlir-learn/hooks",
        "issue_events_url": "https://api.github.com/repos/mocusez/mlir-learn/issues/events{/number}",
        "events_url": "https://api.github.com/repos/mocusez/mlir-learn/events",
        "assignees_url": "https://api.github.com/repos/mocusez/mlir-learn/assignees{/user}",
        "branches_url": "https://api.github.com/repos/mocusez/mlir-learn/branches{/branch}",
        "tags_url": "https://api.github.com/repos/mocusez/mlir-learn/tags",
        "blobs_url": "https://api.github.com/repos/mocusez/mlir-learn/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/mocusez/mlir-learn/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/mocusez/mlir-learn/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/mocusez/mlir-learn/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/mocusez/mlir-learn/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/mocusez/mlir-learn/languages",
        "stargazers_url": "https://api.github.com/repos/mocusez/mlir-learn/stargazers",
        "contributors_url": "https://api.github.com/repos/mocusez/mlir-learn/contributors",
        "subscribers_url": "https://api.github.com/repos/mocusez/mlir-learn/subscribers",
        "subscription_url": "https://api.github.com/repos/mocusez/mlir-learn/subscription",
        "commits_url": "https://api.github.com/repos/mocusez/mlir-learn/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/mocusez/mlir-learn/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/mocusez/mlir-learn/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/mocusez/mlir-learn/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/mocusez/mlir-learn/contents/{+path}",
        "compare_url": "https://api.github.com/repos/mocusez/mlir-learn/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/mocusez/mlir-learn/merges",
        "archive_url": "https://api.github.com/repos/mocusez/mlir-learn/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/mocusez/mlir-learn/downloads",
        "issues_url": "https://api.github.com/repos/mocusez/mlir-learn/issues{/number}",
        "pulls_url": "https://api.github.com/repos/mocusez/mlir-learn/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/mocusez/mlir-learn/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/mocusez/mlir-learn/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/mocusez/mlir-learn/labels{/name}",
        "releases_url": "https://api.github.com/repos/mocusez/mlir-learn/releases{/id}",
        "deployments_url": "https://api.github.com/repos/mocusez/mlir-learn/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/Jahnav4977/mlir-mx/commits/5f63028555f11989b78d61371cb851f56e9779f3",
      "sha": "5f63028555f11989b78d61371cb851f56e9779f3",
      "node_id": "MDY6Q29tbWl0ODMzNDM1NzM2OjVmNjMwMjg1NTVmMTE5ODliNzhkNjEzNzFjYjg1MWY1NmU5Nzc5ZjM=",
      "html_url": "https://github.com/Jahnav4977/mlir-mx/commit/5f63028555f11989b78d61371cb851f56e9779f3",
      "comments_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/commits/5f63028555f11989b78d61371cb851f56e9779f3/comments",
      "commit": {
        "url": "https://api.github.com/repos/Jahnav4977/mlir-mx/git/commits/5f63028555f11989b78d61371cb851f56e9779f3",
        "author": {
          "date": "2023-02-18T10:57:51.000+09:00",
          "name": "Kai Sasaki",
          "email": "lewuathe@gmail.com"
        },
        "committer": {
          "date": "2023-02-18T10:57:51.000+09:00",
          "name": "Kai Sasaki",
          "email": "lewuathe@gmail.com"
        },
        "message": "Squashed 'thirdparty/llvm-project/' changes from 23c1822d1a74..63c77bf71d80\n\n63c77bf71d80 [lldb] Make persisting result variables configurable\n920b46e108b2 [lldb] Add expression command options in dwim-print\ne49b93ef29a6 [gn build] Port 07e3ca238e68\n07e3ca238e68 Revert \"[TextAPI] Implement TBDv5 Reader\"\n4be17641b05d [TextAPI] wrap returned Errors in std::move\n347954314c97 [gn build] Port b861b1225380\nb861b1225380 [TextAPI] Implement TBDv5 Reader\nb309bc04eebc [GlobalISel] Combine out-of-range shifts to undef.\nd6d59e660bc7 [Clang] Fix __VA_OPT__ implementation so that it treats the concatenation of a non-placemaker token and placemaker token as a non-placemaker token\n34aff47521c3 [RISCV] Use MCSubtargetInfo::hasFeature where possible. NFC\nd9e4c1044072 [AArch64] Simplify with MCSubtargetInfo::hasFeature. NFC\nc0f3ac1d0015 Revert \"[Fuchsia] Enable llvm-driver build\"\nb1e09b5fa679 [libc++][NFC] Remove TODOs that are already done\n8007bcc13f8f [llvm-cov] Create syntax to pass source w/o binary.\n4eadd19cc423 [Fuchsia] Enable llvm-driver build\nef3a3b0726f4 [libc++][NFC] Replace _VSTD and _LIBCPP_INLINE_VISIBILITY in <__atomic/*>\n10b7cd660c73 [RISCV] Select signed and unsigned bitfield extracts for XTHeadBb\n2f88c07cf820 [lldb] StructuredData should not truncate uint64_t values\n8caa8d95afe4 [libc++][format] Addresses LWG3810.\n01afb3fb9902 [NVPTX] Use by default 'sm_60' architecture when expanding %ptxas-verify macro.\nf50cad2c55df [libc++] Mark a test relying on `typeid` as unsupported without RTTI.\nf6b724f1f9c8 [libc] Add basic fuzz target for the printf parser\n47fb6d1c65ec [libc] add mock arg list\n5fa9933c13e7 [mlir][tensor] Do not use affine ops on non-perfect-tiling unpack cases.\n2b2b8409e684 [RISCV] For rv32, accept constants like 0xfffff800 as a valid simm12.\nefe7c4b77bed Revert \"[RISCV] Add performMULcombine to perform strength-reduction\"\n16a66af0a0fe Revert \"[RISCV] Add vendor-defined XTheadMemPair (two-GPR Memory Operations) extension\"\n6774ba841145 [RISCV] xtheadmac: fix commutativity issue for the in/out register\n20cc23c708f0 [RISCV] Add performMULcombine to perform strength-reduction\nd2918544a7fc [RISCV] Add vendor-defined XTheadMemPair (two-GPR Memory Operations) extension\n21a543656cf4 [libc++] Add missing include in <__atomic/cxx_atomic_impl.h>\ndf56b55e1288 [RISCV][CodeGen] Add codegen patterns for experimental zfa extension (try 2)\n04d59f2ab3a8 [IR] Fix a warning\nf25cfd339a80 [mlir] Reintroduce API for creating operations with a DictionaryAttr\nbe83a4b257c8 [ADT] Fix tests for `StringMap::at` and `DenseMap::at`\n42944abf8583 [RISCV] Improve isInterleaveShuffle to handle interleaving the high half and low half of the same source.\nbc6e10c9efca [ELF][llvm-objcopy] Reject duplicate SHT_SYMTAB sections\n998ad085e865 Reland [gn build] Support linux/win compiler-rt cross compilation\n7a035de2d6c4 Revert \"[gn build] Support linux/win compiler-rt cross compilation\"\n2d85683f987a [lib++][format] Uses the new exception test macros.\nc0947dc44109 [RISCV][MC] Add support for experimental zfa extension (FLI instruction not included) (try 3)\nd73eb92cc673 [gn build] Support linux/win compiler-rt cross compilation\ncf86855c4453 [M68k] fix test regression introduced by D140180\n261d21f8c375 [libc++] Fixes a flaky test.\nc8399811e7b1 [gn build] Support building x86/64 Android libraries\n1ceb79e2e075 Port PlaceSafepoints pass to the new pass manager\n4180b29d206f [flang][runtime] Support DT edit descriptor in result of READ(SIZE=)\n7067aee367d4 [libc++][CI] Switches to clang-format-16.\nf7f86451ecd7 [libc++] Improve the format ignorelist generation.\n22b564c64b73 [RISCV] Add preferred function and loop alignment RISCVSubtarget. NFC\nb22aa3d74f27 [libc++][NFC] Rename _LIBCPP_NO_EXCEPTIONS to _LIBCPP_HAS_NO_EXCEPTIONS\n132003603ae3 [ADT] Add `at` method (assertive lookup) to DenseMap and StringMap\n2b51c8cd2ac6 [clang-tidy] Clarify bugprone-branch-clone diagnostic message\ndf82394e7a2d [libc][bazel] Export .bzl files for libc/test and libc/test/src/math.\n3476b56f0c78 [libc++][test] Adds more generic test macros.\n783cbf70abca [gn build] Port bf0f94a5cf82\nddeb55ab3359 [mlir] add option to multi-buffering\n4ecc6af813e2 [InstCombine] create a pass options container and add \"use-loop-info\" argument\ne03d254bbd54 [SLP]Do not reduce repeated values, use scalar red ops instead.\nbf0f94a5cf82 New SetOperations and unittesting for all SetOperations\n17a90f1196c1 Tighten up a modules test\n87a0479538fe [mlir][llvm] Fuse access_group & loop export (NFC)\ncf4df6168838 [SVE] Add intrinsics for floating-point operations that explicitly undefine the result for inactive lanes.\n83e9ef7e519a [mlir][standalone] Extend sample with custom type\naf6c0b6d8c9d [clang][CodeGen] Use base subobject type layout for potentially-overlapping fields\n4bf6cc63aa77 GH60642: Fix ICE when checking a lambda defined in a concept definition\n06621ecdaf41 [Clang] Convert some tests to opaque pointers (NFC)\nf098fb69f164 [Clang] Convert some tests to opaque pointers (NFC)\n4901245481b6 Fix Clang sphinx build\n6f3a756998b3 [RISCV][NFC] Add missing immediate operand types.\ne133cb9c6daf [mlir][llvm] Add DINamespace attribute\n276358fd3af5 [mlir][llvm] Make DI param optional to match LLVM\n76c638d1ddec [gn build] Port 46db8d822ecd\n46db8d822ecd [libc++] Granularize <atomic>\n62e4f81c6793 [AMDGPU] Simplify widenScalar condition for BigTy for G_(UN)MERGE_VALUES\nf3fa1086c7f8 [Clang] Convert some tests to opaque pointers (NFC)\nafcf70aa6de7 [analyzer] Remove unjustified assert from EquivalenceClass::simplify\n40a20ae6ab80 [libc++] Granularize <bit> includes\n2693efa8a5bc [MachineCombiner] Support local strategy for traces\ne6e0ba8d20b4 [Clang] Convert some tests to opaque pointers (NFC)\ncdf8f064694c [mlir] Add a folder for lbs, ubs, steps of scf.forall.\neb14186771e7 Revert \"[LLD] [COFF] Don't try to detect MSVC installations in mingw mode\"\nbf91cd6ea9d6 [mlir][llvm] Verify LLVM module before import\nda3623de2411 [JT] Always create BPI/BFI when running in legacy PM\n159073bc0a87 [clang-repl] Support compound statement as a top-level statement.\neb2f946e780c [mlir][scf] Rename ForeachThreadOp->ForallOp, PerformConcurrentlyOp->InParallelOp.\n65898e526060 [ConstantRange] Handle `Intrinsic::ctlz`\na1e80c69223a [Support] [Windows] Don't check file access time in equivalent(file_status, file_status)\n389bfbd66d6f [LLD] [COFF] Don't try to detect MSVC installations in mingw mode\n3d84f4268dd9 [Clang] Convert some tests to opaque pointers (NFC)\n6f4af64b7422 [mlir][llvm] Add atomic support to the LoadOp.\n55a18bfe9b65 [Clang] Convert some tests to opaque pointers (NFC)\n58dada5f0aad [AMDGPU] Add cross-project-tests for WMMA builtins\na048d7394be5 [MLIR][LLVM] Only disallow inlining for selected function attributes.\n57c81917d3a5 [Clang] Convert update_cc_test_checks tests to opaque pointers (NFC)\na96cbeb45062 [DAGCombiner] Teach MatchContextClass classes to use TargetLowering::isOperationLegalOrCustom().\n310deca248c8 [mlir] Add loop bounds to scf.foreach_thread.\n6d5ea6b12342 Revert \"[Coroutines] Stop supportting std::experimental::coroutine_traits\"\nc4e6e771f255 [Coroutines] Stop supportting std::experimental::coroutine_traits\nf2404a58b0b4 [NDF] Revert earlier nfc commit to test commit access\n511d55060454 [NFC] Testing new commit access by adding newline\ne0528382b570 [lldb] Add missing decorators import in TestPoPersistentResult.py\n5552c4ddd76d [lldb] Limit TestPoPersistentResult to darwin\n3328ee550c86 [lldb] Suppress persistent result when running po\nb3215c810617 [lldb] Rename SetResultIsInternal to SetSuppressPersistentResult (NFC)\n39811e2e537d [llvm][test] enable/disable -verify-machineinstrs where possible for callbr\nb05dc1b8766a [clang-format] Add a space between an overloaded operator and '>'\n7c9df7743521 [ADT] Provide C++20-style bit functions\n93de5f13b9dd [CodeGen] Fix warnings\n0eabb884abeb [mlir][gpu] NFC let user pick the threadID values when distributing foreach_thread\ne3a88a41af83 Revert \"[mlir][vector] Prevent duplicating operations during vector distribute\"\ncda4a0e918b5 [Sema] Relax a failing assertion in TransformBlockExpr\n25a461046ec2 OpenMP: Regenerate test checks\n77af16bcb78a Recommit \"Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\" (2nd Try)\n9e9444ca7d4b Recommit \"Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\" (2nd Try)\nffe982f96bff [lldb] Stop generating swig bindings for SBLaunchInfo copy constructor\n8045ba89488c [ThinLTO/WPD] Handle function alias in vtable correctly\n54186d33c3a0 [clang] add __has_extension(gnu_asm_goto_with_outputs_full)\naf6656338db3 [clang] fix -Wuninitialized for asm goto outputs on indirect edges.\n329ef60f3e21 [Clang] support for outputs along indirect edges of asm goto\nb1bc723dfe97 [Clang] refactor CodeGenFunction::EmitAsmStmt NFC\na3a84c9e2511 [llvm] add CallBrPrepare pass to pipelines\n5cc1016a57b3 [llvm][SelectionDAGBuilder] codegen callbr.landingpad intrinsic\n28d45c843cd0 [llvm][CallBrPrepare] use SSAUpdater to use intrinsic value\n094190c2f529 [llvm][CallBrPrepare] add llvm.callbr.landingpad intrinsic\n0a39af0eb72d [llvm][CallBrPrepare] split critical edges\nfb471158aa0d [llvm] boilerplate for new callbrprepare codegen IR pass\n45a291b5f609 [Dominators] check indirect branches of callbr\ndf277ec67efd [X86][MC] Fix the bug of -output-asm-variant=1 for intel syntax\n7495a2e51bff [Attributor][FIX] Ensure we adjust types properly\n58bedaed0fea [LLDB] Remove unused variable 'lang_rt' in ClangExpressionParser.cpp (NFC)\n2738dc0bd3b7 [ComplexLogicCombine] Precommit tests for complex logic combine init patch; NFC\n8116fc592c5e Revert \"[LLDB] Enable 64 bit debug/type offset\"\nf253bb640d97 [WebAssembly] Fix simd bit shift intrinsics codegen\ne073de833671 [WebAssembly] Update wasm.c with update_cc_test_checks.py. NFC\ne6758c81f867 [mlir][sparse] comment out test cases in sparse_conversion with similiar behavior.\n65277494f04d [flang][runtime] Allow record advancement in child I/O via '/' control edit descriptor\n52a774fd4c18 [PowerPC] remove XXSWAPD after load from CP which is a splat value\nfb7c38073e80 [AArch64][ISel] Always use pre-inc/post-inc addressing mode for auto-indexed load/store with constant offset.\n0af5f84a13be [mlir][sparse] split reshape.mlir into expand/collapse_shape.mlir.\n22cdeb54a123 [MLIR][OpenMP] Add Conversion for Atomic Update Op\nb374423304a8 [Pipeline] Move ControlHeightReduction to module optimization pipeline\n9e8d9316ceaf [mlir][sparse] allow foreach operation to generate out-of-order loop on non-annotated tensor.\n2062e90aa531 [LLDB] Enable 64 bit debug/type offset\nb66fdbad44b3 [gn build] Manually port D143983\n956c7dca29c7 [Object][NFC] Remove unneeded llvm_unreachable\n56e41fcf5028 [PowerPC] Bail out of FISel when lowering long calls\nc2e248c6aea6 [mlir][sparse] Remove the expansion of symmetric MTX in the sparse tensor storage.\n5172877bbddc [Libomptarget] Check errors when synchronizing the async queue\n48c8e1602048 Revert \"[Libomptarget] Check errors when synchronizing the async queue\"\n53862b5658dd RenderScript still exists as a clang language, so handle as invalid\nf83e6c6d7a8d [Bazel][mlir] Fix build errors\nf5cca3c5ce7a [flang] Handle expression in SELECT TYPE selector\nb8d3d02d7c8c Remove now unused enum.\n5f5cf6029852 [Pipeline] Remove -enable-npm-O3-nontrivial-unswitch flag\n4d16ebd6c971 [Pipeline] Remove -enable-no-rerun-simplification-pipeline flag\ndccd1d736c25 [libc][bazel] add string to float targets\n662548c82683 [lldb] Replace SB swig interfaces with API headers\n23d43e697757 [libc++] Add regression test for std::hash implementation in ABI v1\nc6c41c31f1e5 [mlir][linalg][tensor] Delete duplicate tests and fix typo in filename\n17e2497593d6 Remove Renderscript LLDB\n22e199e6afb1 [RISCV] Accept zicsr and zifencei command line options\n372820bf571c [libunwind][PowerPC] Fix saving/restoring VSX registers on LE systems\nfbe210dc7a6a [libc] Implement htonl and htons\n35742743d273 [Hexagon] Fix number of arguments in call to DAG.getNode for VINSERTW0\nf842b7a6b8f4 [HLSL] add log library functions\n891b0910b3c4 Revert \"[RISCV][MC] Add support for experimental zfa extension (FLI instruction not included)\"\n8a17cd9905c2 AMDGPU: Add a regression test case for D143963\n8e5a41e8271f Revert \"AMDGPU: Override getNegatedExpression constant handling\"\nbbef38352fba Revert \"[LowerTypeTests] Support generating Armv6-M jump tables.\"\n9305b63d6951 [AMDGPU] Add another G_UNMERGE_VALUES legalization test case\nd9a04d1d5453 [libc] Support running tests for Pigweed\n2ac85cd56381 [AMDGPU] Regenerate check lines to enable updating for D144050.\n0871337d97f7 [XCore] Adapt Clang tests to opaque pointers.\n7ed26ad10cef [flang] Always incorporate parent types' special generic bindings\n1538761303ce [LSR] Add test case which shows additional LSR with D144050.\n861709107b43 [Libomptarget] Check errors when synchronizing the async queue\nf6fa5a66d8a8 [RISCV][MC] Add support for experimental zfa extension (FLI instruction not included)\neb3dfa0a2487 [Clang] Convert some tests to opaque pointers (NFC)\n081815b4e32c [Clang] Regenerate check lines (NFC)\n2d6713b5b7a2 Revert \"[RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\"\n80334ca1e285 Revert \"Update: [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\"\n80abf86d506b Revert \"[RISCV][CodeGen] Add codegen pattern for experimental zfa extension (FLI and FCVTMOD not included)\"\n7abe3497e72a [LSR] Improve filtered uses in NarrowSearchSpaceByPickingWinnerRegs\na768112e0641 [Clang] Convert some tests to opaque pointers (NFC)\nf6ddf7781471 [LowerTypeTests] Support generating Armv6-M jump tables.\nafde3f549d7a llvm-tblgen: Apply IWYU partially\n3a6f3b44e434 [flang] lower hlfir.matmul into fir runtime call\n91cbc3f2d83d [flang] lower matmul intrinsic to hlfir.matmul operation\n09472ba31504 [flang] add hlfir.matmul operation\nec640382fc93 [mlir][MemRef] NFC - Add debug information to MultiBuffer.cpp\ne44f405bb41b [mlir][bufferization] Fix bug in findValueInReverseUseDefChain\n4565bc00de6e [DataLayout] Use separate vectors to store alignment (NFC)\nace6072bca65 [mlir] PromoteBuffersToStackPass - Copy attributes of original AllocOp\n28542e99bb82 [mlir][llvm] Use before def debug intrinsic import\n8421307b6b16 [Clang] Convert some tests to opaque pointers (NFC)\nb32b7068ef8e [ConstraintSystem] Use sparse representation for constraints. (NFC)\n66749ce92707 [ARM] Add Thumb LSR codegen tests. NFC\na9e4bb387b21 [flang][hlfir] Array constructor lowering [part 2/4]\nffde9f17300b [flang][hlfir] Array constructor lowering [part 1/4]\n849c4402261a [Flang][OpenMP] Added parser support for device_type clause\n5c988cba4a66 [flang] Use derivedType from toAddedum to get updated components\n96179dff46a9 [mlir][Linalg] Add a transform dialect op to rewrite ops to destination passing style.\nb58daf91d677 Add a lowering for memref.dealloc with unranked memrefs.\nba23bca0a83d [SME2][AArch64] Add multi-single multiply-add long long intrinsics\ne97fc5007e72 [flang] Add TODO instead of crashing on assert\n83014d877017 [libc++] LWG 3857: allow `string_view` conversion when only traits vary\n574e417460cd [clang] Fix a bug that allowed some overflowing octal escape sequences\n5bdd0beeee56 [MachineCombiner][NFC] Rename `MinInstr` to `TraceEnsemble`\na3d1de3e2908 [LV] Move invalid cost remark code to separate function (NFC).\n873ea45115a8 [mlir][llvm] Rename void debug type to null\nc76acb9dffec [UniformityAnalysis] Fix some file headers and pass names\n130d2953d878 [Flang][OpenMP] Fix a corner case where target region is empty\n4bc2357c3de2 [mlir][MemRef|Tensor] Fix the handling of DimOp\n7fbcc24409ef [llvm-debuginfo-analyzer] (08a/09) - Memory Management\n2002c82278f6 AArch64: count callee stack we use when estimating scavenging requirements.\n819dfc338bdd [AMDGPU] Autogenerate checks for several tests. NFCI\n0e1fb48bb95a [lld-macho] Use uint64_t instead of size_t to fix 32 bit test failures\neeb125659c17 [InstSimplify] Slightly optimize simplifyLoad() (NFC)\n37b7a60cd74b [NFC] Add a test for C++20 Modules\na1b78fb929fc [JT][CT] Preserve exisiting BPI/BFI during JumpThreading\nf8d5f0e53b04 [NFC] Add two tests for C++ modules\n4469ec1d196f [mlir][llvm] Import alias scope metadata from LLVM IR.\nc9fad20f6a66 [InstCombine] Call simplifyInsertValueInst()\n6bec2c30777f [InstCombine] Add additional aggregate reconstruction test (NFC)\n9ca2c309ab06 [InstSimplify] Fix poison safety in insertvalue fold\nb0de87268a60 [flang] Retrieve the correct scope when lowering SELECT TYPE\n86c8ea9ac922 [mlir] Add check for value that might be null.\nf62b084e92e0 [LoopDeletion] Remove legacy pass\n999ead9dc908 [Modules] Code cleanup after removing ModulesTS\n612f3ac26f8c [Modules] Remove -fmodules-ts\n96df79af029b [X86] Support load/store for bf16 in avx\n7e6e636fb683 Use llvm::has_single_bit<uint32_t> (NFC)\n68e81d7e45c7 [ADT] Use llvm::rotr (NFC)\nd54888a3ebb1 [Modules] Refactor modules-ts tests to use standard c++ modules\nfc6d517e2f33 [RISCV][CodeGen] Add codegen pattern for experimental zfa extension (FLI and FCVTMOD not included)\n5e815372480d [Clang][RISCV] Sort test cases into its mnemonics\na1aad28d297a [mlir][vector] NFC: Improve vector type accessor methods\n5382d28815d8 [mlir] Use std::optional instead of llvm::Optional (NFC)\n43059255ce53 [RISCV] Make a const member function static. NFC\n321cd52ba264 Update: [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\n54c136e6c630 [RISCV][MC] Add support for experimental zfa extension(FLI instruction not included)\n7081e59dd12a [MC] Remove an unneeded comparison on cast result. NFC\n9a2cb3a6925f Fix bazel build\nf30ca850ef8b [mlir][sparse] reduce the input size in stress_test.py to make it finish in time.\ndcf18e4757b2 [debugserver] Initialize logging earlier in the startup sequence\nc738b430c46a [mlir][sparse] introduce operations to query sparse tensor slice offset/strides at the given dimenion\na851d46e07c1 [Clang][Driver] Fix integer normalization with KCFI\n4eee77873bca [LoopReroll] Remove legacy pass (unused in the pipeline)\ne2e83f4c8f1d [mlir][sparse] support coiteration over sparse tensor slices\n22b7685401e8 Reland \"[hwasan] Add definitions for missing operator delete functions\"\na9269773eb94 [scudo] Improve the uses of roundUpTo/roundDownTo/isAligned\n94a391b94972 [scudo] Calling iterateOverChunks requires holding lock\nae1bd3adf02f [scudo] Add thread-safety annotations on TSD data members\ne7d3f43eafdd [LoopFlatten] Inline an external linkage function not in llvm::. NFC\n48bfed77cf86 [LoopFlatten] Remove legacy pass (unused in the pipeline)\nf1ddfa6d8a72 [lldb] Remove pydoc import during script interpreter init\n7d62bc9cd380 [mlir][sparse] disable sparse convolution test cases.\n21ccddd2cee1 [LoopInterchange] Remove legacy pass (unused in the pipeline)\n66b3f4a40731 [libc][bazel] Add missing dependency for stdlib tests.\n9ed587ea9bec [mlir][sparse] split sparse concatenate test cases smaller ones.\nae7942e2960e [mlir][sparse] adding `SparseTensorType::get{Pointer,Index}Type` methods\n8bd0e9481cfc Revert \"Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\"\n7adf26e7683d Revert \"Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\"\nc38c8d674383 [PseudoProbe] Refactoring a test\n7058f083020d [gn build] Port 6f3e6a765a9e\nf5aa8d191a5b [Clang][docs] Update the release notes page to the new skeleton\n6313ece5ce94 Revert \"[hwasan] Add definitions for missing operator delete functions\"\n052ae28ac77f [RISCV] Use !cond instead of multiple !if in RISCVInstrInfoVPseudos.td. NFC\nd464edde9571 [X86][Win64] Avoid statepoints prior to SEH epilogue\nd950bdc73eb2 [mlir][sparse] misc code cleanup\n74a5d7471fbd [flang][runtime] MayAlias() must be false for unallocated descriptors\n08ecef8e338f [RISCV] Add CLB/CLH/SLB/SLH formats for Zcb instructions.\n792a724f894a [RISCV] Remove some vestiges of Zbp and Zbt extensions. NFC\n8c1f77af7fd1 [clang-format] Fix windows build.\ne6fbfb1ff1d3 [NFC] Make Module::getIFuncList() private\nbb4fc6b6d6b4 [mlir][sparse] Adding `SparseTensorType::{operator==, hasSameDimToLvlMap}`\nee437afa912b [flang] Don't add a source range to a type instantiation's scope\n6f3e6a765a9e Revert D129735 \"[RISCV] Add new pass to transform undef to pseudo for vector values.\"\na9797d7d2d78 [C2x] Implement the `unreachable` macro for WG14 N2826\nd6ff0808618c [hwasan] Add definitions for missing operator delete functions\n565048543b35 [NFC][SVE] Refactor isel for floating multiply-add operations to use PatFrags.\n72584d91990b [scudo] Fix inconsistent signed/unsigned comparison\ndf2ea2fc2839 [ConstriantElimination] Add NODEBUG condition around `dump`\n8a7b5e0e50de [AArch64] Guard extra uses in mls combine.\nc3ca29080c17 [mlir] bazel fix\nbe75cf931f3f [mlir][tensor] Fix a bug in tiling unpack op.\na41e1ea2a746 [libc++][CI] Starts using Clang 17.\neddec9de44cd [Pseudo probe] Duplicate probes in vectorized loop body.\n57865bc5ad27 [CodeGen] Add a flag to `Address` and `Lvalue` that is used to keep track of whether the pointer is known not to be null\n9048ea28da95 Reland \"[mlir] Make the vast majority of intgration and runner tests work on Windows\"\n114ce273d86a [flang][runtime] Fix typo in assign.cpp\n78e172fc92e7 [mlir][spirv] Support i32 memref.atomic_rmw conversion\n7889f424966e [flang][NFC] Remove unwanted tab\n97ba3c2bec48 [Clang][AMDGPU] Set LTO CG opt level based on Clang option\n45ee0a9afc62 [LLD] Add --lto-CGO[0-3] option\n3cf7f2249825 [mlir][vectorToGPU] Fix type used when folding transpose into read op\na225d897c151 [DebugInfo][Docs] Fix broken link in instruction referencing doc\n82ae83a8487d [mlir] Silence a few -Wunused-but-set-parameter warnings\n22f0c7a45149 [mlir][AMDGPU] 8-bit float usage in the AMDGPU dialect\n50ef8673a378 [InstCombine] remove stale test comment; NFC\n07f93d8c2cc4 Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\nb413b84a704e [libc++abi][AIX] Skip non-C++ EH aware frames when retrieving exception object\nb0bfbad19b06 [AArch64] Always lower fp16 zero to FMOVH0\nef15617f124c [flang][runtime] Return the right mutable modes from INQUIRE in child I/O\n6dd9d18204d2 [mlir][linalg] Fix insertion point bug in D144022\n4f15267d3dd7 [libc++][NFC] Replace _LIBCPP_STD_VER > x with _LIBCPP_STD_VER >= x\n6b991ba486b6 [clang][dataflow] Change `transfer` API to take a reference.\n02ae7e72b3f0 Revert \"Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\"\n22882c39df71 [InstSimplify] Add additional insertvalue into undef tests (NFC)\n93164dba086d [llvm][AArch64] Fix BTI after returns_twice when call has no attributes\n2a2a6bfcfe8e Recommit \"[ConstraintElimination] Change debug output to display variable names.\"\n62d0e1a8541f Revert \"[ConstraintElimination] Change debug output to display variable names.\"\n869c87ad10e8 [ConstraintElimination] Change debug output to display variable names.\nb67ee5d50562 [reland][libc] Separate memcpy implementations per arch\nc645eb0d03bd [mlir][memref] Bufferize memref.tensor_store op\n01581e28ad92 [mlir][linalg] Add bufferize_to_allocation transform op\n07916cea2e7e [ConstantFold] Check for constant global earlier (NFC)\n8b5004864aab [lld][RISCV][test] Expand testing in riscv-attributes.s\n4c3408697b73 [LangRef] improve documentation of SNaN in the default FP environment\n7a282bd2aaa5 [bazel] Fix missing dependency in clang-tools-extra/clang-tidy:llvmlibc\n861764b1c5f7 [NVPTX] Fix NVPTX output name in the driver with `-save-temps`\n15b90805bcb8 Revert \"[libc] Separate memcpy implementations per arch\"\n97e441dc6cfa [libc] Separate memcpy implementations per arch\n3ef062a4bd86 [mlir][transform] Add transform.get_result op\n1f818f63b829 [clang-format] assert(false) -> llvm_unreachable\nf70282237166 [bazel] create a clang-tidy binary target\n980aa8d740da [MachineTraceMetrics] Add local strategy\nb0e7ca79ab0c [X86] Remove abs(sub_nsw()) -> abds fold from adbu test file\na8483b9b3038 [lldb] Fix a log format warning on Windows, don't assume uint64_t is a long type\n1995d4424505 [clang-format] Enable FormatTokenSource to insert tokens.\n9ccc58893be8 AMDGPU: Fix not adding to depth in getNegatedExpression\n7cbbbc0a045b clang: Rename misleading test name\n674f094d852b [lld][ARM][NFCI][1/3]Big Endian support - Removing assumptions\n5bb8ead4e9dc [AArch64][NFC] Rename  AEK_SMEF64 and AEK_SMEI64 feature flags\n3600b384462b [SimpleLoopUnswitch] Canonicalize conditions for injection of invariant condition\n0992e6ee115e [Test][NFC] Rename one of test parameters to avoid confusing associations\ne117fd28d525 [Symbolize][MinGW] Support demangling i386 call-conv-decorated C++ names\n14fcdd7f9d7b [CVP] Add additional ctlz tests (NFC)\n4c8eda9337d4 [XCore] Adapt threads.ll to opaque pointers.\nbc173f526c57 [SimpleLoopUnswitch] Fix overflowing frequencies case\n45ddc157ca7c [clang-tidy][NFC] Remove ModernizeTidyModule::getModuleOptions\nc7f9344d0f8f [DAGCombine] Fold redundant select\nc3228714cc0e [libc][NFC] Make tuning macros start with LIBC_COPT_\nd64d5772b1ea Add InstSimplify tests for comparisons between known constants\n59b8db1db8ec [JITLink] Drop const qualifier from argument to ELFLinkGraphBuilder's ctors (NFC)\n1c42f8e69d8f [JITLink] Fix whitespace in debug dumps (NFC)\n7d9cf97f80f0 [bazel][mlir][examples] Add missing dependency for 72429a42ac33564fa82449d99dc234da32a05498\n458ad6900e66 Revert \"InstCombine: Fold is.fpclass(x, fcZero) to fcmp oeq 0\"\ne1d95e99bc31 [flang] Update intrinsic types to unlimited polymorphic form\n11c3cead2378 AMDGPU: Override getNegatedExpression constant handling\na4e8347b3661 AMDGPU: Refactor isConstantCostlierToNegate\ndf78976d023a InstCombine: Fold is.fpclass(x, fcZero) to fcmp oeq 0\n8f7e7400b74b [mlir][bufferization] Add restrict and writable attrs to to_tensor\n462227f1150f [SROA] NFC: Look at TypeStoreSize scalable property, rather than at type directly.\n35276f16e5a2 [llvm-c] Add C API methods to match 64bit ArrayType C++ API signatures\n71712440bbb2 [mlir] Add vectorize_nd_extract attribute to the masked_vectorize Op\n86a63b2ae147 [Metarenamer] Use 'inst' as default name for instructions\nddc5d40dd285 [clang][analyzer] Make messages of StdCLibraryFunctionsChecker user-friendly\nc1eb3db780b7 [LoopFuse] Remove legacy pass\n30d542f9b2ad [MLIR][Tensor] Introduce a pattern to propagate through `tensor.pad`\n2872987e5e91 [InstCombine] Fix InstCombinerImpl::foldICmpMulConstant for nsw and nuw mul with unsigned compare.\n41628d050a17 [mlir][Bazel] Add missing dependencies for 72429a42ac33564fa82449d99dc234da32a05498\n4bba8bd33efd [mlir] Add RewriterBase::replaceAllUsesWith for Blocks.\n72429a42ac33 Add a pass that builds a debug info scope for LLVMFuncOp (adding a DISubprogramAttr)\nd7ca25342ff6 [mlir][Bazel] Add dependency needed for e9b82a5c\n1427277eed80 [mlir][Vector] Enable masking for static shapes\n1ac874c9aa18 [mlir][Vector] Add support for masked vector gather ops\n9452356ddcf4 [mlir][Vector] Add support for masked vector.contract\ne9b82a5c4fb6 [mlir][Vector] Add LLVM lowering for masked reductions\na409f3c06914 [LoopVersioningLICM] Remove legacy pass\n0dc18b6222f4 [mlir] Use std::optional instead of llvm::Optional (NFC)\n05423905d064 [mlir] Use std::optional instead of llvm::Optional (NFC)\n4dfd5a3eb6c3 [llvm] Use std::optional instead of llvm::Optional (NFC)\n71251e8d4f3f [mlir] Fix -Wsign-compare in SparseTensorRewriting.cpp and Sparsification.cpp (NFC)\n9e6e96f3e4c3 [gn build] Port f1c4241fb6e5\nf1c4241fb6e5 [RISCV] Add new pass to transform undef to pseudo for vector values.\na17bfbad6387 [RISCV] precommit test for D129735\n54cf24dc6e63 [NFC] Refactor ModuleDeclStateTest to make it not dependent on Frontend\nef6d474aa7ac [ORC] Add ELFNixPlatform::Create overload -- Pass ORC runtime as def generator.\nf708a549b87e [mlir][sparse] Factoring out SparseTensorType class\n8d995b26c755 [C++20] [Modules] [ClangScanDeps] Ensure that we can mix the use of and clang modules\naef76fe554ee [clang-format][NFC] Reformat clang/tools/clang-format/fuzzer/\n81cb70e46ea1 [mlir][sparse] fix a bug in UnpackOp converter.\ndd31a3b3a526 [InstCombine] fold icmp of the sum of ext bool based on limited range\n06f06644efb0 [SeparateConstOffsetFromGEP] Fix: `b - a` matched `a - b` during reuniteExts\nf93da3962eed [Instcombine] Precommit tests for icmp range; NFC\na52432f63312 [NFC][SeparateConstOffsetFromGEP] Added flag `lower-gep`\na211d79cac12 [bazel] Port 26662ac010ef50e65e2774eab84f325aa09360fe\n6e794ba0b238 [Clang][RISCV] Guard vector int64, float32, float64 with semantic analysis\nc0f504df4857 [mlir] Fix two build warnings in VectorToGPU (NFC)\nbb692d44c43f [gn build] Add missing count dependency for check-asan\ndfacba5af0fb [scudo] Update ring buffer test to make it accept zero size\n766065aa6553 [LoopUnrollAndJam] Remove legacy pass\n6a4c39596d68 [scudo] Add the thread-safety annotations\n2b8cb7d87fcb [LoongArch] Make use of addu16i.d for adds with suitable immediates\ndcf9c60a538c [LoongArch] Add baseline tests for `addu16i.d` codegen. NFC\n82c6e90d6a3d [Clang][Test] Add llvm-lto, llvm-lto2 and llvm-profdata to the tool substitutions list\n6adf92026ee5 Remove trailing whitespace in `X86InstrAVX512.td`; NFC\nf895d55f149b Remove incorrect comment around `truncateAVX512SetCCNoBWI`; NFC\n42e11a6ea321 Add transform (and/or (icmp eq/ne (A, C)), (icmp eq/ne (A, -C))) -> (icmp eq/ne (ABS A), ABS(C))\nabf6692f9513 Tests for (and/or (icmp eq/ne A, C), (icmp eq/ne A, -C)) <--> (icmp eq/ne (ABS A), ABS(C)); NFC\n8b5c3902475b Transform `(icmp eq/ne Abs(A), Pow2)` -> `(and/or (icmp eq/ne A,Pow2), (icmp eq/ne A,-Pow2))`\n54a9e992c84c Add Transform for `(and/or (eq/ne A,Pow2),(eq/ne A,-Pow2))`->`(eq/ne (and (and A,Pow2),~(Pow2*2)), 0)`\ne29c4393236f Add tests for folding `(and/or (icmp eq/ne A, Pow2), (icmp eq/ne A, -Pow2))`; NFC\nf3732c2b18df Transform vector SET{LE/ULT/ULE} -> SETLT and SET{GE/UGT/UGE} -> SETGT if possible\n3e0866bf616b [mlir][Vector] NFC - Fail gracefully on size mismatch instead of assert\n5ef7ceae5769 [mlir][Vector] Significantly improve VectorToGPU.cpp\n26662ac010ef [Support/BLAKE3] Rename blake3_* -> llvm_blake3_* to avoid symbol collisions\n10eea3fe1536 [LoopVersioning] Remove legacy pass\n74a2dd1356bf [InstSimplify] fix/improve folding with an SNaN vector element operand\nac2f13f673b8 [InstSimplify] add tests for vectors with SNaN constants; NFC\nae0c203e676e [LoopLoadElimination] Remove legacy pass\n87046744e6a8 [Driver] Allow test to use lld-link.exe not just lld-link\neb5530e621aa [LoopDistribute] Remove legacy pass\n823186b14dc9 Recommit: [NFC][IR] Make Module::getGlobalList() private\n0a0d58f5465a [libc++] `<algorithm>`: `ranges::minmax` should dereference iterators only once\n83ba349ae0a8 [InstSimplify] fix/improve folding with an SNaN operand\n4a4e44e378ca [InstCombine] add test for loop-invariant fdiv; NFC\n1ce1e4a4d59d [mlir][spirv] Validate float type bitwidths\n96fcaf0cc06a [openmp] Fix building for mingw targets after import library changes\ncb5f239363a3 Revert \"[NFC][IR] Make Module::getGlobalList() private\"\ncafb1c1cb241 [runtimes] Remove duplicate imports of libcxx.test.config\nb4243bb611a3 [clang-format] Don't rewrite the input file if already formatted\ned3e3ee9e30d [NFC][IR] Make Module::getGlobalList() private\n33d0d1e36ffa [runtimes] Rename newconfig.py to config.py -- it's not new anymore\n9f3a3e1f3f97 [lldb] Disable macro redefinition warnings in expression wrapper\n20cdf7c70667 [InstCombine] Increase limit for max copied from constant fold\n0d4e55ba69c1 [OpenMP] Recover non-blocking target nowait disabled by D141232\n9093f3c39b8f Report a useful error when someone passes an incorrect python class name.\n853a46cfb1ca Revert \"llvm-reduce: Run instruction reduction last\"\n9e9293ee6aaf [llvm][test] convert one test to use opaque ptrs (NFC)\nac835ecb5fea [Fuchsia] Set /winsysroot in Windows runtimes linker flags\nc062e97acfba [llvm][test] restrict 2 GVN tests to just test GVN (NFC)\nc510c387631e [libc++][NFC] update Range Status for the completion of C++20 ranges\nb677d0753c0a [IPSCCP] Remove legacy pass\n36606cf07080 [NFC] Replace -1U{LL} expressions with appropriate *_MAX macros in Support library.\n31c35285d27e [mlir][spirv] Fix crash when decorating physical storage buffer pointers\n913b4aa60830 Reland \"[compiler-rt][hwasan] Add unused attribute to GetRegisters\"\nddb704247b16 [clang][test][RISCV] Introduce separate RUN lines for __risv_i test in riscv-target-features.c\naecb36c8489a [GlobalOpt] Remove legacy pass\nb40bfc1b9e38 Reland \"[gn] port f29cfab55d1f\"\n5b455a8efbf5 [InlineAdvisor] Restructure advisor plugin unittest cmake\n08533f8b8660 Revert \"[CGP] Add generic TargetLowering::shouldAlignPointerArgs() implementation\"\n12b4f9e2af95 [AMDGPU] Do not apply schedule metric for regions with spilling\n5c1b8de77d1c [libc++][doc] Sets the proper plenary date.\n8cf1524cbc7f [loop unroll] Fix `branch-weights` for unrolled loop.\nfb717fe06dd0 [NFC][IR] Make Module::getNamedMDList() private\neaeb8ddd4a9d [LLDB] add arch-specific watchpoint behavior defaults to lldb\n8198f30f7e75 [lld-macho] Account for alignment in thunk insertion algorithm\n055cd78eef15 [RISCV] Untabify THMulAccumulate_rr. NFC.\nd4012bc43f9a [RISCV] Add vendor-defined XTheadMAC (multiply-accumulate) extension\n179db7efe567 [MLIR][OpenMP] Add support for depend clause\n361d5a7a9f14 [gn] port 4e3dac6f0a4c (ScudoHooksUnitTest)\n7301a7ce196e [mlir][linalg] Make Linalg vectorizer lower affine.apply\n4e3dac6f0a4c [scudo] Call __scudo_deallocate_hook on reallocations.\n6c7894a8e652 [libc][doc] Move docs/math.rst to docs/math/index.rst\nddde06906be1 [OpenMP]Fix PR55970: Miscompile of collapse(3) with non-rectangular loop nest.\n5dc400ea2f06 [gn build] Port 7f5d130a428f\n1da2085a5133 libclc: add clspv to targets exempt from alwaysinline\n290308a99e6b libclc: add generated convert.cl to clspv/clspv64 targets\n9c8f3409494f [libc++][format] Fixes test failures.\n7f5d130a428f [libc++][chrono] Add hh_mm_ss formatter.\n5205c7126b2f [mlir][gpu] Add support for unsigned integer extend in vector to gpu.subgroup_mma lowering\nf6cd46e07fcc libclc: add more generic implementations to clspv SOURCES\nf8877d86a867 [libc++][doc] Adds Issaquah papers and issues.\n5a81d0eea40a [AArch64] Remove dead isReflexive methods. NFC\na9f384994b9d [libc++] Counter<T>'s assignment operator shouldn't ++gConstructed\n755535b5eb5f [flang][runtime] Handle aliasing in Assign()\n0f52c1f86c62 [llvm] Deprecate {Bits,Float,Double}To{Bits,Float,Double} (NFC)\nd180443570d7 [NFC][IR] Make Module::getIFuncList() private.\n016d5a0a0a15 [flang] Strengthen conformance requirements for allocatable/pointer dummy arguments\nd05e1e99b1d6 [clang][test][RISCV] Check for __riscv_i in riscv-target-features.c\n574d0c2ec107 [clang][test][RISCV] Fix precision of CHECK-NOT lines in riscv-target-features.c\nf4d8b8781de9 [AMDGPU ASAN] Remove reference to asan bitcode library\nc5085c91cc8e [CodeGen] Trivial simplification of some getRegisterType calls. NFC.\n800fec13a81f [libc++] Enforce formatting for already formatted and new files and ignore the formatting of tests\nacbb15ed705f Revert \"[extract_symbols.py] Adjust how the output of nm is interpreted\"\n9a8d64a66a15 Revert \"[libc] Separate memcpy implementations per arch\"\nbf987e108fcc [AArch64][SME]: Custom lower select and fp_extend for streaming SVE\n26541d417634 [libc] Separate memcpy implementations per arch\n8981f20ae9c3 [libc] refactor logic around embedded memcpy\n3af88305e443 [flang] Associate entities are variables\nfefe729f0f4a [AArch64][SME]: Custom-lower SIGN_EXTEND_INREG for streaming SVE\n057cae64ebc4 [MLIR][Presburger] Matrix: hide expensive consistency check behind EXPENSIVE_CHECKS macro\nf04421739232 [ConstraintElim] Add reproducer remarks.\n9c14132d7b6c [AArch64][SME]: Add missing Ops that need custom-lowering in streaming mode.\nbfbfbd8b65de [LVI] Fix and re-enable at-use reasoning (PR60629)\n0fa5df1959fa [LV] Synthesize all true masks for masked vector function variants\n09dd4d870e19 DAG: Remove hasBitPreservingFPLogic\nd94399c64151 [mlir][llvm] Make LoopAnnotations non-discardable\n463fa25c34d6 [clang][NFC] Adjust tests to not un/define predefined macros\n7a49d50f22ad [flang] support fir.unreachable in stack arrays pass\neb436da6b826 [flang] automatically load FIR dialect with hlfir\nddfabefe1be1 [libc] Conform memcpy tuning macro to the new naming scheme\n77bd15ae2fa3 [MachineTraceMetrics][NFC] Move Strategy enum out of the class\n147f476e851d [mlir][LLVM] Properly wrap code examples in markdown code blocks\na5488a398f3b [flang][hlfir] remove unnecessary header include\n1fae1464d7a7 [flang] Fix USE rename\n67223522355b [SimpleLoopUnswitch] Re-enable simple-loop-unswitch-inject-invariant-conditions\nc7ea20c8eed5 [SimpleLoopUnswitch] Ignore inner loops when injecting invariant conditions. PR60736\nf3c008ca776b DAG: Relax foldBitcastedFPLogic conditions\n3849dc1f8eeb [NFC] Move some asserts out of Expensive Checks\n94676cf8a13c [llvm][AArch64] Fix an interaction of SLS and BTI after a returns twice call\nebc21c7a2558 [Test] Add test for PR60736\ncfeb0bf83ec1 [SimpleLoopUnswitch] Temorarily switch off simple-loop-unswitch-inject-invariant-conditions. PR60736\n8c7cfa357280 [mlir] fix LLVM IR translation of vector<... x index>\n98ecc3ac77a9 [Flang] Fix for Any/All simplification to properly propogate the inital value\ne8d44841c5d5 [docs] Update the ACLE URL\n6240627cfda4 [docs] Fix bullet list formatting\n0b33f0d80b83 [mlir][linalg] expose convolution dimension classifier\n7fdc2ed09f44 [mlir] reallow null results in TransformEachOpTrait\n64dad4ba9af6 Use llvm::bit_cast (NFC)\n544831ab9f35 [mlir] Drop unused arith conversion class (NFC)\n504aa8ae941e [include-cleaner] Better support ambiguous std symbols\n1ba93c3c30dc [Modules] Don't re-generate template specialization in the importer\n46cdf7f09912 [Tooling][Stdlib][NFC] Reflow comments and strip clang-format pragmas\n697a162fa63d [AVR] Fix inaccurate offsets in PC relative branch instructions\n1e6921131aa4 Move global namespace cl::opt inside llvm::\n4f0eb57222de AMDGPU: Teach getNegatedExpression about rcp\nce4b719f33e5 AMDGPU: Add test for getNegatedExpression with rcp\n0a669bd894f3 AMDGPU: Add additional tests for combiner infinite loop\n463ab1e07a0a llvm-reduce: Run instruction reduction last\n04f69345894d [DAG] Handle build_vector with all undefs in reduceBuildVecTruncToBitCast\n2e9549db2686 [LangRef] Global variable declarations imply minimum size\naf838c1b1c20 [Coroutines] Don't run optimizations for optnone functions\nbfea83767603 [mlir][llvm] Reintroduce string based attribute setting.\ncb90bb986611 [PowerPC] Specify the dynamic loader prefix in ppc-float-abi-warning\ndf3e73dabb5b [LoopDeletion] Simplify. NFC\n9c4f0d83f64e [docs] Add document for clang-scan-deps -format=p1689\n8c74defcca50 [OpenMP] Fix extra parenthesis in kmp_os.h\n5e78b749eccf [ARM] Use llvm::rotl and llvm::rotr (NFC)\na411bc727426 [RISCV] Rename InstFormatCSZN->InstFormatCU to match latest Zcb spec. NFC\n639b7865a67f [RISCV] Use llvm::rotl (NFC)\nafad153a0890 Recommit: [NFC][IR] Make Module::getAliasList() private\ndf77dec93e17 [AArch64] Use llvm::rotl and llvm::rotr (NFC)\n9700eb4fbfdc [bazel] build fix\n48f04ffa9f36 [mlir][affine] Normalize constant valued bound loop\n6d4a674acbc5 Revert \"[NFC][IR] Make Module::getAliasList() private\"\n7c6b46e87eaf Revert \"[DAGCombiner] handle more store value forwarding\"\nac6219d0aeb7 Revert \"[DAGCombiner] fix comments for D138899; NFC\"\nb64f7d028bdc [NFC][IR] Make Module::getAliasList() private\n6ee2f770efb6 [PowerPC][GISel] add support for fpconstant\n5561e174117f Revert \"[mlir] Make the vast majority of integration and runner tests work on Windows\"\n663725947bae [flang] Disable libc++ assertions in the runtime library\ncff7fad1544a [flang] Catch repeated BIND(C) attribute specifications for a symbol\n235e90c1d760 [Clang][RISCV] Guard vector float16 type correctly with semantic analysis\n4b815d8443db [mlir][NFC] Remove unused variable 'indexType' in GPUTransformOps.cpp\n288ae0b92f57 [mlir][gpu] NFC change to pass threadID ops to rewriteOneForeachThreadToGpuThreads\n69373a5d3f45 [flang] Check for invalid BIND(C) names\n4148f2768b87 [flang] Check for non-interoperable intrinsic types in BIND(C) derived types\n855b67799b7c [libc++][NFC] Remove duplicated line from `Cxx20Issues.csv`\n30d932305567 [flang] Pointers returned from functions are not definable as pointers\n632fd9fb861c [flang] Respect inaccessibility of type-bound ASSIGNMENT(=)\n5402110e0123 Revert \"[lldb] Use portable format string PRIx64\"\n7bc9dc26bc9b [Fuchsia] Add FUCHSIA_ENABLE_LLDB option.\n860ed6c078b4 [flang] Warn about dangerous TRANSFER()\n776b7499ea81 [TLS] Added a LangRef entry wrt the module flag MaxTLSAlign.\nb57bc158ea46 [flang] Catch obscure structure constructor error\nee88f1177003 Find SDK path more lazily in Apple Simulator platforms\nf7016f8a8ea2 [scudo] Call getStats when the region is exhausted\n70758b801df9 [scudo] Calling getStats requires holding lock\nf28c1a9df2e3 [flang] Conform with standard (mostly) for character length mismatches on arguments\ne800c664f0e9 [mlir][sparse] Extend readCOOIndices to support overhead types beyond index_type.\n8151d6f80458 [flang] Diagnose REPEAT with negative NCOPIES=\nce9ce66b8def [mlir][sparse] fix a memory leakage when converting from a tensor slice\n5fde2d99513f [libc] Write stub files to a new directory to avoid conflicts\n4f1037f86a62 [flang][build] Fix build issue reported on recent commit\n620b3d9ba334 Revert \"[LLDB] Enable 64 bit debug/type offset\"\neb0ea28b6a1b [OpenMP] Add check for target allocator regardless of the availability of libmemkind\n81566001e0c8 [mlir][tosa] Enable `apply_scale` unrolling\nb673135bb833 [Release] Produce bolt tarball\nbe7d7ca11018 [lldb] Use portable format string PRIx64\n17b097b8df69 [runtimes] Set LLVM_ENABLE_PER_TARGET_RUNTIME_DIR_default to ON for OS390\nf11ab8353f97 libclc: remove sqrt/rsqrt from clspv SOURCES\n807d43239a5f [VPlan] Use properlyDominates predicate for ordering FOR users.\n161b9d741a3c [mlir] Make the vast majority of integration and runner tests work on Windows\n19b1e27fcd56 [mlir][SPIRVToLLVM] Add pass option to emit opaque-pointers\n009fc4ca3b44 [mlir][LLVM] Verify correct pointer casts with `llvm.bitcast`\n0aaf2e3bc057 [mlir][GPU] add required address space cast when lowering to LLVM\n9d0b596aada6 [mlir][tosa] Fix segmentation fault in case of folding unranked tensor\nf36fe009c0fc [LLDB] Enable 64 bit debug/type offset\n7156d3b1fe80 [libc][bazel] Update math function unit tests' dependency computation.\n2dab5bdf89f6 [flang] Warn on mismatched DATA substring sizes rather than crashing\n9369b7d307be [lld][WebAssembly] Limit size of shared 64-bit memories of 2^^34\n67d78e3c6fe5 [libc] Add a loader utility for AMDHSA architectures for testing\ne5d914672233 [extract_symbols.py] Be more permissive when examining nm output\n8f5d81585aa9 [Clang][LLVM] Enable __arithmetic_fence and fprotect-parens on AArch64\ne96f994f39ad Revert \"[Hexagon] Add release note for LLVM 16\"\n892bf09606b6 [mlir][arith] Allow to specify `constFoldBinaryOp` result type\ndc38cbcc8b89 [mlir][arith] Fold selection over constant vector conditions\nf841c4af5f5e [lldb] Fix image lookup crash\n51a07fc24cb9 [clang] Add test for CWG2396\n7638409d4363 [RISCV] Make vsetvli intrinsics default to MA.\n06d9bf5e64d4 [OpenMP] generate the Windows import library that imports by name rather than ordinal\n96267b6b8840 [mlir] Add Float8E5M2FNUZ and Float8E4M3FNUZ types to MLIR\n7c84f6a43ae3 [flang] Emit portability warning for extension\n8e628f72b00c [mlir] Avoid building some shared libraries when PIC is off\nbf7c42161700 Revert \"Reland \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\"\n8a57748804bd Revert \"[lldb][Test][NFC] TestExternalCtorDtorLookup: add more instantiations to test linkage name is correct\"\n9dd1168fe115 [docs] Speculative link syntax fix\nf1f62ed0c834 [ADT] Add llvm::rotl and llvm::rotr to bit.h\n31c42f8f3588 [libc++][doc] Updates format status page.\n756395f61b90 [clang] fix DR status in cxx_status.html\ndf5beebc98bb [Driver] Add --vfsoverlay flag\n176ee268f8df [flang] Allow for user-defined intrinsic operators (regression)\n39eb1c6145eb [CSSPGO][Preinliner] Set default value of sample-profile-inline-limit-max to 50000.\nb6259eca16f6 [Clang] Export CanPassInRegisters as a type trait\n0c412fed360f [RISCV][docs] Describe status of zicsr and zifencei\nd4021ed3d79d [Tooling/Inclusion] Add symbol mappings for `std::experimental::filesystem`\n6e10e6cb8fab Reland \"[lldb][DWARFASTParserClang] Correctly resolve imported namespaces during expression evaluation\"\n1232b9d47209 [RISCV] Fix -Wbraced-scalar-init warning. NFC\n171ffd499e16 [ORC] StaticLibraryDefinitionGenerator -- support in-memory universal binaries.\n201b2b5674e1 [libc++] Reorganize exception_guard\n1c9e6238fe2f [AMDGPU] Allow architected SGPRs for workgroup IDs\nb35d0a6834f8 [AMDGPU] Add switch to enable architected SGPRs.\n1edb04bc70f3 [extract_symbols.py] Adjust usage of nm again\n4198ff0cb999 [AArch64] Add NZCV Def for TLSDESC_CALLSEQ\nd44b31eca27c [DAGCombine] Allow DAGCombine to remove dead masked stores.\n58d246a27b8c [mlir][spirv] Drop outdated TODO comment\nfc02eeb24fc0 [RISCV] Add vendor-defined XTheadBb (basic bit-manipulation) extension\nb8c2ba138ef6 [NFC] Fix using-declspec.cpp test with non-C++17 compilers\n00a5ae12448e [mlir][bufferization] Better propagation of bufferizesToMemoryWrite through regions\n95526930da6c [flang] Fix new assertion failure\nbbff77a14ef2 Revert \"[libc++] Remove _LIBCPP_CONSTEVAL\"\n04a2baf58f23 [RISCV] Add vendor-defined XTHeadBs (single-bit) extension\n676bca0b6f0d [libc][NFC] Fix typo in header guards\n5a5f3de6ee62 [RISCV] edit document of Zcb to match the Implementation\n2e47aafb02f3 [PowerPC] Fix float materialization patterns.\n6a6c527ee287 [X86][FP16] Combine two steps conversions into direct conversion\n388d679c1dfa Recommit [YAML IO] Check that mapping doesn't contain duplicating keys\nd904ee3d479a [flang] Handle correctly optional intrinsic scalar to unlimited polymorphic optional\n877859a09bda [clang] Handle __declspec() attributes in using\na01edb169bb0 [flang] Fix output type when emboxing intrinsic type to unlimited polymorphic box\ncc4fb5837647 [mlir] support complex type in DenseElementsAttr::get.\ne9eaee9da196 [AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\naf3c25dc3d87 [VPlan] Fix iterator invalidation in adjustFixedOrderRecurrences.\n580109025801 [libc++] Fix bug in allocate_shared_for_overwrite\n7eec2f2f218c [flang] Avoid infinite recursion in common block check\n87cc95a904e0 [libc++] Implement P2136R3 std::invoke_r\nafe9b0ba87b7 [Test][lldb] Fix YAML mapping keys duplication. NFC.\nd3b0fba6084d Revert rG0b0a38a7a229b70d7261771ba0e702843bd34e97 : \"[X86] combineX86ShufflesRecursively - don't widen shuffle subvector inputs\"\nb838b6287617 [mlir][MemRef][Transform] Don't apply multibuffer on \"useless\" allocs\n5d3c58829d28 [gn] port c4f7cc867299 (CoroTests)\n9f650ae779b4 [Libomptarget] Remove dependency on the DeviceRTL from the GPU plugins\n3c160d3051dc [lldb][Test][NFC] TestExternalCtorDtorLookup: add more instantiations to test linkage name is correct\n9e3010ad992d [AArch64] Fix LSE2/LSE128/RCPC3 precedence\ne698c5950430 [libc++] Granularize <type_traits> includes in <algorithm>\ne3515ba3816b Reapply \"[AMDGPU] Modify adjustInliningThreshold to also consider the cost of passing function arguments through the stack\"\n8b28500f60b7 [mlir][MemRef][TransformOps] Fix error reporting for multibuffer\n4c273cd07115 [DWARFLinker] Refactor cloneAddressAttribute().\n30f515a9101d [libc] Fix LIBC_LOOP_NOUNROLL being a noop\nc4f7cc867299 [Coroutines] Modify CoroFrame materializable into a callback\n3e51af9b5b3a [Coroutines] Improve rematerialization stage\n35106ad1009f [Coroutines] Presubmit test for more coro remats\n8f104a3f9ae2 [ARM] O3-pipeline fix\n5922b886350c [flang] RFC: -fstack-arrays\n2feafd059e9f [flang][hlfir] lower hlfir.sum into fir runtime call\n9facbb694250 [flang] lower sum intrinsic to hlfir.sum operation\n3ad26060e4bc [flang] add hlfir.sum operation\n7c4e45ec7d6d [mlir][SCFToOpenMP] Add pass option to emit LLVM opaque pointers\n4a2d4588a041 [mlir][Vector] add pass option to `convert-vector-to-llvm` to emit opaque pointers\nd5ea1b22cba3 [flang] use mlir::LoopLikeOpInterface::blockIsInLoop\ne6ec76c647aa [LLDB] Apply FixCodeAddress to all forms of address arguments\na9329a96ada3 Adjust #pragma warning so GCC is not unhappy\n5a028cc8ffa5 [mlir][LinAlgTransformOps][NFC] Use emitSilenceableError\n2a58be423963 [HardwareLoops] NewPM support.\nc5e1000b2915 Add build for Windows on Arm in packaging script\nfdd18e866b05 [llvm][TableGen][Jupyter] Show llvm-tblgen not found error in notebook\n24ecd9984235 [NFC] Set C++20 Named Modules for CodeGen in ASTContext in the early place\n19659b5f0dd1 [clangd] Drop includes from disabled PP regions in preamble patch\nfae01d175a29 [clangd] Fix bugs in main-file include patching for stale preambles\nf79a5fb9df42 [Test][SCEV] Add a test where the trip count can't be calculated\n7f249e45eca4 [milr][llvm] Add remaining loop metadata support\nfff762d674c3 Revert \"[CMake] Remove custom ccache CMake logic\"\n240c6f264399 [mlir][llvm] Improve LoadOp and StoreOp import.\n0fad18c44a14 [CMake] Remove custom ccache CMake logic\nae55f1cf9c10 [gn build] Port b7b28c6cfe04\nb7b28c6cfe04 [clang-tidy][libc] Add an inline function checker for the libc project.\n2bc095037eb6 [AMDGPU] Use llvm::bit_cast (NFC)\n92716a42a6aa [llvm-debuginfo-analyzer] LLVM 16.0.0-rc1 Failing test on osx-64.\nb49b429fde3a [llvm] Deprecate PowerOf2Floor and ByteSwap_{16,32,64}\n9c401687eb46 [x86] Move combineAddOrSubToADCOrSBB within the source file (NFC)\ne0e329609858 [X86] Precommit tests for D143838\n64287d69827c Recommit [C++20] [Modules] [ClangScanDeps] Enable to print make-style dependency file within P1689 format (4/4)\n212d905643bd Recommit [C++20] [Modules] [ClangScanDeps] Allow clang-scan-deps to without specified compilation database in P1689 (3/4)\neb70b38f838f Recommit [C++20] [Modules] [ClangScanDeps] Add ClangScanDeps support for C++20 Named Modules in P1689 format (2/4)\n2e4499e749c0 [flang] Handle forward references to modules\nff5c00d4ffc8 [X86][FP16] Add tests to show suboptimal codegen, NFC\n9f8ee610beb1 [flang] Warn on overflow folding DIM()\naa128bb21ee3 [flang] Catch misuse of a procedure designator as an output item\n57751e60e34e [gn build] Port 2a06757a200c\n2a06757a200c [libc++][spaceship] Implement `lexicographical_compare_three_way`\n2e6430666caf [LV] Update recipe builder functions to pass VPlan directly (NFC).\naf03616f46a1 [Flang][OpenMP][NFC] Remove usage of else after return\n15cb5ebed7a4 [Support] Use llvm::popcount (NFC)\nbe2fc577c389 [ORC] Add MachOPlatform::Create overload -- Pass ORC runtime as def generator.\naca9016bcde0 [flang] Fix crash on SELECT RANK\nec116ea684b4 [llvm] Deprecate llvm::count{Leading,Trailing}{Zeros,Ones} and llvm::countPopulation\nbb00fb66ba11 [libc++][NFC] Fix formatting in ranges status page\n594700c12247 [flang] Warn about construct names that are not distinct in the inclusive scope\n129eb5bcab91 [lldb] Add the ability to provide a message to a progress event update\n19c1682b6a4c [X86] combineConcatVectorOps - concatenate 512-bit VPERMILPS nodes.\n6eb66890e473 [X86] Add some basic matrix multiplication test coverage\n10d8b3054a72 [Flang][OpenMP][NFC] Correct a few instances of variable naming\n9f2014269ad8 [AArch64] Regenerate and extend zip1 tests. NFC\nfaf5616e110c BlockFrequencyInfoImpl.cpp - add missing closing namespace comment. NFC\nd38fcb421657 BlockFrequencyInfoImpl.h - use auto* for pointer types. NFC.\n51007cfa456f BlockFrequency.h - add missing closing namespace comment. NFC\nfe655717bff1 [flang] Support polymorphic inputs for the TRANSPOSE intrinsic\n1bb95a3a99cb [X86] combinePredicateReduction - attempt to fold subvector all_of(icmp_eq()) / any_of(icmp_ne()) to integers\n8bb98b571547 [Clang] Add the list of approved (Issaquah) C++ papers to the status page\n738370ae0e7f DemandedBits.cpp - use auto* when initializing from cast<>. NFC.\n41328d7c0e6e RegisterPressure.h - consistently initialize all pointer fields. NFC.\n1300a4fdae35 Revert rG23cb32c6d5bda0919cc1ef129917ceb2dbf1b1b8 \"[X86] combineX86ShufflesRecursively - treat ISD::TRUNCATE as faux shuffle\"\n7717e1114ad3 Revert \"[AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\"\nf48f17871792 [InstCombine] canonicalize cmp+select as smin/smax\n14411adc3dce [InstCombine] add tests for disguised smin/smax; NFC\nc697119dafce [bazel][libc] Add a few more missing dependency that show up when parsing headers\nbb5f79158b71 llvm-tblgen: Apply IWYU in some files\n2d570bab4f99 CodeGenTarget.cpp: Reformat.\n0e18b5feaaba LLVMFuzzerCLI: [CMake] Prune the last PARTIAL_SOURCES_INTENDED to cover all sources.\n36adb82c251d LLVMProcessSources.cmake: Improve PARTIAL_SOURCES_INTENDED.\n19128792e2aa Reland \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\nfebe740b2c8f [test] Remove occurences of br undef in Transform/Util tests [NFC]\n069dd8768a6a Revert \"[C++20] [Modules] [ClangScanDeps] Add ClangScanDeps support for C++20 Named Modules in P1689 format (2/4)\"\nf8b5003cb3f9 Revert \"[C++20] [Modules] [ClangScanDeps] Allow clang-scan-deps to without specified compilation database in P1689 (3/4)\"\n502e357dc77c Revert \"[ClangScanDeps] Add UNSUPPORTED: system-windows to test P1689.cppm\"\n08f31b8fa85c [docs] Make consistent between MLIR tutorial doc and example code\nc9a7b92a23bb [AArch64] Consider tiny code model in emitLoadFromConstantPool.\n6a75aec09098 [Clang][perf-training] Remove trailing whitespace in perf-helper\ndf3b703a4c17 [AArch64] Use llvm::countr_{zero,one} (NFC)\n6d90c590b7f5 [JITLink] Don't initialize local ArrayRefs with initializer lists.\nc8ad1de4f068 [RISCV] Remove dead code from RISCVDAGToDAGISel::selectVSETVLI. NFC\n4afb1ee7bc0e Specify target triple for bb-prefix-dump.ll\n86cbf3d5f8a2 [JITLink] Add explicit conversion to silence warnings / errors on bots.\n01d68b13f52d [libcxx][ranges] mark new join view tests unsupported without experimental flag\n7e772e12d10e [RISCV] Fix mistake in comment. NFC\n10b5fec25638 [JITLink][ORC] Add LinkGraph::allocateCString method.\na38a4654ce4b [libc++] fix `shared_ptr`'s incorrect constraints\n23cb32c6d5bd [X86] combineX86ShufflesRecursively - treat ISD::TRUNCATE as faux shuffle\nd05f889535ab [libc++] Enable radability-identifier-naming for local variables and fix any problems\ncc236b64d11d [gn build] Port 3d4e9d5eb0f7\n9eccc6cce07b [JITLink] Add a predicate to test for C-string blocks.\n3d4e9d5eb0f7 [ORC] Move ORC-specific object format details into OrcShared.\nf00d101b8e32 llvm/utils/TableGen/CodeGenIntrinsics.h: Fix a comment line (since 2006!)\nda876a157d79 [libc++][NFC] Reorganize the std::pair constructor tests to be more consistently named\n2e08e431cc18 LLVMTableGenGlobalISel: Provide `INTERFACE_INCLUDE_DIRECTORIES`\n4537bda929bd [libc++][NFC] Change some std::pair tests from .compile.fail.cpp to .verify.cpp\naaef3b82f4f0 [libc++] Remove _LIBCPP_CONSTEVAL\ne3eb61a8cd61 [libc++][NFC] Fix leftover #endif comments\nb48880f39f96 [libc++][NFC] Use using instead of typedef in pair.h\nab17e1b76cf7 [libc++][NFC] Always define __non_trivially_copyable_base in pair.h\na98936d5a698 [libc++][NFC] Use std:: instead of _VSTD:: in pair.h\n9994340a49ba [libc++][NFC] Use >= 23 instead of > 20 in pair.h\n1d6117c8c4d2 [libc++][NFC] Use std:: instead of _VSTD:: in construct_at.h\nf543614ce641 [libc] Update dependency for __support_fputil_nearest_integer in bazel overlay.\n4c2ad195f8c9 [libc++][ranges] move all range iterators back in class\n3b059cd25b8c [libcxx][ranges] revert join_view::iterator and sentinel to be in-class\nc586b81347cb [X86][Win64] Precommit test for D143812\na55b35dbee6d [X86] combineVectorInsert - pull out Vec/Scl/Idx operands. NFC.\n0b0a38a7a229 [X86] combineX86ShufflesRecursively - don't widen shuffle subvector inputs\n5dc34eb379f4 Reland \"[mlir][func] Use the generated pass options in func to llvm.\"\n5ba396011377 [MLGO] Disable BB Profile Dump Test on NVPTX\n09e0f48c0a40 [MLGO] Enable BB Profile Dump Test without TFLite\n39da46826da8 Revert \"[mlir][func] Use the generated pass options in func to llvm.\"\n771d9c05afc2 [mlir][func] Use the generated pass options in func to llvm.\n19c42f672f94 [DFAPacketizer] Move DefaultVLIWScheduler class declaration to header file\n5fc73b7502fb [clang] Add test for CWG1111\n22fb66eb94b6 [clang][NFC] Add another example to CWG952 test\n89ba737bcf34 [clang] Mark CWG2165 as N/A\n5eaaf8f18093 Revert \"[clang] Mark CWG2165 as N/A\"\nd0e24f0c97ec [clang] Mark CWG2165 as N/A\n4663d784ddee [libc] Update macros/optimization.h build dependency for CMake and Bazel.\na630b8eefb41 [libc][Obvious] Fix static method declarations for FEnv class on macOS.\ne9e43e31d3bd [libc] Fix the regex detecting architecture triplet for macOS.\nd8e9a1a12557 [CMake] Use `LLVM_ENABLE_ASSERTIONS` to enable assertions in `libc++`\n29fa21eb6129 [lldb] Fix passing None as an env variable in TestMultipleDebuggers\n294ca122956f Adapt TestCustomShell and TestMultipleDebuggers to run under ASAN\n0ac8dfd0587a [lldb] Add an SB API to get progress events as SBStructuredData\ndc6427d687c4 [mlir][sparse] implement lowering rules for sparse_tensor::unpack\n6dbca86d838c [mlir][sparse] introduce sparse_tensor::unpack operation\ne74bb3471fc4 [libc++] Remove unused std::function test\ne7ade78a8ceb [dfsan] Fix some build-libc-list.py lint issues\n9db037d542d9 [mlir][sparse] fixed pack op documentation and purity\ndac423bd5718 [SanitizerBinaryMetadata] Fix ignorelist test with -Assert\ne8a79dc3d8eb [flang] Do not print backtrace for most TODOs.\nd2cc2c5610ff Revert \"[lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\"\nc46e15e1dec9 Revert \"[lldb][Test] TestExternalCtorDtorLookup.py: skip on Windows and dwo\"\n2979070f1b3a [libc++] Simplify non_default_alloc\n043550e33509 [Driver] Stop stack use after free\n9e57a5739d8b [bazel] Fix {clang,llvm}/unittests\n0751fc68b976 [libunwind] On Darwin, add a callback-based lookup scheme for JIT'd unwind info.\n89197b59f597 [openmp] Fix building z_Linux_asm.S for armv5t\n3de0bc4c3d02 [MLIR] Reintroduce shared attribute names in the LLVM dialect\ndb89896bbbd2 [InstCombine] Add tests for D143766. NFC\n811d11b064f7 [AMDGPU] Add GFX11 HW_REG_PERF_SNAPSHOT_*\na2dcd994a7f8 [mlir][tosa] Add TOSA f64 type support for cast op\ncd4ca2d7f991 [mlir] Port Conversion Passes to LLVM to use TableGen generated constructors and options\n3e57aa304f15 [llvm-driver] Reinvoke clang as described by llvm driver extra args\n1f173a0653e7 [llvm-driver] Pass extra arguments to tools\n34653a0a8a40 [Propeller] Change SHT_LLVM_BB_ADDR_MAP version to 2.\n8e13ec9eca1f [libc++] In tests, use `abort` to terminate upon an error.\n7ca3444fba73 AMDGPU: Use module flag to get code object version at IR level folow-up\n70acb3aab3a1 A slightly more concise AST dump :)\n83e84cdbe4bc [InstCombine] precommit tests for D143593\n81d0d2b2a068 [mlir][sparse] Sparse reduction in lex order no longer produces dense output\nae2d8b49713d [libc][math] Update exceptional cases for logf, log10f, log2f, log1pf.\n35188e02d1f2 [dfsan] Fix build-libc-list.py for Python 3 after D143701\na543d840ee0a Fix handling of -> calls for modernize-use-emplace\nf889d6f9d05b [lldb][Test] TestExternalCtorDtorLookup.py: skip on Windows and dwo\nc8b8d6baddf9 [Passes] Remove some legacy passes\n3a66446a9a0d [libc] add standalone strtoint/float fuzzers\n79a3803bb2cc [ClangScanDeps] Add UNSUPPORTED: system-windows to test P1689.cppm\ne7e577f68421 [clang-tidy] Clarify documention of `bugprone-unchecked-optional-access`.\n295f5fafcb55 [Assignment Tracking] Fix migrateDebuginfo in SROA\nc52255d26a23 [AArch64] Reassociate sub(x, add(m1, m2)) to sub(sub(x, m1), m2)\nd37a31cf237c [X86] Attempt to fix ubsan failure.\n185dbf9d6f00 [bazel] Port 81a79ee446\n1763c632544d [Attributor][NFCI] Use a set to track dependences\n86cce90e21c5 [Attributor][NFCI] Avoid AAIntraFnReachability updates if possible\na9557aacd1a9 [Attributor][NFCI] Use queries without exclusion set whenever possible\n294db31be748 [Attributor][FIX] Ensure we use the right set comparison\n76a19190269b [Attributor][NFC] Avoid unnecessary string operations\nbf9964fb138f [Attributor][NFCI] Create a AAIsDead for the function eagerly\n8bc0bee2f8ca [Attributor][NFCI] Avoid a temporary vector and exit early\n91e38bc76010 [libc++][NFC] Reorganize hash.h\nb296ddd91cb8 [lldb][DWARFASTParserClang] Attach linkage name to ctors/dtors if missing\nb8ef007fca1d Reland \"[llvm][dsymutil] Add DW_TAG_imported_declaration to accelerator table\"\n9497680067cc [ConstraintElim] Update getLastConstraint to return to last row. (NFC)\nff8742df9e65 [flang] Fixed selective TargetRewrite.\n81767f52f493 [mlir][OpenMP] Add support for using Opaque Pointers in the OpenMP Dialect\n2ca46421f85a [mlir][Async] Add option to LLVM lowering to use opaque pointers\n7da2d644e039 [clang] [extract-api] Don't crash for category in libclang APIs\n57606bb35619 [ConstraintElim] Improve debug test to show removed constraints (NFC).\n81a79ee446fe [mlir] Add function for checking if a block is inside a loop\naf39acda8873 [VectorCombine] fix insertion point of shuffles\n78f13ea093af [extract_symbols.py] Adjust how the output of nm is interpreted\na00f17d81efb [clang][dataflow] Convert nonnull pointer parameter to a reference.\nb87e53ee2ad1 Revert \"[mlgo] Fix test after D143624\"\n737e1cd161f3 [libc] Move likely/unlikely to the optimization header\n78056e2f2d95 [InstCombine] propagate FMF in exp2->ldexp fold\n3abea2b5447c [InstCombine] copy tail markings in exp2->ldexp fold\ne89180801cd2 [InstCombine] add 'tail' to exp2 call in test; NFC\n86bfeb906e3a Revert \"Inlining: Run the legacy AlwaysInliner before the regular inliner.\"\nc4a250ecea14 [AMDGPU][MC] Generate relative relocations for allocatable (more particularly, eh_frame) sections\nf1837c707478 [DebugInfo] Handle missed DW_FORM_addrx3 and DW_FORM_strx3 cases\n04f4c4cc59db [clangd] Move function body to out-of-line: unnamed class method incorrect moving\nfef08da4b75f [mlir][llvm] Store memory op metadata using op attributes.\n067a5c68845c [amdgpu-arch] Fix build of amdgpu-arch with CLANG_LINK_CLANG_DYLIB\nb252824e6e6e [clangd] fix wrong CalleeArgInfo in the hover\n08061a5f1db6 [gn build] Port 6470706bc0ed\na3060f0f37e3 [X86] combineConcatVectorOps - concatenate AVX512 vselect nodes. NFC.\n4a96893fc5ca [libc] Fix exp2f and prevent misuse of likely/unlikely\n065a8cf00812 [gn] port 6470706bc0e\n25d0f3c4d0d9 [Assignment Tracking] Fix fragment index error in getDerefOffsetInBytes\n4d7c879d33a2 [mlir][llvm] Adapt loop metadata to match llvm\n8470430107d0 [NFC][compiler-rt] Shorten comment\n1e658ad1728e [Workflow] Add Release Repo sync script\n8ccde9368f94 [CMake][compiler-rt] Support clang-cl in CompilerRTMockLLVMCMakeConfig\nb3477f579c86 [RISCV] Add tests for .attribute stack_align\n9dcd7195a21c [InstCombine] avoid crashing in pow->ldexp\n5cec69bb43bc [clang] Update Clang version from 16 to 17 in scan-build.1.\n62a0a1b9eea7 [InstCombine] avoid crashing in exp2->ldexp\nc2b7085d5c86 [InstCombine] add test for exp2->ldexp; NFC\n55c0719557a9 [InstCombine] auto-generate check lines in test file; NFC\nc4ce967e3437 ARM: skip debug instructions when matching jump-table patterns.\ndc700f1e4daf [mlir][bufferization] Restrict function boundary buffer. to func.call.\n1842b5885baa [bazel] Fix build and make all target respect layering_check\nd624b9217d35 [RISCV] Add precommit tests for D143646\nf0f8ae7596c4 [AMDGPU][AsmParser] Fix matching immediate literals.\n68adc028b42d [InstCombine][NFC] regenerate tests for simple_phi_condition.ll\nce2514a6dea7 [Test] Add complementary tests for OR analogous for those for AND\n393675dad0c0 [Test] Add test showing an opportunity to transform checks and hoist invariants\nbb8bd8c232e8 [SanitizerBinaryMetadata] Fix ignorelist test under Windows\nbaca3c150733 Move SIMD alignment calculation to LLVM Frontend\nc77c186a647b [LVI] Don't traverse uses when calculating range at use\n0737770c3e1d [LVI][CVP] Add test for miscompilation by CVP due to incorrect range returned by LVI\nd768bf994f50 [NFC][TargetParser] Replace uses of llvm/Support/Host.h\n4ad8f7a18957 [Assignment Tracking][mem2reg] Remove overly defensive assert\nbb059e85d61b [Assignment Tracking][SROA] Delete dbg.assigns linked to rewritten stores\n65f9719913ec Revert \"[C++20] [Modules] [ClangScanDeps] Enable to print make-style dependency file within P1689 format (4/4)\"\na674a12dd57e [WebAssembly] Additional patterns for pmin/pax\n9ec06f40d66e [flang][NFC] Clean up polymorphic-temp.f90\n421215b919d0 [SanitizerBinaryMetadata] Support ignore list\nc340956e4efc [NFC][Assignment Tracking] Remove lifetime intrinsics from some tests\nfaf029d9728f [Test][SCEV] Add tests where multiple assumes can be used to improve trip multiple\n09c52a49402c [bazel] Add missing dependency after 687f78210d0\n57edc61093d9 [NFC] convert compiler-rt/lib/dfsan/scripts/build-libc-list.py to python3 syntax\nb67b26acc2ab [libc][Obvious] Include MPFRWrapper and testutils only if tests are enabled.\n6eb13809fb6f [bazel] fix build for 6470706bc0ed\n14dedd9cf596 [Reland][LSR] Hoist IVInc to loop header if its all uses are in the loop header\nd9283e79d826 [libc] Run libc tests unconditionally, even if there are no source changes.\n2441c0730603 [mlir][bufferization] Support multiple leaves in EmptyTensorElimination\nf4ef08433fe7 [OPENMP][NFC] added loop bind to the support page\n79d2c26f89e1 [SimplifyIndVar][NFC] Refactor Binary Operator's flag strengthening\n288f688e294a [NFC] Add test to show that preprocess an import decl won't require to load it actually\n687f78210d07 [MLIR] Fold away divs and mods in affine ops with operand info\ndd380f9243de [NFC] Remove the unused parameter introduced in e135476\n92e904b9ce2d [flang][hlfir] Ramp-up support of implicit interface mismatches\nfc2c791e89cd [mlir][llvm] Fix TBAA verfication crash\n70924673af68 [RFC][GISel] Add a way to ignore COPY instructions in InstructionSelector\nd9a6fc82f56f [AMDGPU] Run unmerge …",
        "tree": {
          "url": "https://api.github.com/repos/Jahnav4977/mlir-mx/git/trees/6673480f178c18dcc743b1f61183a8eead4724a8",
          "sha": "6673480f178c18dcc743b1f61183a8eead4724a8"
        },
        "comment_count": 0
      },
      "author": {
        "login": "Lewuathe",
        "id": 1713047,
        "node_id": "MDQ6VXNlcjE3MTMwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1713047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lewuathe",
        "html_url": "https://github.com/Lewuathe",
        "followers_url": "https://api.github.com/users/Lewuathe/followers",
        "following_url": "https://api.github.com/users/Lewuathe/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lewuathe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lewuathe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lewuathe/subscriptions",
        "organizations_url": "https://api.github.com/users/Lewuathe/orgs",
        "repos_url": "https://api.github.com/users/Lewuathe/repos",
        "events_url": "https://api.github.com/users/Lewuathe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lewuathe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "Lewuathe",
        "id": 1713047,
        "node_id": "MDQ6VXNlcjE3MTMwNDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1713047?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Lewuathe",
        "html_url": "https://github.com/Lewuathe",
        "followers_url": "https://api.github.com/users/Lewuathe/followers",
        "following_url": "https://api.github.com/users/Lewuathe/following{/other_user}",
        "gists_url": "https://api.github.com/users/Lewuathe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Lewuathe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Lewuathe/subscriptions",
        "organizations_url": "https://api.github.com/users/Lewuathe/orgs",
        "repos_url": "https://api.github.com/users/Lewuathe/repos",
        "events_url": "https://api.github.com/users/Lewuathe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Lewuathe/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/Jahnav4977/mlir-mx/commits/59575d47b7b987c0f248b164547278a82ed0b456",
          "html_url": "https://github.com/Jahnav4977/mlir-mx/commit/59575d47b7b987c0f248b164547278a82ed0b456",
          "sha": "59575d47b7b987c0f248b164547278a82ed0b456"
        }
      ],
      "repository": {
        "id": 833435736,
        "node_id": "R_kgDOMa04WA",
        "name": "mlir-mx",
        "full_name": "Jahnav4977/mlir-mx",
        "private": false,
        "owner": {
          "login": "Jahnav4977",
          "id": 176465661,
          "node_id": "U_kgDOCoSm_Q",
          "avatar_url": "https://avatars.githubusercontent.com/u/176465661?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Jahnav4977",
          "html_url": "https://github.com/Jahnav4977",
          "followers_url": "https://api.github.com/users/Jahnav4977/followers",
          "following_url": "https://api.github.com/users/Jahnav4977/following{/other_user}",
          "gists_url": "https://api.github.com/users/Jahnav4977/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Jahnav4977/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Jahnav4977/subscriptions",
          "organizations_url": "https://api.github.com/users/Jahnav4977/orgs",
          "repos_url": "https://api.github.com/users/Jahnav4977/repos",
          "events_url": "https://api.github.com/users/Jahnav4977/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Jahnav4977/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/Jahnav4977/mlir-mx",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/Jahnav4977/mlir-mx",
        "forks_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/forks",
        "keys_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/teams",
        "hooks_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/hooks",
        "issue_events_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/issues/events{/number}",
        "events_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/events",
        "assignees_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/assignees{/user}",
        "branches_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/branches{/branch}",
        "tags_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/tags",
        "blobs_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/languages",
        "stargazers_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/stargazers",
        "contributors_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/contributors",
        "subscribers_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/subscribers",
        "subscription_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/subscription",
        "commits_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/contents/{+path}",
        "compare_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/merges",
        "archive_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/downloads",
        "issues_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/issues{/number}",
        "pulls_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/labels{/name}",
        "releases_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/releases{/id}",
        "deployments_url": "https://api.github.com/repos/Jahnav4977/mlir-mx/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/chaturay/serverless-artillery/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "sha": "146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "node_id": "MDY6Q29tbWl0MjM0NzIwNTkyOjE0NmE4OWJkMmI4ZWQ0MTQ2ZjU2YjQ3Y2JmYzdjODZjYmQxZWQ2NGE=",
      "html_url": "https://github.com/chaturay/serverless-artillery/commit/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
      "comments_url": "https://api.github.com/repos/chaturay/serverless-artillery/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a/comments",
      "commit": {
        "url": "https://api.github.com/repos/chaturay/serverless-artillery/git/commits/146a89bd2b8ed4146f56b47cbfc7c86cbd1ed64a",
        "author": {
          "date": "2019-04-15T13:41:15.000-07:00",
          "name": "Gregory W. Smith II",
          "email": "gws_ii@msn.com"
        },
        "committer": {
          "date": "2019-04-15T13:41:15.000-07:00",
          "name": "GitHub",
          "email": "noreply@github.com"
        },
        "message": "Object-oriented monitoring mode (#212)\n\n* [WIP] Add Update Command\r\n\r\nAdd update command to CLI\r\nEstablish versioning folder to contain:\r\n  1. old versions (for comparison)\r\n  2. version specific update logic\r\n\r\nPlease note that the migration of logic from ~/lib/index.js into the versioning folder was entirely incomplete, as was most of the thinking associated with design and factoring of this feature.\r\n\r\nOf particular note, this mostly implements the logic for taking an existing serverless.yml and non-destructively updating it with the monitoring mode assets.  Missing functionality included (as per #161) the updating of the package.json or of the handler's javascript files.  Update should be non-destructive, preserving any customizations that cannot be automatically transferred.\r\n\r\n* Implements validation of project dependencies for upgrade command in versioning module.\r\n\r\n* [WIP] Adds validation of service definition.\r\n\r\n* Unit tests all passing for validateServiceConfiguration (in upgrade context)  and validateServiceForDeployment.\r\n\r\n* Renames asset directories by version number.\r\nMakes local assets path a higher order parameter to versioning implementation.\r\nCorrected update -> upgrade.\r\nRelocate validateServiceForUpgrade function and test.\r\n\r\n* Uses AJV and JSON schema definitions capture required preconditions and naming conflicts in the function service definition (serverless.yml).\r\n\r\n* Implements the version by version upgrade by plugin mechanism.\r\n\r\n* Removes now deprecated upgrade code from lib/index.js.\r\n\r\n* Removes deprecated constants.\r\n\r\n* Adds README to explain myself. ;)\r\n\r\n* remove legacy files and add a delete-all-in-s3-bucket step before removing target\r\n\r\n* get the integration test runner working\r\n\r\n* add finishing touches, remove unnecessary tests, fix linting errors\r\n\r\n* WIP: Upgrade saves to directories.\r\n\r\n* Fix bugs preventing proper backup of project files and upgrade of package.json.\r\nEstablishes baseline versioning upgrade integration tests from 0.0.0 to 0.0.1.\r\n\r\n* Repair some unit test drift.\r\n\r\n* Refactor upgradeTest function to be more comprehensible.\r\n\r\n* Implement fetchListOfCalls, fix deployment bugs\r\n\r\n* Replace xmlhttprequest with node-fetch, remove unncessary comments\r\n\r\n* Fix typos and update versioning README to describe the revised backup mechanism.\r\nAdds manual upgrade script for testing.\r\n\r\n* Updated parsing of deploy target urls, adding instructions to README\r\n\r\n* Remove unnecessary debug logging.\r\n\r\n* Adding scripts for all test cases\r\n\r\n* Update issue templates for bug reports\r\n\r\n* Update issue templates\r\n\r\n* Create pull_request_template.md\r\n\r\n* Adds output during upgrade to list files which were backed up.\r\n\r\n* Minor adjustment to upgrade output.\r\n\r\n* More verbose output explaining the next steps for users to finalize project upgrade. Improved output in general.\r\n\r\n* Rename .github/PULL_REQUEST_TEMPLATE/pull_request_template.md to pull_request_template.md\r\n\r\n* Rename pull_request_template.md to .github/pull_request_template.md\r\n\r\n* Integration tests passing reliably, now just reporting results via CW.\r\nRemoves numbering on scripts and all elimiates ramp-down scenarios.\r\n\r\n* Corrected comment regarding use of Dynamo in test case.\r\n\r\n* Tweak in increase integration tests results.\r\n\r\n* Tweak in increase integration tests results.\r\nProvide more messaging while deploying and removing test projects.\r\n\r\n* Tweak in increase integration tests results.\r\nUpdate README and remove unnecessary xmlhttprequest dependency.\r\n\r\n* Update private artillery branch to one which records match and capture errors.\r\nClarify analysis code.\r\nCount and return error code on exit.\r\n\r\n* Update private artillery version.\r\n\r\n* Correct private artillery reference to specific commit.\r\n\r\n* Adjust how errors are reported for acceptance and monitoring now that results.errors is correct.\r\n\r\n* Initial tweaks to reporting results.\r\n\r\n* Expose factors in constant values for clarity.\r\n\r\n* Improved output for acceptance test cases to include either PASSED or FAILED with error.\r\n\r\n* Update to latest private Artillery version.\r\n\r\n* Renaming from event to script where appropriate.\r\nUsing factory pattern to generate artillery acceptance/monitoring/performance tasks which are then executed.\r\nBegin articulating artillery tasks in task.js.\r\n\r\n* Renaming from event to script where appropriate.\r\nUsing factory pattern to generate artillery acceptance/monitoring/performance tasks which are then executed.\r\nBegin articulating artillery tasks in task.js.\r\n\r\n* Renames defaultsToSettings to defaultSettings and makes available acceptanceSettings and monitoringSettings in taskDef.\r\n\r\n* Simplify implementation of getSetting in funcDef.\r\nSimplify validation in funcValid.\r\nRemove unnecessary else statements in taskValid.\r\n\r\n* WIP: Core Artillery Task with acceptance, monitoring and performance variants and tests.\r\n\r\n* Adds modes module.\r\n\r\n* Better naming for alert and planning modules.\r\nMake use of modes module.\r\n\r\n* Readability improvements. Provide default AWS region or read from environment for local invocation. Update how results are returned in performance and acceptance tasks.\r\n\r\n* Module for AWS platform settings.\r\n\r\n* Add analysis and sampling modules. Shift the handler.js to user new implementation and remove files associated with old implementation.\r\n\r\n* Acceptance mode properly reports errors and provides report total.\r\n\r\n* Fix bug where we did not honor the command line options for acceptance mode.\r\n\r\n* Adjust the expectations of integration test results.\r\nChecks actual errors against error budget when analyzing statistical results.\r\nRemoves some debug output to error stream.\r\nFix bug where we swallow SLS CLI failures.\r\nAdd script to debug lambda code locally.\r\n\r\n* WIP: Partial updates to test cases which include fixes.\r\n\r\n* Many files changed due to upgrade changes.\r\nUpdated unit tests fixed bugs they uncovered.\r\n * Corrected adding script genesis\r\n * References to incorrect sampling names\r\nAdjusted NPM run names to be more consistent.\r\nVarious lint fixes.\r\n\r\n* NPM audit fixes.\r\n\r\n* NPM audit fixes. Reintroduce necessary script injection code.\r\n\r\n* Correct passing of results for analysis in monitoring mode.\r\n\r\n* Fix bug in analyzeSamples where we get a singular report.\r\nCorrect parameters to analyzeMonitoring.\r\n\r\n* Correct indentation in analysis.js. Provide alerting directly to artillery monitoring task.\r\n\r\n* Fix analysis bugs to allow an errorBudget of 0.\r\n\r\n* Linting fixes.\r\nFixed bug related to alerting on monitoring analysis.\r\nRestored ramp-down test cases.\r\nUpdated alerting tests.\r\nAdjusted upgrate tests expected js-yaml version.\r\n\r\n* Remove debugging statement.\r\n\r\n* Revert ramp down integration tests.\r\n\r\n* Completed merge of single.worker.rampUp.yml script.\r\n\r\n* Remove script.yml as part of the `configure` command payload.\r\n\r\n* Update kill command to honor region option if passed and provide user guidance in the case of a configuration failure.\r\n\r\n* Kill command: revised \"function not deployed\" error message.\r\n\r\n* Revised test sampling run results error message.\r\nRemoved unnecessary TODOs.\r\n\r\n* Update upgrade testing to address bug and changes to the lambda implementation.\r\nNow that `npm install` seems to work properly, remove yarn-lock and restore package-lock.",
        "tree": {
          "url": "https://api.github.com/repos/chaturay/serverless-artillery/git/trees/774b71a18ffb65ad8011a04a8aaae95f2b0958ee",
          "sha": "774b71a18ffb65ad8011a04a8aaae95f2b0958ee"
        },
        "comment_count": 0
      },
      "author": {
        "login": "gwsii",
        "id": 1920378,
        "node_id": "MDQ6VXNlcjE5MjAzNzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1920378?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gwsii",
        "html_url": "https://github.com/gwsii",
        "followers_url": "https://api.github.com/users/gwsii/followers",
        "following_url": "https://api.github.com/users/gwsii/following{/other_user}",
        "gists_url": "https://api.github.com/users/gwsii/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gwsii/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gwsii/subscriptions",
        "organizations_url": "https://api.github.com/users/gwsii/orgs",
        "repos_url": "https://api.github.com/users/gwsii/repos",
        "events_url": "https://api.github.com/users/gwsii/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gwsii/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "web-flow",
        "id": 19864447,
        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/web-flow",
        "html_url": "https://github.com/web-flow",
        "followers_url": "https://api.github.com/users/web-flow/followers",
        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
        "organizations_url": "https://api.github.com/users/web-flow/orgs",
        "repos_url": "https://api.github.com/users/web-flow/repos",
        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
        "received_events_url": "https://api.github.com/users/web-flow/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/chaturay/serverless-artillery/commits/63ac18f361c8a236f69c61d2991aa09eeb8a34bd",
          "html_url": "https://github.com/chaturay/serverless-artillery/commit/63ac18f361c8a236f69c61d2991aa09eeb8a34bd",
          "sha": "63ac18f361c8a236f69c61d2991aa09eeb8a34bd"
        }
      ],
      "repository": {
        "id": 234720592,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMzQ3MjA1OTI=",
        "name": "serverless-artillery",
        "full_name": "chaturay/serverless-artillery",
        "private": false,
        "owner": {
          "login": "chaturay",
          "id": 46707745,
          "node_id": "MDQ6VXNlcjQ2NzA3NzQ1",
          "avatar_url": "https://avatars.githubusercontent.com/u/46707745?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/chaturay",
          "html_url": "https://github.com/chaturay",
          "followers_url": "https://api.github.com/users/chaturay/followers",
          "following_url": "https://api.github.com/users/chaturay/following{/other_user}",
          "gists_url": "https://api.github.com/users/chaturay/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/chaturay/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/chaturay/subscriptions",
          "organizations_url": "https://api.github.com/users/chaturay/orgs",
          "repos_url": "https://api.github.com/users/chaturay/repos",
          "events_url": "https://api.github.com/users/chaturay/events{/privacy}",
          "received_events_url": "https://api.github.com/users/chaturay/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/chaturay/serverless-artillery",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/chaturay/serverless-artillery",
        "forks_url": "https://api.github.com/repos/chaturay/serverless-artillery/forks",
        "keys_url": "https://api.github.com/repos/chaturay/serverless-artillery/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/chaturay/serverless-artillery/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/chaturay/serverless-artillery/teams",
        "hooks_url": "https://api.github.com/repos/chaturay/serverless-artillery/hooks",
        "issue_events_url": "https://api.github.com/repos/chaturay/serverless-artillery/issues/events{/number}",
        "events_url": "https://api.github.com/repos/chaturay/serverless-artillery/events",
        "assignees_url": "https://api.github.com/repos/chaturay/serverless-artillery/assignees{/user}",
        "branches_url": "https://api.github.com/repos/chaturay/serverless-artillery/branches{/branch}",
        "tags_url": "https://api.github.com/repos/chaturay/serverless-artillery/tags",
        "blobs_url": "https://api.github.com/repos/chaturay/serverless-artillery/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/chaturay/serverless-artillery/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/chaturay/serverless-artillery/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/chaturay/serverless-artillery/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/chaturay/serverless-artillery/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/chaturay/serverless-artillery/languages",
        "stargazers_url": "https://api.github.com/repos/chaturay/serverless-artillery/stargazers",
        "contributors_url": "https://api.github.com/repos/chaturay/serverless-artillery/contributors",
        "subscribers_url": "https://api.github.com/repos/chaturay/serverless-artillery/subscribers",
        "subscription_url": "https://api.github.com/repos/chaturay/serverless-artillery/subscription",
        "commits_url": "https://api.github.com/repos/chaturay/serverless-artillery/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/chaturay/serverless-artillery/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/chaturay/serverless-artillery/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/chaturay/serverless-artillery/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/chaturay/serverless-artillery/contents/{+path}",
        "compare_url": "https://api.github.com/repos/chaturay/serverless-artillery/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/chaturay/serverless-artillery/merges",
        "archive_url": "https://api.github.com/repos/chaturay/serverless-artillery/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/chaturay/serverless-artillery/downloads",
        "issues_url": "https://api.github.com/repos/chaturay/serverless-artillery/issues{/number}",
        "pulls_url": "https://api.github.com/repos/chaturay/serverless-artillery/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/chaturay/serverless-artillery/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/chaturay/serverless-artillery/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/chaturay/serverless-artillery/labels{/name}",
        "releases_url": "https://api.github.com/repos/chaturay/serverless-artillery/releases{/id}",
        "deployments_url": "https://api.github.com/repos/chaturay/serverless-artillery/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/caoloss/serverless-python-requirements/commits/137f8e1b1e10579a2b8db88a49c335329a3307dd",
      "sha": "137f8e1b1e10579a2b8db88a49c335329a3307dd",
      "node_id": "MDY6Q29tbWl0NTY0NzY3OTQ2OjEzN2Y4ZTFiMWUxMDU3OWEyYjhkYjg4YTQ5YzMzNTMyOWEzMzA3ZGQ=",
      "html_url": "https://github.com/caoloss/serverless-python-requirements/commit/137f8e1b1e10579a2b8db88a49c335329a3307dd",
      "comments_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/commits/137f8e1b1e10579a2b8db88a49c335329a3307dd/comments",
      "commit": {
        "url": "https://api.github.com/repos/caoloss/serverless-python-requirements/git/commits/137f8e1b1e10579a2b8db88a49c335329a3307dd",
        "author": {
          "date": "2018-09-08T19:25:30.000+02:00",
          "name": "Farley",
          "email": "farley@neonsurge.com"
        },
        "committer": {
          "date": "2018-09-08T13:25:30.000-04:00",
          "name": "Daniel Schep",
          "email": "dschep@gmail.com"
        },
        "message": "Download and static caching as a feature (#165)\n\nFixes #157 (filed by me)\r\n\r\n## What this does\r\n* Makes the download caching of pip a \"first-class citizen\" as an option directly in this plugin's options.  This will \"fix\" a few (attempts) at using the pip cache, specifically in Docker, and will simplify this feature (as the user simply has to enable it, not specify a folder).  In a future MR, I'd highly suggest enabling this by default.\r\n* Second, it adds a new type of caching called \"static caching\" which allows you to cache the outputs of this plugin.  This greatly speeds up every single build as long as you have the feature enabled and do not change your requirements.txt file.  In a future MR, I'd highly suggest enabling this by default also.\r\n* The pip download and static cache are shared between any projects of the same user through an [appdir](https://www.npmjs.com/package/appdirectory) cache folder when packaging your service.  This _especially_ helps on projects that heavily use Docker (Win/Mac) for deployments or development, or for pip modules that need to compile every time, and _especially_ for projects with long requirements.txt files.  This will also greatly help the longer and more complex your requirements.txt is, and/or if you use the same requirements.txt on multiple projects (common in team environments).\r\n\r\n## Implementation details\r\n* When either cache is enabled, this plugin now caches those requirements (download or static) to an \"appdir\" cache folder (per the [appdirectory](https://www.npmjs.com/package/appdirectory) node module).\r\n* When this feature is NOT enabled, nothing changes\r\n* Injection happens directly from the new cached requirements directory via a symlink created in the right place in `.serverless` or `.serverless/functionname` if deploying individually.\r\n* As mentioned above, there is a symlink into the .serverless folder when the static cache is enabled pointing to it, so you still \"know\" where your cache is (for both individually and non-individually packaged functions).\r\n* The requirements.txt \"generator\" was improved to remove comments, empty lines, and sort the list of items before trying to use it (or check its md5 sum).  This allows for more actual md5 matches between projects, in-case of comments and such in the requirements file.\r\n* A new command was added to the command-line to flush the download/static cache, called cleanCache invokable with: `serverless requirements cleanCache`.  This clears all items including the download and static cache.\r\n* A handful of new tests were created for various edge conditions I've found while doing this refactoring, some were based on bugs other people found while using this plugin with some combination of options, some are not directly related to this merge's intent, but it's just part of my stream of work/consciousness.  Sorry tests take a lot longer to run now since there are lots more now.\r\n* A UID bug fix related to docker + pip was implemented (seen on a few other bugs) from @cgrimal \r\n* The following new configurable custom options were added to this plugin...\r\n\r\nVariable Name | Value | Description\r\n--- | --- | ---\r\nuseStaticCache | `false/true` | Default: false.  This will enable or disable the static cache.  After  some testing I would like to make this default: true, as this will greatly help everyone, and there's no reason to not enable this.  Possibly making this default: true will help weed out issues faster.  I'll gladly step-up to quickly fix any bugs people have with it since I'm now well accustomed with the code.\r\nuseDownloadCache | `false/true` | Default: false.  This will enable or disable the pip download cache.  This was previously the \"example\" code using a pipEnvExtraCmd to specify a local folder to cache downloads to.  This does not require a cache location to be set, if not specified it will use an appdirs.usercache() location.\r\ncacheLocation | `<path>` | Default: [appdirectory](https://www.npmjs.com/package/appdirectory).userCache(appName: serverless-python-requirements) This will allow the user to specify where the caches (both static and download) should be stored.  This will be useful for people who want to do advanced things like storing cache globally shared between users, or for CI/CD build servers on shared-storage to allow multiple build machines to leverage a cache to speed builds up.  An example would be to mount a shared NFS store on all your CI/CD runners to `/mnt/shared` and set this value to `/mnt/shared/sls-py-cache`. \r\nstaticCacheMaxVersions | `<integer>` | Default: 0.  This will restrict the a maximum number of caches in the cache folder.  Setting to 0 makes no maximum number of versions.  This will be useful for build/CI/CD machines that have limited disk space and don't want to (potentially) infinitely cache hundreds/thousands of versions of items in cache. Although, I would be disturbed if a project had hundreds of changes to their requirements.txt file.\r\n\r\n## TODO\r\n- [X] Feature Implementation\r\n- [X] BUG: Deploying single-functions fails (Packaging works, but fails because of #161 )\r\n- [X] Code Styling / Linting\r\n- [X] Test to be sure Pipfile / generated requirements.txt still works\r\n- [X] Tested a bunch on Mac / Linux with and without Docker\r\n- [X] Adding Tests for Download Cache\r\n- [X] Make sure zip feature still works\r\n- [X] Ensure all existing tests pass\r\n- [X] Adding Tests for static cache\r\n- [X] Updating README.md to inform users how to use it\r\n- [X] Make sure dockerSsh works\r\n- [X] Implement error when trying to use --cache-dir with dockerizePip (won't work)\r\n- [X] Implement suggestion when trying to use --cache-dir without dockerizePip\r\n- [x] Test on Windows\r\n- [x] Iterate through any feedback\r\n- [x] Rebase with master constantly, awaiting merge...  :)\r\n\r\nReplaces #162",
        "tree": {
          "url": "https://api.github.com/repos/caoloss/serverless-python-requirements/git/trees/6cfc3b07c72dd036a479177d93ba803e6235eb0c",
          "sha": "6cfc3b07c72dd036a479177d93ba803e6235eb0c"
        },
        "comment_count": 0
      },
      "author": {
        "login": "AndrewFarley",
        "id": 470163,
        "node_id": "MDQ6VXNlcjQ3MDE2Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/470163?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndrewFarley",
        "html_url": "https://github.com/AndrewFarley",
        "followers_url": "https://api.github.com/users/AndrewFarley/followers",
        "following_url": "https://api.github.com/users/AndrewFarley/following{/other_user}",
        "gists_url": "https://api.github.com/users/AndrewFarley/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AndrewFarley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AndrewFarley/subscriptions",
        "organizations_url": "https://api.github.com/users/AndrewFarley/orgs",
        "repos_url": "https://api.github.com/users/AndrewFarley/repos",
        "events_url": "https://api.github.com/users/AndrewFarley/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AndrewFarley/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "dschep",
        "id": 667763,
        "node_id": "MDQ6VXNlcjY2Nzc2Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/667763?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dschep",
        "html_url": "https://github.com/dschep",
        "followers_url": "https://api.github.com/users/dschep/followers",
        "following_url": "https://api.github.com/users/dschep/following{/other_user}",
        "gists_url": "https://api.github.com/users/dschep/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dschep/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dschep/subscriptions",
        "organizations_url": "https://api.github.com/users/dschep/orgs",
        "repos_url": "https://api.github.com/users/dschep/repos",
        "events_url": "https://api.github.com/users/dschep/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dschep/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/caoloss/serverless-python-requirements/commits/01c1fb1f4aa476b0b86fb3643b2e0957a9b4423b",
          "html_url": "https://github.com/caoloss/serverless-python-requirements/commit/01c1fb1f4aa476b0b86fb3643b2e0957a9b4423b",
          "sha": "01c1fb1f4aa476b0b86fb3643b2e0957a9b4423b"
        }
      ],
      "repository": {
        "id": 564767946,
        "node_id": "R_kgDOIamsyg",
        "name": "serverless-python-requirements",
        "full_name": "caoloss/serverless-python-requirements",
        "private": false,
        "owner": {
          "login": "caoloss",
          "id": 90993910,
          "node_id": "MDQ6VXNlcjkwOTkzOTEw",
          "avatar_url": "https://avatars.githubusercontent.com/u/90993910?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/caoloss",
          "html_url": "https://github.com/caoloss",
          "followers_url": "https://api.github.com/users/caoloss/followers",
          "following_url": "https://api.github.com/users/caoloss/following{/other_user}",
          "gists_url": "https://api.github.com/users/caoloss/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/caoloss/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/caoloss/subscriptions",
          "organizations_url": "https://api.github.com/users/caoloss/orgs",
          "repos_url": "https://api.github.com/users/caoloss/repos",
          "events_url": "https://api.github.com/users/caoloss/events{/privacy}",
          "received_events_url": "https://api.github.com/users/caoloss/received_events",
          "type": "User",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/caoloss/serverless-python-requirements",
        "description": null,
        "fork": false,
        "url": "https://api.github.com/repos/caoloss/serverless-python-requirements",
        "forks_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/forks",
        "keys_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/teams",
        "hooks_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/hooks",
        "issue_events_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/issues/events{/number}",
        "events_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/events",
        "assignees_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/assignees{/user}",
        "branches_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/branches{/branch}",
        "tags_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/tags",
        "blobs_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/languages",
        "stargazers_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/stargazers",
        "contributors_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/contributors",
        "subscribers_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/subscribers",
        "subscription_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/subscription",
        "commits_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/contents/{+path}",
        "compare_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/merges",
        "archive_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/downloads",
        "issues_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/issues{/number}",
        "pulls_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/labels{/name}",
        "releases_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/releases{/id}",
        "deployments_url": "https://api.github.com/repos/caoloss/serverless-python-requirements/deployments"
      },
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/serverless/serverless-python-requirements/commits/137f8e1b1e10579a2b8db88a49c335329a3307dd",
      "sha": "137f8e1b1e10579a2b8db88a49c335329a3307dd",
      "node_id": "MDY6Q29tbWl0NzY1MDg1OTQ6MTM3ZjhlMWIxZTEwNTc5YTJiOGRiODhhNDljMzM1MzI5YTMzMDdkZA==",
      "html_url": "https://github.com/serverless/serverless-python-requirements/commit/137f8e1b1e10579a2b8db88a49c335329a3307dd",
      "comments_url": "https://api.github.com/repos/serverless/serverless-python-requirements/commits/137f8e1b1e10579a2b8db88a49c335329a3307dd/comments",
      "commit": {
        "url": "https://api.github.com/repos/serverless/serverless-python-requirements/git/commits/137f8e1b1e10579a2b8db88a49c335329a3307dd",
        "author": {
          "date": "2018-09-08T19:25:30.000+02:00",
          "name": "Farley",
          "email": "farley@neonsurge.com"
        },
        "committer": {
          "date": "2018-09-08T13:25:30.000-04:00",
          "name": "Daniel Schep",
          "email": "dschep@gmail.com"
        },
        "message": "Download and static caching as a feature (#165)\n\nFixes #157 (filed by me)\r\n\r\n## What this does\r\n* Makes the download caching of pip a \"first-class citizen\" as an option directly in this plugin's options.  This will \"fix\" a few (attempts) at using the pip cache, specifically in Docker, and will simplify this feature (as the user simply has to enable it, not specify a folder).  In a future MR, I'd highly suggest enabling this by default.\r\n* Second, it adds a new type of caching called \"static caching\" which allows you to cache the outputs of this plugin.  This greatly speeds up every single build as long as you have the feature enabled and do not change your requirements.txt file.  In a future MR, I'd highly suggest enabling this by default also.\r\n* The pip download and static cache are shared between any projects of the same user through an [appdir](https://www.npmjs.com/package/appdirectory) cache folder when packaging your service.  This _especially_ helps on projects that heavily use Docker (Win/Mac) for deployments or development, or for pip modules that need to compile every time, and _especially_ for projects with long requirements.txt files.  This will also greatly help the longer and more complex your requirements.txt is, and/or if you use the same requirements.txt on multiple projects (common in team environments).\r\n\r\n## Implementation details\r\n* When either cache is enabled, this plugin now caches those requirements (download or static) to an \"appdir\" cache folder (per the [appdirectory](https://www.npmjs.com/package/appdirectory) node module).\r\n* When this feature is NOT enabled, nothing changes\r\n* Injection happens directly from the new cached requirements directory via a symlink created in the right place in `.serverless` or `.serverless/functionname` if deploying individually.\r\n* As mentioned above, there is a symlink into the .serverless folder when the static cache is enabled pointing to it, so you still \"know\" where your cache is (for both individually and non-individually packaged functions).\r\n* The requirements.txt \"generator\" was improved to remove comments, empty lines, and sort the list of items before trying to use it (or check its md5 sum).  This allows for more actual md5 matches between projects, in-case of comments and such in the requirements file.\r\n* A new command was added to the command-line to flush the download/static cache, called cleanCache invokable with: `serverless requirements cleanCache`.  This clears all items including the download and static cache.\r\n* A handful of new tests were created for various edge conditions I've found while doing this refactoring, some were based on bugs other people found while using this plugin with some combination of options, some are not directly related to this merge's intent, but it's just part of my stream of work/consciousness.  Sorry tests take a lot longer to run now since there are lots more now.\r\n* A UID bug fix related to docker + pip was implemented (seen on a few other bugs) from @cgrimal \r\n* The following new configurable custom options were added to this plugin...\r\n\r\nVariable Name | Value | Description\r\n--- | --- | ---\r\nuseStaticCache | `false/true` | Default: false.  This will enable or disable the static cache.  After  some testing I would like to make this default: true, as this will greatly help everyone, and there's no reason to not enable this.  Possibly making this default: true will help weed out issues faster.  I'll gladly step-up to quickly fix any bugs people have with it since I'm now well accustomed with the code.\r\nuseDownloadCache | `false/true` | Default: false.  This will enable or disable the pip download cache.  This was previously the \"example\" code using a pipEnvExtraCmd to specify a local folder to cache downloads to.  This does not require a cache location to be set, if not specified it will use an appdirs.usercache() location.\r\ncacheLocation | `<path>` | Default: [appdirectory](https://www.npmjs.com/package/appdirectory).userCache(appName: serverless-python-requirements) This will allow the user to specify where the caches (both static and download) should be stored.  This will be useful for people who want to do advanced things like storing cache globally shared between users, or for CI/CD build servers on shared-storage to allow multiple build machines to leverage a cache to speed builds up.  An example would be to mount a shared NFS store on all your CI/CD runners to `/mnt/shared` and set this value to `/mnt/shared/sls-py-cache`. \r\nstaticCacheMaxVersions | `<integer>` | Default: 0.  This will restrict the a maximum number of caches in the cache folder.  Setting to 0 makes no maximum number of versions.  This will be useful for build/CI/CD machines that have limited disk space and don't want to (potentially) infinitely cache hundreds/thousands of versions of items in cache. Although, I would be disturbed if a project had hundreds of changes to their requirements.txt file.\r\n\r\n## TODO\r\n- [X] Feature Implementation\r\n- [X] BUG: Deploying single-functions fails (Packaging works, but fails because of #161 )\r\n- [X] Code Styling / Linting\r\n- [X] Test to be sure Pipfile / generated requirements.txt still works\r\n- [X] Tested a bunch on Mac / Linux with and without Docker\r\n- [X] Adding Tests for Download Cache\r\n- [X] Make sure zip feature still works\r\n- [X] Ensure all existing tests pass\r\n- [X] Adding Tests for static cache\r\n- [X] Updating README.md to inform users how to use it\r\n- [X] Make sure dockerSsh works\r\n- [X] Implement error when trying to use --cache-dir with dockerizePip (won't work)\r\n- [X] Implement suggestion when trying to use --cache-dir without dockerizePip\r\n- [x] Test on Windows\r\n- [x] Iterate through any feedback\r\n- [x] Rebase with master constantly, awaiting merge...  :)\r\n\r\nReplaces #162",
        "tree": {
          "url": "https://api.github.com/repos/serverless/serverless-python-requirements/git/trees/6cfc3b07c72dd036a479177d93ba803e6235eb0c",
          "sha": "6cfc3b07c72dd036a479177d93ba803e6235eb0c"
        },
        "comment_count": 0
      },
      "author": {
        "login": "AndrewFarley",
        "id": 470163,
        "node_id": "MDQ6VXNlcjQ3MDE2Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/470163?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AndrewFarley",
        "html_url": "https://github.com/AndrewFarley",
        "followers_url": "https://api.github.com/users/AndrewFarley/followers",
        "following_url": "https://api.github.com/users/AndrewFarley/following{/other_user}",
        "gists_url": "https://api.github.com/users/AndrewFarley/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AndrewFarley/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AndrewFarley/subscriptions",
        "organizations_url": "https://api.github.com/users/AndrewFarley/orgs",
        "repos_url": "https://api.github.com/users/AndrewFarley/repos",
        "events_url": "https://api.github.com/users/AndrewFarley/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AndrewFarley/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "committer": {
        "login": "dschep",
        "id": 667763,
        "node_id": "MDQ6VXNlcjY2Nzc2Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/667763?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dschep",
        "html_url": "https://github.com/dschep",
        "followers_url": "https://api.github.com/users/dschep/followers",
        "following_url": "https://api.github.com/users/dschep/following{/other_user}",
        "gists_url": "https://api.github.com/users/dschep/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dschep/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dschep/subscriptions",
        "organizations_url": "https://api.github.com/users/dschep/orgs",
        "repos_url": "https://api.github.com/users/dschep/repos",
        "events_url": "https://api.github.com/users/dschep/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dschep/received_events",
        "type": "User",
        "user_view_type": "public",
        "site_admin": false
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/serverless/serverless-python-requirements/commits/01c1fb1f4aa476b0b86fb3643b2e0957a9b4423b",
          "html_url": "https://github.com/serverless/serverless-python-requirements/commit/01c1fb1f4aa476b0b86fb3643b2e0957a9b4423b",
          "sha": "01c1fb1f4aa476b0b86fb3643b2e0957a9b4423b"
        }
      ],
      "repository": {
        "id": 76508594,
        "node_id": "MDEwOlJlcG9zaXRvcnk3NjUwODU5NA==",
        "name": "serverless-python-requirements",
        "full_name": "serverless/serverless-python-requirements",
        "private": false,
        "owner": {
          "login": "serverless",
          "id": 13742415,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNzQyNDE1",
          "avatar_url": "https://avatars.githubusercontent.com/u/13742415?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/serverless",
          "html_url": "https://github.com/serverless",
          "followers_url": "https://api.github.com/users/serverless/followers",
          "following_url": "https://api.github.com/users/serverless/following{/other_user}",
          "gists_url": "https://api.github.com/users/serverless/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/serverless/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/serverless/subscriptions",
          "organizations_url": "https://api.github.com/users/serverless/orgs",
          "repos_url": "https://api.github.com/users/serverless/repos",
          "events_url": "https://api.github.com/users/serverless/events{/privacy}",
          "received_events_url": "https://api.github.com/users/serverless/received_events",
          "type": "Organization",
          "user_view_type": "public",
          "site_admin": false
        },
        "html_url": "https://github.com/serverless/serverless-python-requirements",
        "description": "⚡️🐍📦 Serverless plugin to bundle Python packages",
        "fork": false,
        "url": "https://api.github.com/repos/serverless/serverless-python-requirements",
        "forks_url": "https://api.github.com/repos/serverless/serverless-python-requirements/forks",
        "keys_url": "https://api.github.com/repos/serverless/serverless-python-requirements/keys{/key_id}",
        "collaborators_url": "https://api.github.com/repos/serverless/serverless-python-requirements/collaborators{/collaborator}",
        "teams_url": "https://api.github.com/repos/serverless/serverless-python-requirements/teams",
        "hooks_url": "https://api.github.com/repos/serverless/serverless-python-requirements/hooks",
        "issue_events_url": "https://api.github.com/repos/serverless/serverless-python-requirements/issues/events{/number}",
        "events_url": "https://api.github.com/repos/serverless/serverless-python-requirements/events",
        "assignees_url": "https://api.github.com/repos/serverless/serverless-python-requirements/assignees{/user}",
        "branches_url": "https://api.github.com/repos/serverless/serverless-python-requirements/branches{/branch}",
        "tags_url": "https://api.github.com/repos/serverless/serverless-python-requirements/tags",
        "blobs_url": "https://api.github.com/repos/serverless/serverless-python-requirements/git/blobs{/sha}",
        "git_tags_url": "https://api.github.com/repos/serverless/serverless-python-requirements/git/tags{/sha}",
        "git_refs_url": "https://api.github.com/repos/serverless/serverless-python-requirements/git/refs{/sha}",
        "trees_url": "https://api.github.com/repos/serverless/serverless-python-requirements/git/trees{/sha}",
        "statuses_url": "https://api.github.com/repos/serverless/serverless-python-requirements/statuses/{sha}",
        "languages_url": "https://api.github.com/repos/serverless/serverless-python-requirements/languages",
        "stargazers_url": "https://api.github.com/repos/serverless/serverless-python-requirements/stargazers",
        "contributors_url": "https://api.github.com/repos/serverless/serverless-python-requirements/contributors",
        "subscribers_url": "https://api.github.com/repos/serverless/serverless-python-requirements/subscribers",
        "subscription_url": "https://api.github.com/repos/serverless/serverless-python-requirements/subscription",
        "commits_url": "https://api.github.com/repos/serverless/serverless-python-requirements/commits{/sha}",
        "git_commits_url": "https://api.github.com/repos/serverless/serverless-python-requirements/git/commits{/sha}",
        "comments_url": "https://api.github.com/repos/serverless/serverless-python-requirements/comments{/number}",
        "issue_comment_url": "https://api.github.com/repos/serverless/serverless-python-requirements/issues/comments{/number}",
        "contents_url": "https://api.github.com/repos/serverless/serverless-python-requirements/contents/{+path}",
        "compare_url": "https://api.github.com/repos/serverless/serverless-python-requirements/compare/{base}...{head}",
        "merges_url": "https://api.github.com/repos/serverless/serverless-python-requirements/merges",
        "archive_url": "https://api.github.com/repos/serverless/serverless-python-requirements/{archive_format}{/ref}",
        "downloads_url": "https://api.github.com/repos/serverless/serverless-python-requirements/downloads",
        "issues_url": "https://api.github.com/repos/serverless/serverless-python-requirements/issues{/number}",
        "pulls_url": "https://api.github.com/repos/serverless/serverless-python-requirements/pulls{/number}",
        "milestones_url": "https://api.github.com/repos/serverless/serverless-python-requirements/milestones{/number}",
        "notifications_url": "https://api.github.com/repos/serverless/serverless-python-requirements/notifications{?since,all,participating}",
        "labels_url": "https://api.github.com/repos/serverless/serverless-python-requirements/labels{/name}",
        "releases_url": "https://api.github.com/repos/serverless/serverless-python-requirements/releases{/id}",
        "deployments_url": "https://api.github.com/repos/serverless/serverless-python-requirements/deployments"
      },
      "score": 1.0
    }
  ]
}
